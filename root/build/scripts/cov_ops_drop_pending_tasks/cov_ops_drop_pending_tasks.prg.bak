/*****************************************************************************
  Covenant Health Information Technology
  Knoxville, Tennessee
******************************************************************************

	Author:				Chad Cummings
	Date Written:		02/01/2020
	Solution:			Perioperative
	Source file name:	cov_ops_drop_pending_tasks.prg
	Object name:		cov_ops_drop_pending_tasks
	Request #:

	Program purpose:

	Executing from:		CCL

 	Special Notes:		Called by ccl program(s).

******************************************************************************
  GENERATED MODIFICATION CONTROL LOG
******************************************************************************

Mod 	Mod Date	  Developer				      Comment
--- 	----------	--------------------	----------------------------------
000 	02/01/2020  Chad Cummings			Initial Release
******************************************************************************/

drop program cov_ops_drop_pending_tasks:dba go
create program cov_ops_drop_pending_tasks:dba

prompt 
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to. 

with OUTDEV


call echo(build("loading script:",curprog))
set nologvar = 0	;do not create log = 1		, create log = 0
set noaudvar = 0	;do not create audit = 1	, create audit = 0
%i ccluserdir:cov_custom_ccl_common.inc

call writeLog(build2("************************************************************"))
call writeLog(build2("* START Custom Section  ************************************"))

if (not(validate(reply,0)))
record  reply
(
	1 text = vc
	1 status_data
	 2 status = c1
	 2 subeventstatus[1]
	  3 operationname = c15
	  3 operationstatus = c1
	  3 targetobjectname = c15
	  3 targetobjectvalue = c100
)
endif

call set_codevalues(null)
call check_ops(null)

free set t_rec
record t_rec
(
	1 cnt			= i4
	1 max_cnt 		= i4
	1 day_cnt		= i2
	1 day_string	= vc
	1 begin_dt_tm	= dq8
	1 task_qual[*]
	 2 task_id		= f8
)

set t_rec->day_cnt = value(parameter(2,0))
if	(size(trim(reflect(parameter(2,0))),1) > 0)
  set t_rec->day_cnt = value(parameter(2,0))
  call writeLog(build2("->t_rec->day_cnt =",trim(cnvtstring(t_rec->day_cnt))))
endif

if (t_rec->day_cnt = 0)
	set t_rec->day_cnt = 14
	call writeLog(build2("->no parameter sent, setting t_rec->day_cnt =",trim(cnvtstring(t_rec->day_cnt))))
endif

set t_rec->day_string = concat(^"^,trim(cnvtstring(t_rec->day_cnt)),^,D"^)

set t_rec->begin_dt_tm = datetimefind(cnvtlookbehind(t_rec->day_string,cnvtdatetime(curdate,curtime3)), 'D', 'B', 'B')

;call addEmailLog("chad.cummings@covhlth.com")

call writeLog(build2("* END   Custom Section  ************************************"))
call writeLog(build2("************************************************************"))

call writeLog(build2("* START Finding Tasks **************************************"))

select into "nl:"
from
	task_activity ta
plan ta
	where 	ta.task_status_cd 	in(
									 code_values->cv.cs_79.overdue_cd
									,code_values->cv.cs_79.pending_cd
								   )
	and   	ta.task_create_dt_tm <= cnvtdatetime(t_rec->begin_dt_tm)
	and 	ta.active_ind = 1
order by
	ta.task_id
head ta.task_id	
	t_rec->cnt = (t_rec->cnt + 1)
	stat = alterlist(t_rec->task_qual,t_rec->cnt)
	t_rec->task_qual[t_rec->cnt].task_id = ta.task_id
with nocounter

if (t_rec->cnt = 0)
	call writeLog(build2("** NO TASKS FOUND TO DROPPED, EXITING"))
	set reply->status_data.status = "Z"
	go to exit_script
else
	call writeLog(build2("** Found tasks to drop, cnt=",trim(cnvtstring(t_rec->cnt))))
endif

call writeLog(build2("* END   Finding Tasks **************************************"))


call writeLog(build2("* START Dropping Tasks *************************************"))

if (program_log->curdomain != "m0665")
	call writeLog(build2("** INCORRECT DOMAIN, EXITING WITHOUT UPDATE"))
	set reply->status_data.status = "Z"
	go to exit_script
endif

/*
update into
	 task_activity ta
	,(dummyt d1 with seq = t_rec->cnt)
set 
	 ta.task_status_cd 	= code_values->cv.cs_79.dropped_cd
	,ta.updt_id 		= reqinfo->updt_id
	,ta.updt_task		= reqinfo->updt_task
	,ta.updt_applctx	= reqinfo->updt_applctx
	,ta.updt_cnt		= ta.updt_cnt + 1
plan d1
join ta
	where ta.task_id = t_rec->task_qual[d1.seq].task_id
with nocounter, rdbarrayinsert = 1
commit
*/

if (t_rec->cnt > 100000)
	set t_rec->max_cnt = 100000
else
	set t_rec->max_cnt = t_rec->cnt
endif

call writeLog(build2("-->t_rec->max_cnt=",trim(cnvtstring(t_rec->max_cnt))))
for (i=1 to t_rec->max_cnt)
	call writeLog(build2("* Starting t_rec->task_qual[",trim(cnvtstring(i)),"].task_id=",
		trim(cnvtstring(t_rec->task_qual[i].task_id))," for update"))
	update into
	 task_activity ta
	set 
		 ta.task_status_cd 	= code_values->cv.cs_79.dropped_cd
		,ta.updt_id 		= reqinfo->updt_id
		,ta.updt_task		= reqinfo->updt_task
		,ta.updt_applctx	= reqinfo->updt_applctx
		,ta.updt_cnt		= ta.updt_cnt + 1
		,ta.updt_dt_tm		= cnvtdatetime(curdate,curtime3)
	where 
		ta.task_id = t_rec->task_qual[i].task_id
	with counter
	commit
endfor

set reply->status_data.status = "S"

call writeLog(build2("* END   Dropping Tasks *************************************"))



call writeLog(build2("************************************************************"))
call writeLog(build2("* START Custom   *******************************************"))
call writeLog(build2("* END   Custom   *******************************************"))
call writeLog(build2("************************************************************"))

#exit_script
call exitScript(null)
call echorecord(code_values)
call echorecord(program_log)
call echorecord(t_rec)

end
go
