/*****************************************************************************
  Covenant Health Information Technology
  Knoxville, Tennessee
******************************************************************************

	Author:				Chad Cummings
	Date Written:		   	01/20/2020
	Solution:			
	Source file name:	 	cov_mpage_audit.prg
	Object name:		   	cov_mpage_audit
	Request #:

	Program purpose:

	Executing from:		CCL

 	Special Notes:		Called by ccl program(s).

******************************************************************************
  GENERATED MODIFICATION CONTROL LOG
******************************************************************************

Mod 	Mod Date	  Developer				      Comment
--- 	----------	--------------------	--------------------------------------
001 	01/20/2020  Chad Cummings			Initial Deployment
******************************************************************************/

drop program cov_mpage_audit:dba go
create program cov_mpage_audit:dba

prompt 
	"Output to File/Printer/MINE" = "MINE"
	, "MPage to Audit" = "" 

with OUTDEV, MPAGE


call echo(build("loading script:",curprog))
set nologvar = 0	;do not create log = 1		, create log = 0
set noaudvar = 0	;do not create audit = 1	, create audit = 0
%i ccluserdir:cov_custom_ccl_common.inc

call writeLog(build2("************************************************************"))
call writeLog(build2("* START Custom Section  ************************************"))

if (not(validate(reply,0)))
record  reply
(
	1 text = vc
	1 status_data
	 2 status = c1
	 2 subeventstatus[1]
	  3 operationname = c15
	  3 operationstatus = c1
	  3 targetobjectname = c15
	  3 targetobjectvalue = c100
)
endif

call set_codevalues(null)
call check_ops(null)

free set t_rec
record t_rec
(
	1 cnt			= i4
)

;call addEmailLog("chad.cummings@covhlth.com")

call writeLog(build2("* END   Custom Section  ************************************"))
call writeLog(build2("************************************************************"))


call writeLog(build2("* START Finding MPage Data  ************************************"))



select into $OUTDEV
Application = app.description
, Position_Display = evaluate(
  uar_get_code_display(v.position_cd)
  , " ", "-GLOBAL-"
  , uar_get_code_display(v.position_cd), uar_get_code_display(v.position_cd)
  )
, Tab_Name = n.pvc_value
;, v.frame_type
;, Report_Name = evaluate(
;  n3.pvc_value
;  , " ", "-Not Set-"
;  , n3.pvc_value, n3.pvc_value
;  )
;, n3.name_value_prefs_id
;, Report_Param = evaluate(
;  n2.pvc_value
;  , " ", "-Not Set-"
;  , n2.pvc_value, n2.pvc_value
;  )
;, n2.name_value_prefs_id
    ,ViewPoint = mpv.viewpoint_name
    ,MPage = br.category_name
    ,Layout = evaluate(br.layout_flag,0,"Summary",1,"Workflow")
    ,br.br_datamart_category_id
    ,component.report_name
    ,component.report_mean
    ,filter.filter_display
    ,filter.filter_mean
    ,value.mpage_param_mean
    ,value.mpage_param_value
    ,value.freetext_desc
    ,value.parent_entity_name
    ,value.parent_entity_id
from
name_value_prefs n
, view_prefs v
, code_value cv
, application app
, name_value_prefs n2
, name_value_prefs n3
, detail_prefs dp
, mp_viewpoint_reltn mvr
, br_datamart_category br
, mp_viewpoint mpv
,br_datamart_report component
    ,br_datamart_report_filter_r filter_reltn
    ,br_datamart_filter filter
    ,br_datamart_value value
plan n where n.pvc_name = outerjoin("VIEW_CAPTION")
join v where n.parent_entity_id = v.view_prefs_id
and v.view_name IN ( "DISCERNRPT" , "MCDISCERNRPT")
join app where v.application_number = app.application_number
join cv where cv.code_value = v.position_cd
       and (
                     (
                     cv.active_ind = 1
                     and cv.display_key != "ZZ*"
                     )
              or cv.code_value = 0
              )
join dp where dp.application_number = v.application_number
and dp.position_cd = v.position_cd
and dp.view_name IN ( "DISCERNRPT" , "MCDISCERNRPT")
and dp.view_seq = v.view_seq
and dp.person_id = 0
join n2 where n2.parent_entity_id = outerjoin(dp.detail_prefs_id)
and n2.pvc_name = outerjoin("REPORT_PARAM")
join n3 where n3.parent_entity_id = dp.detail_prefs_id
and n3.pvc_name = "REPORT_NAME"
join mpv
    where mpv.active_ind = 1
    and operator(n2.pvc_value, 'REGEXPLIKE', mpv.viewpoint_name_key)
join mvr
    where mvr.mp_viewpoint_id = mpv.mp_viewpoint_id
join br
    where br.br_datamart_category_id = mvr.br_datamart_category_id
    and br.category_name = $MPAGE ;modify to filter by specific mpage
join component
    where component.br_datamart_category_id = br.br_datamart_category_id
    ;and component.report_mean = "*"
join filter_reltn
    where filter_reltn.br_datamart_report_id = component.br_datamart_report_id
join filter
    where filter.br_datamart_filter_id = filter_reltn.br_datamart_filter_id
    ;and   filter.filter_mean = "*"
join value
    where value.br_datamart_filter_id = filter.br_datamart_filter_id
order by v.view_name, Application, Position_Display
with format, seperator = " ", nocounter


call writeLog(build2("* END   Finding MPage Data  ************************************"))

call writeLog(build2("************************************************************"))
call writeLog(build2("* START Custom   ************************************"))
call writeLog(build2("* END   Custom   ************************************"))
call writeLog(build2("************************************************************"))

#exit_script
call exitScript(null)
call echorecord(t_rec)
call echorecord(code_values)
call echorecord(program_log)


end
go
