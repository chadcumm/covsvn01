drop program a08_cust_gen_hl7:dba go
create program a08_cust_gen_hl7:dba
 
/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/****************************************************************************
        Source file name:       a08_cust_gen_hl7.prg
        Object name:            a08_cust_gen_hl7
        Request #:
        Product:
        Product Team:           ERM
        HNA Version:
        CCL Version:
 
        Program purpose:
 
        Tables read:
        Tables updated:
        Executing from:		CCL
 
        Special Notes:
 
****************************************************************************/
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     *000 05/2008     			 Initial Release                    *
;~DE~************************************************************************
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 

 
PROMPT "Resume From Last Encntr_id  (Y/N)                         [Y]: " = "Y",
       "OR Start from Encntr_id     (eid)                         []: " = "",
       "Maximum Number of Transactions to Process (number or ALL) [100]: " = "100"
 
set trace nocost                        ; turn off cost displaying
set message noinformation               ; turn off info displaying
 
%i cust_gen_hl7.inc

 
free set t_rec
record t_rec (
 1 row_cnt = i4
 1 resume_ind = i2
 1 start_encntr_id = f8
 1 max_transactions = f8
 1 error_message = vc
 1 epic_adt = f8
 1 epic_sch = f8
 1 mpaccomm = f8
 1 maxencntr_id = f8
 1 minencntr_id = f8
 1 encntrs_processed = i4
 1 ids_cnt = i4
 1 ids[*]
  2 person_id = f8
  2 encntr_id = f8 )
 
 
if (cnvtupper(trim($1,3)) = "Y")
 set t_rec->resume_ind = 1
 select into "nl:"
  u.seq
 from upmc_resume_hl7 u
 plan u
  where u.resume_id = 1
 detail
  t_rec->start_encntr_id = u.start_encntr_id
 with nocounter
 if (t_rec->start_encntr_id <= 0)
  call EchoOut("error - could not find last encntr_id on a08_cust_gen_hl7 - aborting.")
  go to 9999_END
 endif
else
 set t_rec->resume_ind = 0
 set t_rec->start_encntr_id = cnvtreal($2)
 if (t_rec->start_encntr_id <= 0)
  call EchoOut("error - user did not enter last encntr_id - aborting.")
  go to 9999_END
 endif
endif
 
if (cnvtupper(trim($3,3)) = "ALL")
 set t_rec->max_transactions = -1
else
 set t_rec->max_transactions = cnvtreal($3)
 if (t_rec->max_transactions <= 0)
  call EchoOut("error - user did not enter max transactions - aborting.")
  go to 9999_END
 endif
endif
 
select  into  "nl:"
 u.last_number
from ( user_sequences  u )
 where (u.sequence_name= "ENCOUNTER_ONLY_SEQ" )
detail
 t_rec->maxencntr_id = u.last_number
 t_rec->minencntr_id = 1
 with  nocounter
 
call fillcontrolstructure (t_rec->maxencntr_id,100000)
set t_rec->row_cnt = size ( rows -> qual ,  5 )
 
if (t_rec->resume_ind = 1)
 call EchoOut("resuming from where we last left off ...")
endif
call EchoOut(concat("starting from encntr_id: ", cnvtstring(t_rec->start_encntr_id)))
if (t_rec->max_transactions > 0)
 call EchoOut(concat("number of transactions to send outbound: ", cnvtstring(t_rec->max_transactions)))
else
 call EchoOut("sending all encounters outbound")
endif
call EchoOut(concat("max encntr_id in system: ", cnvtstring(t_rec->maxencntr_id)))
 
call EchoOut("<<<<<<BEGINNING HL7 GENERATION>>>>>>")
 
for (  qq  =  1  to  size ( rows -> qual ,  5 ) )
 set  t_rec->ids_cnt  =  0
 set  stat = alterlist ( t_rec->ids,  0 )
 
 set  stat = alterlist ( t_rec->ids,  100 )
 
 select  into  "nl:"
  e.seq
 from ( encounter  e )
 where e.encntr_id > rows -> qual [ qq ]-> id_start
   and e.encntr_id <= rows -> qual [ qq ]-> id_end
   and e.encntr_id > t_rec->start_encntr_id
   and e.active_ind+0 = 1
   and e.beg_effective_dt_tm+0 <= cnvtdatetime ( curdate ,  curtime3 )
   and e.end_effective_dt_tm+0 >= cnvtdatetime ( curdate ,  curtime3 )
   and e.contributor_system_cd +0 in (0.0)
 head report
  t_rec->ids_cnt = 0
 detail
  t_rec->ids_cnt = t_rec->ids_cnt + 1
  if (mod(t_rec->ids_cnt,100) = 1 and t_rec->ids_cnt != 1)
   stat = alterlist(t_rec->ids,t_rec->ids_cnt+100)
  endif
  t_rec->ids[t_rec->ids_cnt]->encntr_id = e.encntr_id
  t_rec->ids[t_rec->ids_cnt]->person_id = e.person_id
 with  nocounter
 
 set stat = alterlist(t_rec->ids,t_rec->ids_cnt)
 
 if (t_rec->ids_cnt <= 0)
  call EchoOut( concat ( "no records found for this batch: " ,  trim(cnvtstring(qq),3)))
 else
  call EchoOut(concat("done loading... added ", cnvtstring(t_rec->ids_cnt), " in batch ",trim(cnvtstring(qq),3)))
 
  for (i = 1 to t_rec->ids_cnt)
 
   call send_outbound(t_rec->ids[i]->person_id,t_rec->ids[i]->encntr_id,t_rec->ids[i]->person_id,"A08")
   free set action
 
   set t_rec->encntrs_processed = t_rec->encntrs_processed + 1
   if ( mod ( t_rec->encntrs_processed ,  500 )= 0 )
    call EchoOut(concat("Number of HL7 processed: ", cnvtstring(t_rec->encntrs_processed)))
   endif
 
   update into a08_cust_gen_hl7 u
    set u.start_encntr_id = t_rec->ids[i]->encntr_id
   where u.resume_id = 1
   with nocounter
 
   commit
 
   if (t_rec->max_transactions > 0)
    if (t_rec->encntrs_processed >= t_rec->max_transactions)
     call EchoOut("--> max number of transactions achieved <--")
     set i = t_rec->ids_cnt + 10
     set qq = t_rec->row_cnt + 10
    endif
   endif
 
  endfor
 endif
endfor
 
 
 
#9999_END
call EchoOut("done")
 
;call echorecord(t_rec)
 
free set t_rec
free set rows
 
 
end go
 