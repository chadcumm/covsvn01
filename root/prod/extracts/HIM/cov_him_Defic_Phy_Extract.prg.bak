/*****************************************************************************
  Covenant Health Information Technology
  Knoxville, Tennessee
******************************************************************************
 
	Author:				Todd A. Blanchard
	Date Written:		05/21/2019
	Solution:			Revenue Cycle - HIM
	Source file name:	cov_him_Deficiency_Physician_Extract.prg
	Object name:		cov_him_Deficiency_Physician_Extract
	Request #:			4947
 
	Program purpose:	Lists deficiencies for physicians.
 
	Executing from:		CCL
 
 	Special Notes:		Default start date is go-live date (5/1/2018).
 						Output file: him_defic_phy.csv
 
******************************************************************************
  GENERATED MODIFICATION CONTROL LOG
******************************************************************************
 
 	Mod Date	Developer				Comment
 	----------	--------------------	--------------------------------------
001	11/13/2019	Todd A. Blanchard		Added discharge date range prompts to
										cov_mak_defic_by_phys_ccl.
002	11/21/2019	Todd A. Blanchard		Added date variables and date handling logic.
 
******************************************************************************/
 
drop program cov_him_Defic_Phy_Extract:DBA go
create program cov_him_Defic_Phy_Extract:DBA
 
prompt
	"Output to File/Printer/MINE" = "MINE"
	, "Facility(ies)" = ""
	, "Discharge Start Date" = "SYSDATE"     ;* Enter the start date for the discharge date range.
	, "Discharge End Date" = "SYSDATE"       ;* Enter the end date for the discharge date range.
	, "Output To File" = 0                   ;* Output to file
 
with OUTDEV, ORGANIZATIONS, start_datetime, end_datetime, output_file
 
 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare start_datetime			= dq8 with noconstant(cnvtdatetime("01-MAY-2018 000000")) ;002
declare end_datetime			= dq8 with noconstant(cnvtdatetime(curdate, 235959)) ;002

declare file_var				= vc with constant("him_defic_phy.csv")
 
declare temppath_var			= vc with constant(build("cer_temp:", file_var))
declare temppath2_var			= vc with constant(build("$cer_temp/", file_var))
 
declare filepath_var			= vc with constant(build("/cerner/w_custom/", cnvtlower(curdomain),
														 "_cust/to_client_site/RevenueCycle/HIM/", file_var))
 
declare output_var				= vc with noconstant("")
 
declare cmd						= vc with noconstant("")
declare len						= i4 with noconstant(0)
declare stat					= i4 with noconstant(0)
 
 
; define output value
if (validate(request->batch_selection) = 1 or $output_file = 1)
	set output_var = value(temppath_var)
else
	set output_var = value($OUTDEV)
endif
	
;002
if (validate(request->batch_selection) != 1)
	set start_datetime = cnvtdatetime($start_datetime)
	set end_datetime = cnvtdatetime($end_datetime)
endif
 
 
/**************************************************************
; DVDev Start Coding
**************************************************************/
 
execute cov_mak_defic_by_phys_ccl $OUTDEV, $ORGANIZATIONS, 0.0, start_datetime, end_datetime ;001 ;002
 
 
/**************************************************************/
; select active lab orders on scheduled encounters data
if (validate(request->batch_selection) = 1 or $output_file = 1)
	set modify filestream
endif
 
select if (validate(request->batch_selection) = 1 or $output_file = 1)
	with nocounter, pcformat (^"^, ^,^, 1), format = stream, format
else
	with nocounter, separator = " ", format
endif
 
distinct into value(output_var)
	location				= t_rec->qual[d.seq].location
	, physician_position	= substring(1, 50, t_rec->qual[d.seq].physician_position)
	, physician_name		= substring(1, 50, t_rec->qual[d.seq].physician_name)
	, physician_star_id		= t_rec->qual[d.seq].physician_star_id
	, patient_name			= substring(1, 50, t_rec->qual[d.seq].patient_name)
	, mrn					= substring(1, 15, t_rec->qual[d.seq].mrn)
	, fin					= substring(1, 15, t_rec->qual[d.seq].fin)
	, discharge_dt_tm		= t_rec->qual[d.seq].discharge_dt_tm ";;q"
	, deficiency			= substring(1, 50, t_rec->qual[d.seq].deficiency)
	, status				= substring(1, 15, t_rec->qual[d.seq].status)
	, deficiency_age_days	= t_rec->qual[d.seq].deficiency_age_days
	, deficiency_age_hours	= t_rec->qual[d.seq].deficiency_age_hours
	, encounter_type		= substring(1, 15, t_rec->qual[d.seq].encounter_type)
	, physician_id			= t_rec->qual[d.seq].physician_id
	, scanned_image			= t_rec->qual[d.seq].scanned_image
	, scanning_prsnl		= substring(1, 50, t_rec->qual[d.seq].scanning_prsnl)
	, event_id				= t_rec->qual[d.seq].event_id
 
from (dummyt d with seq = t_rec->cnt)
 
plan d
where
	t_rec->qual[d.seq].event_id > 0.0
	and t_rec->qual[d.seq].physician_name != "HIM, REFUSAL INBOX Cerner"
 
 
/**************************************************************/
; copy file to AStream
if (validate(request->batch_selection) = 1 or $output_file = 1)
	set cmd = build2("cp ", temppath2_var, " ", filepath_var)
	set len = size(trim(cmd))
 
	call dcl(cmd, len, stat)
	call echo(build2(cmd, " : ", stat))
endif
 
 
;go to exitscript
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
#exitscript
 
end
go
 
