ALTER PROCEDURE [dbo].[cov_patient_survey_pressganey_sp] (@runtype AS VARCHAR(1))   
--------------------------------------------------------------------------------------------  
-- Author: Dawn Greer, DBA  
-- Create date: 9/26/2018  
--  
-- Procedure Name: cov_patient_survey_pressganey_sp  
-- Description: Pull information from NextGen to  
--  send patient surveys to Press Ganey to  
--  process.  
  
-- Modifications:  
-- 11/06/2018 - DG - Deceased_Flag logic was wrong so it's been updated  
-- 01/08/2019 - DG - Changed the Location_name from lm.location_name to mllm.mstr_list_item_desc  
-- 03/06/2019 - DG - Added FSWMN code to be pulled  
-- 03/28/2019 - DG - Added KNS and PNN code to be pulled.  
-- 05/06/2019 - DG - Added a process to be able to exclude providers  
-- 05/20/2019 - DG - Added criteria to exclude when the charge is 'Error'  
--      Also put in criteria to exclude when the DOS is > 90 days.  
-- 09/09/2019 - DG - Added Location Cumberland Diabetes Services (CDS) to the query.  
-- 09/17/2019 - DG - Added Code for Mountain View Family Medicine Pigeon Forge as MVFMPF  
-- 11/01/2019 - DG - Remove special characters from the Admit Time and Discharge Time  
--      and add 'N' for fields No_Publicity_Flag,State_Regulation_Flag,  
--      Newborn_Patient,Transferred_Admitted_To_Inpatient  
-- 01/08/2020 - DG - Removed TNBSW (TN Brain and Spine West per IN990395)  
-- 02/07/2020 - DG - Moved to Cerner  
-- 02/25/2020 - DG - Re-Created to run for Oak Ridge Surgeons and  
--  Centers for Reproductive Medicine and Pelvic Pain  
-- 07/21/2020 - DG - Moved to NGSQL02DB and setup to export.  
-- 07/27/2020 - DG - Added code to exclude patients who do not want a survey  
--  and set Fast_Track_Acute_Acute Field to show a 'T' when charge is 'TEL'  
--  and 'O' for all others.  
--  CASE WHEN c.service_item_id = 'TEL' THEN 'T' ELSE 'O' END AS Fast_Track_Acute_Flag,  
-- 07/29/2020 - DG - Added code to pull the Contact Preference to determine whether to  
--    send the patient to Press Ganey.  
-- 08/18/2020 - DG - Added documentation for date section and fixed issue with Tele visits  
--    showing multiple rows.  
-- 08/21/2020 - DG - Added CPC Claiborne Primary Care to the list of clinics to pull  
-- 08/24/2020 - DG - Added PCA Parkway Cardiology Associates and removed CPC from the pull  
--   Removed ORDER BY Location_Name, Last_Name, First_Name, Unique_ID  
--   Added ISNULL around the Race field.  
-- 09/21/2020 - DG - Added parameter to determine if it is a daily run or update run.
--   Removed the code selecting the date range.  The Daily run will run for 15 days back through
--   yesterday every day of the week.  The Update run will be 90 days back through yesterday.
--
-- Execute Example:  
--  exec cov_patient_survey_pressganey_sp '<runtype>'
--  exec cov_patient_survey_pressganey_sp 'D'
--  exec cov_patient_survey_pressganey_sp 'U'
----------------------------------------------------------------------------------------------  
AS  
BEGIN  
-- SET NOCOUNT ON added to prevent extra result sets from  
 -- interfering with SELECT statements.  
 SET NOCOUNT ON;  
  
DECLARE @sd VARCHAR(10),  
@ed VARCHAR(10)  

IF @runtype = 'D'
BEGIN
	SET @sd = CONVERT(VARCHAR, DATEADD(dd, -15, GETDATE()), 112)     ---15
	SET @ed = CONVERT(VARCHAR, DATEADD(dd, -1, GETDATE()), 112)  
END
ELSE BEGIN IF @runtype = 'U'
	SET @sd = CONVERT(VARCHAR, DATEADD(dd, -90, GETDATE()), 112)     ---90
	SET @ed = CONVERT(VARCHAR, DATEADD(dd, -1, GETDATE()), 112)  
END 

SELECT DISTINCT 'MD0101' AS Survey_Designator,  
'31668' AS Client_ID,  
ISNULL(RTRIM(LTRIM(p.last_name)),'') AS Last_Name,  
ISNULL(SUBSTRING(p.middle_name,1,1),'') AS Middle_Initial,  
ISNULL(RTRIM(LTRIM(p.first_name)),'') AS First_Name,  
ISNULL(RTRIM(LTRIM(p.address_line_1)),'') AS Address_1,  
ISNULL(RTRIM(LTRIM(p.address_line_2)),'') AS Address_2,  
ISNULL(RTRIM(LTRIM(p.city)),'') AS City,  
ISNULL(RTRIM(LTRIM(p.state)),'') AS State,  
CASE WHEN LEN(p.zip) > 5 THEN SUBSTRING(p.zip,1,5) + '-' + SUBSTRING(p.zip,6,LEN(p.zip))  
 ELSE ISNULL(RTRIM(LTRIM(p.zip)),'') END AS Zip_Code,  
CASE WHEN p.home_phone LIKE '%^MOBILE%' THEN ''  
 WHEN p.home_phone LIKE '%NONE%' THEN ''  
 WHEN LEN(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.home_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/','')) < 10 THEN ''  
 WHEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.home_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/','') = '9999999999' THEN ''  
 WHEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.home_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/','') = '0000000000' THEN ''  
 ELSE ISNULL(SUBSTRING(ISNULL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.home_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/',''),''),1,10),'') END AS Telephone_Number,  
CASE WHEN p.cell_phone LIKE '%^MOBILE%' THEN ''  
 WHEN p.cell_phone LIKE '%NONE%' THEN ''  
 WHEN LEN(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.cell_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/','')) < 10 THEN ''  
 WHEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.cell_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/','') = '9999999999' THEN ''  
 WHEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.cell_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/','') = '0000000000' THEN ''  
 ELSE ISNULL(SUBSTRING(ISNULL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.cell_phone,'(',''),')',''),'-',''),' ',''),'\',''),'/',''),''),1,10),'') END AS Mobile_Number,  
'' AS MS_DRG,  
CASE WHEN p.sex = 'M' THEN '1'  
 WHEN p.sex = 'F' THEN '2'  
 ELSE 'M' END AS Gender,  
ISNULL(mlrace.mstr_list_item_desc,'') AS Race,  
RTRIM(LTRIM(REPLACE(CONVERT(VARCHAR(10),CONVERT(DATE,RTRIM(LTRIM(p.date_of_birth))),101),'/',''))) AS Date_of_Birth,  
'0' AS Language,  --English for all at this time  
'Cov-' + ISNULL(RTRIM(LTRIM(p.person_nbr)),'') AS Medical_Record_Number,  
ISNULL(RTRIM(LTRIM(pe.practice_id)),'') + '-' + ISNULL(CAST(RTRIM(LTRIM(pe.enc_nbr)) AS VARCHAR),'') AS Unique_ID,  
ISNULL(RTRIM(LTRIM(mllm.external_id)),'') AS Location_Code,  
ISNULL(RTRIM(LTRIM(mllm.mstr_list_item_desc)),'') AS Location_Name,  
ISNULL(RTRIM(LTRIM(pm.national_provider_id)),'') AS Attending_Physician_NPI,  
ISNULL(RTRIM(LTRIM(pm.first_name)),'') + ' ' + ISNULL(SUBSTRING(pm.middle_name,1,1),'') + ' ' + ISNULL(RTRIM(LTRIM(pm.last_name)),'') + ' ' +  
 CASE WHEN CHARINDEX(' ',pm.degree) > 0 THEN ISNULL(SUBSTRING(pm.degree,1,CHARINDEX(' ',pm.degree)-1),'')  
 ELSE ISNULL(RTRIM(LTRIM(pm.degree)),'') END AS Attending_Physician_Name,  
CASE WHEN pm.degree LIKE 'NP%' THEN 'Nurse Practitioner'  
 WHEN pm.degree LIKE 'PA%' THEN 'Physician Assistant'  
 ELSE 'Physician' END AS Provider_Type,  
ISNULL(RTRIM(LTRIM(sm1.description)),'') AS Provider_Specialty,  
ISNULL(RTRIM(LTRIM(lm.address_line_1)),'') AS Site_Address_1,  
ISNULL(RTRIM(LTRIM(lm.address_line_2)),'') AS Site_Address_2,  
ISNULL(RTRIM(LTRIM(lm.city)),'') AS Site_City,  
ISNULL(RTRIM(LTRIM(lm.state)),'') AS Site_State,  
CASE WHEN LEN(lm.zip) > 5 THEN SUBSTRING(lm.zip,1,5) + '-' + SUBSTRING(lm.zip,6,LEN(lm.zip))  
 ELSE ISNULL(RTRIM(LTRIM(lm.zip)),'') END AS Site_Zip,  
'9' AS Patient_Admission_Source,  
RTRIM(LTRIM(REPLACE(CONVERT(VARCHAR(10),CONVERT(DATE,pe.enc_timestamp),101),'/',''))) AS Visit_Admit_Date,  
RTRIM(LTRIM(REPLACE(CONVERT(VARCHAR(10),pe.enc_timestamp,108),':',''))) AS Visit_Admit_Time,  
RTRIM(LTRIM(REPLACE(CONVERT(VARCHAR(10),CONVERT(DATE,pe.enc_timestamp),101),'/',''))) AS Discharge_Date,  
RTRIM(LTRIM(REPLACE(CONVERT(VARCHAR(10),pe.enc_timestamp,108),':',''))) AS Discharge_Time,  
'01' AS Patient_Discharge_Status,  
'' AS Unit,  
'' AS Service,  
ISNULL(RTRIM(LTRIM(sm1.description)),'') AS Specialty,  
ISNULL(RTRIM(LTRIM(pay.payer_name)),'') + ' ' + ISNULL(RTRIM(LTRIM(pay.Financial_Class)),'') AS Payor_Insurance_Fin_Class,  
'' AS Length_of_Stay,  
'' AS Room,  
'' AS Bed,  
'2' AS Hospitalist,  
CASE WHEN x.service_item_id = 'TEL' THEN 'T' ELSE 'O' END AS Fast_Track_Acute_Flag,  
CASE WHEN p.email_address = 'NONE' THEN ''  
 WHEN p.email_address NOT LIKE '%@%' THEN ''  
 WHEN p.email_address LIKE '%@.com%' THEN ''  
 WHEN p.email_address LIKE '%refused%' THEN ''  
 ELSE ISNULL(p.email_address,'') END AS Email,  
'' AS Hospitalist_1,  
'' AS Hospitalist_2,  
'' AS ER_Admit,  
'' AS Other_Diagnosis_or_Procedure_Code,  
'' AS Procedure_Code_1,  
'' AS Procedure_Code_2,  
'' AS Procedure_Code_3,  
'' AS Procedure_Code_4,  
'' AS Procedure_Code_5,  
'' AS Procedure_Code_6,  
CASE WHEN (p.expired_date IS NOT NULL AND p.expired_date <> '') OR p.expired_ind = 'Y' THEN 'Y' ELSE 'N' END AS Deceased_Flag,  
'N' AS No_Publicity_Flag,  
'N' AS State_Regulation_Flag,  
'N' AS Newborn_Patient,  
'N' AS Transferred_Admitted_To_Inpatient,  
'$' AS EOR_Indicator  
FROM NGPROD..charges c (NOLOCK) LEFT OUTER JOIN NGPROD..sliding_fee_adjustment_log sfa (NOLOCK) ON c.charge_id = sfa.charge_id  
 AND sfa.sliding_fee_action = 'O'  
JOIN NGPROD..patient_encounter pe (NOLOCK) ON c.source_id = pe.enc_id AND c.source_type = 'V' AND pe.practice_id = c.practice_id  
 AND pe.billable_ind = 'Y'  
JOIN Cov_NextGen_Integration..cov_patient_lists_vw p (NOLOCK) ON pe.person_id = p.person_id  
JOIN NGPROD..patient pa (NOLOCK) ON pa.person_id = pe.person_id AND pe.practice_id = pa.practice_id  
JOIN NGPROD..location_mstr lm (NOLOCK) ON lm.location_id = c.location_id AND lm.delete_ind = 'N'  
JOIN NGPROD..mstr_lists mllm (NOLOCK) ON lm.location_subgrouping2_id = mllm.mstr_list_item_id AND mllm.delete_ind = 'N'  
JOIN NGPROD..practice pr (NOLOCK) ON c.practice_id = pr.practice_id AND pr.delete_ind = 'N'  
JOIN NGPROD..provider_mstr pm (NOLOCK) ON c.rendering_id = pm.provider_id AND pm.delete_ind = 'N'  
LEFT JOIN NGPROD..mstr_lists mlloc (NOLOCK) ON pm.provider_subgrouping2_id  = mlloc.mstr_list_item_id  
 AND mlloc.mstr_list_type = 'provider_subgrouping' AND mlloc.delete_ind = 'N'  
LEFT JOIN NGPROD..person guar (NOLOCK) ON pe.guar_id = guar.person_id AND pe.guar_type = 'P'  
LEFT JOIN NGPROD..employer_mstr guar_emp (NOLOCK) ON pe.guar_id = guar_emp.employer_id AND pe.guar_type = 'E'  
LEFT JOIN Cov_NextGen_Integration..cov_NextGen_Patient_Ins_Payers_Covenant_vw pay (NOLOCK) ON  
 pe.enc_id = ISNULL(pay.enc_id,'00000000-0000-0000-0000-000000000000') AND pay.cob = 1  
LEFT JOIN NGPROD..specialty_mstr sm1 (NOLOCK) ON pm.specialty_code_1 = sm1.specialty_code  
LEFT JOIN NGPROD..mstr_lists mllang (NOLOCK) ON mllang.mstr_list_item_id = p.language_id  
 AND mllang.mstr_list_type = 'language' AND mllang.delete_ind = 'N'  
LEFT JOIN NGPROD..person_race_xref prx (NOLOCK) ON p.person_id = prx.person_id AND prx.race_order = 1  
LEFT JOIN NGPROD..mstr_lists mlrace (NOLOCK) ON mlrace.mstr_list_item_id = prx.race_Item_id  
 AND mlrace.mstr_list_type = 'race' AND mlrace.delete_ind = 'N'  
LEFT JOIN NGPROD..mstr_lists mlethnicity (NOLOCK) ON mlethnicity.mstr_list_item_id = p.ethnicity_id  
 AND mlethnicity.mstr_list_type = 'ethnicity' AND mlethnicity.delete_ind = 'N'  
JOIN NGPROD..service_item_mstr sim (NOLOCK) ON c.service_item_id = sim.service_item_id  
 AND sim.service_item_lib_id IN (SELECT lm.library_id FROM NGPROD..library_mstr lm (NOLOCK) WHERE lm.delete_ind = 'N'  
  AND lm.library_type = 'SI' AND lm.description LIKE '%SIM%')  
JOIN NGPROD..mstr_lists mldept (NOLOCK) ON mldept.mstr_list_item_id = sim.department  
 AND mldept.mstr_list_type = 'department' AND mldept.delete_ind = 'N'  
LEFT JOIN (SELECT chg.source_id, chg.service_item_id FROM NGPROD..charges chg  
 WHERE chg.service_item_id = 'TEL') x ON x.source_id = pe.enc_id  
WHERE mldept.mstr_list_item_desc IN ('Established Visits','New Office Visits')  
AND mllm.external_id IN ('CFRM','ORS','PCA')  
AND pm.national_provider_id NOT IN (SELECT prov_npi FROM Cov_NextGen_Integration..cov_NG_PressGaney_Exclusions)  
AND (p.contact_pref_id IN ('E805A29B-8E96-4242-97EA-065D3F4D3BAA' /*Yes Reminder*/, '0908AEC5-7C0B-46B7-B73A-51BDB58FA3DD' /*No Reminder*/)  
 OR p.contact_pref_id IS NULL)  
AND c.service_item_id <> 'Error'  
AND DATEDIFF(DAY,pe.enc_timestamp,c.create_timestamp) < 90  
AND c.begin_date_of_service >= @sd  
AND c.begin_date_of_service <= @ed  
END 