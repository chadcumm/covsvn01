 
/*****************************************************************************
  Covenant Health Information Technology
  Knoxville, Tennessee
******************************************************************************
	Author:			Geetha Paramasivam
	Date Written:		May'2019
	Solution:			Quality/Ambulatory
	Source file name:	      cov_amb_tog_bcma_prsnl_det.prg
	Object name:		cov_amb_tog_bcma_prsnl_det
	Request#:			5067
	Program purpose:	      BCMA - TOG Compliance details on Nurse unit and Personnel level
	Executing from:		DA2
 	Special Notes:          TOG contains only non Leapfrog units
 
******************************************************************************
  GENERATED MODIFICATION CONTROL LOG
******************************************************************************
 
Mod Date	Developer			Comment
----------	-----------------------------------------------------------------------------------------------------------
5/29/19     Geetha   CR#5017 - Include all depts/organizations (including Ambulatory locations)
06/04/19    Geetha   CR#4955 - Dispense category - "Dummy Item COA" excluded
07/11/19    Geetha   CR 5246 - add nurse unit description
09/10/19	Geetha   CR#5389 - exclude Template-Non-Formulary intermitent and continuous from BCMA reports
06/04/20    Geetha   CR#7524 - BCMA - Process to exclude drugs from Scan Rate reports - ongoing special project

*************************************************************************************************************************/
 
drop program cov_amb_tog_bcma_prsnl_det:DBA go
create program cov_amb_tog_bcma_prsnl_det:DBA
 
prompt
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.
	, "Start Date/Time" = "SYSDATE"
	, "End Date/Time" = "SYSDATE"
	, "Infusion Center" = 0
 
with OUTDEV, start_datetime, end_datetime, infusion_center
 
/**************************************************************
; Variable Declaration
**************************************************************/
declare fac_var = vc with noconstant(' ')
declare initcap() = c100
declare username           = vc with protect
declare inpatient_var = f8 with constant(uar_get_code_by("DISPLAY", 71, "Inpatient")), protect
declare observation_var = f8 with constant(uar_get_code_by("DISPLAY", 71, "Observation")), protect
declare opr_nu_var    = vc with noconstant("")
 
;Set nurse unit variable
if(substring(1,1,reflect(parameter(parameter2($infusion_center),0))) = "L");multiple values were selected
	set opr_nu_var = "in"
elseif(parameter(parameter2($infusion_center),1)= 0.0) ;all[*] values were selected
	set opr_nu_var = "!="
else								  ;a single value was selected
	set opr_nu_var = "="
endif
 
/**************************************************************
; DVDev Start Coding
**************************************************************/
 
RECORD bcma_sum(
	1 report_ran_by = vc
	1 list[*]
		2 facility_cd = f8
		2 facility = vc
		2 fac_tot_med_given = f8
		2 fac_tot_med_scan = f8
		2 fac_tot_wrist_scan = f8
		2 fac_tot_compliance = f8
		2 nurse_unit = vc
		2 nurse_unit_cd = f8
		2 unit_tot_med_given = f8
		2 unit_tot_med_scan = f8
		2 unit_tot_wrist_scan = f8
		2 unit_tot_compliance = f8
		2 prsnl_name = vc
		2 prsnl_role = vc
		2 pr_tot_med_given = f8
		2 pr_tot_med_scan = f8
		2 pr_tot_wrist_scan = f8
		2 pr_tot_compliance = f8
)
 
;--------------- Helpers -------------------------------------------------------------
 
Record bcma(
	1 rec_cnt = i4
	1 plist[*]
		2 facility_cd = f8
		2 facility = vc
		2 location_cd = f8
		2 nurse_unit = vc
		2 nurse_unit_cd = f8
		2 prsnl_name = vc
		2 prsnl_position = vc
		2 encntrid = f8
		2 med_admin_eventid = f8
		2 event_cnt = i4
		2 eventid = f8
		2 orderid = f8
		2 catalogcd = f8
		2 order_mnemonic = vc
		2 positive_med_ind = i4
		2 positive_patient_ind = i4
		2 itemid = f8
		2 charge_number = vc
		2 non_bcma_med = vc
		2 met_compli = i2
		2 lp_eve_cnt = i2
		2 lp_met_compli = i2
)
 
Record nu(
	1 list[*]
		2 n_unit_cd = f8
		2 n_unit = vc
		2 nu_tot_med_given = f8
		2 nu_tot_med_scan = f8
		2 nu_tot_wrist_scan = f8
		2 nu_tot_compliance = f8
		2 lp_nu_tot_med_given = f8
		2 lp_nu_tot_compliance = f8
)
 
Record fac(
	1 list[*]
		2 facility_cd = f8
		2 facility = vc
		2 fac_tot_med_given = f8
		2 fac_tot_med_scan = f8
		2 fac_tot_wrist_scan = f8
		2 fac_tot_compliance = f8
	)
 
;--------------------------------------------------------
;Get user in action
select into "NL:"
from	prsnl p
where p.person_id = reqinfo->updt_id
detail
	bcma_sum->report_ran_by = p.username
with nocounter
 
;----------------------------------------------------------------------------------------------------------------
;Get Med admins
select into $outdev
 
fac = uar_get_code_description(mae.nurse_unit_cd)
, e.encntr_id, mae.event_id
, nurse_unit = uar_get_code_display(mae.nurse_unit_cd)
, prsnl_name = initcap(pr.name_full_formatted)
, role = uar_get_code_display(pr.position_cd)
, met_comp = evaluate2( if(mae.positive_patient_ident_ind = 1 and mae.positive_med_ident_ind = 1 )1 else 0 endif )
 
from 
	med_admin_event mae
	, clinical_event ce
	, encounter e
	, order_ingredient oi
	, prsnl pr
	, person p
	, encntr_alias ea
	, code_value cv12
	, order_dispense od
	, orders o
  	, (left join order_product op on op.order_id = o.order_id)
 	, (left join med_identifier mi on mi.item_id = op.item_id
			and mi.med_identifier_type_cd = 3096.00 ;Charge Number
			and mi.active_ind = 1)
 
plan mae where operator(mae.nurse_unit_cd, opr_nu_var, $infusion_center)
	;mae.nurse_unit_cd = $infusion_center
	and mae.beg_dt_tm between cnvtdatetime($start_datetime) and cnvtdatetime($end_datetime)
	and mae.med_admin_event_id+0 > 0
	and mae.event_type_cd = 4055412.00	;Administered
	and mae.prsnl_id != 0
	
join cv12 where cv12.code_value = mae.nurse_unit_cd
	and cv12.code_set =  220
	and cv12.active_ind = 1
	and cnvtlower(cv12.description) = '*infusion*'
	and cv12.cdf_meaning = 'AMBULATORY'
	and cv12.active_ind = 1
	
join ce where ce.event_id = mae.event_id
	and ce.result_status_cd in(25, 34, 35)
	
join o where o.order_id = mae.template_order_id
	and o.active_ind = 1
	
join op
join mi
	
join e where e.person_id = ce.person_id
	and e.encntr_id = ce.encntr_id
	and e.active_ind = 1
	
join oi where oi.order_id =  mae.template_order_id
	and oi.action_sequence = mae.documentation_action_sequence
	and oi.ingredient_type_flag != 5
	
join od where od.order_id = o.order_id
	and od.dispense_category_cd != 2561954483.00 ;Dummy Items COA
	
join pr where pr.person_id = mae.prsnl_id
	
join p where p.person_id = e.person_id
	and p.active_ind = 1
	
join ea where ea.encntr_id = e.encntr_id
	and ea.encntr_alias_type_cd = 1077
	and ea.active_ind = 1

order by mae.event_id

;with nocounter, format, separator = " "
;go to exitscript
 
Head report
	cnt = 0
Head mae.event_id
	cnt += 1
	call alterlist(bcma->plist, cnt)
	bcma->plist[cnt].facility = trim(uar_get_code_description(mae.nurse_unit_cd))
	bcma->plist[cnt].nurse_unit = uar_get_code_display(mae.nurse_unit_cd)
	bcma->plist[cnt].nurse_unit_cd = mae.nurse_unit_cd
	bcma->plist[cnt].prsnl_name = prsnl_name
	bcma->plist[cnt].prsnl_position = role
	bcma->plist[cnt].encntrid = e.encntr_id
	bcma->plist[cnt].met_compli = met_comp
	bcma->plist[cnt].orderid = o.order_id
	bcma->plist[cnt].catalogcd = o.catalog_cd
	bcma->plist[cnt].order_mnemonic = cnvtlower(o.order_mnemonic)
	bcma->plist[cnt].eventid = mae.event_id
	bcma->plist[cnt].event_cnt = mae.event_cnt
	bcma->plist[cnt].med_admin_eventid = mae.med_admin_event_id
	bcma->plist[cnt].positive_med_ind = mae.positive_med_ident_ind
	bcma->plist[cnt].positive_patient_ind = mae.positive_patient_ident_ind
	bcma->plist[cnt].itemid = op.item_id
	bcma->plist[cnt].charge_number = trim(mi.value, 3)
 
with nocounter

;--------------------------- Old -------------------------------------------------------------------------------
/*
;Get Med admins
select into 'nl:'
 
fac = uar_get_code_description(i.nurse_unit_cd)
, i.encntr_id, i.event_id
, nurse_unit = uar_get_code_display(i.nurse_unit_cd)
, prsnl_name = initcap(i.name_full_formatted)
, role = uar_get_code_display(i.position_cd)
 
from(
 
(select distinct
   e.encntr_id, mae.event_id, mae.med_admin_event_id,  mae.nurse_unit_cd, mae.event_cnt, o.order_id
  , mae.positive_med_ident_ind, mae.positive_patient_ident_ind, pr.name_full_formatted, pr.position_cd, o.hna_order_mnemonic
  , met_comp = evaluate2( if(mae.positive_patient_ident_ind = 1 and mae.positive_med_ident_ind = 1 )1 else 0 endif )
 
from med_admin_event mae, clinical_event ce, encounter e, orders o, order_ingredient oi
	, prsnl pr, person p, encntr_alias ea, code_value cv12, order_dispense od
 
where mae.nurse_unit_cd = $infusion_center
	and mae.beg_dt_tm between cnvtdatetime($start_datetime) and cnvtdatetime($end_datetime)
	and mae.med_admin_event_id+0 > 0
	and mae.event_type_cd = 4055412.00	;Administered
	and cv12.code_value = mae.nurse_unit_cd
	and cv12.code_set =  220
	and cv12.active_ind = 1
	and cnvtlower(cv12.description) = '*infusion*'
	and cv12.cdf_meaning = 'AMBULATORY'
	and ce.event_id = mae.event_id
	and ce.result_status_cd in(25, 34, 35)
	and o.order_id = mae.template_order_id
	and o.active_ind = 1
	and e.person_id = ce.person_id
	and e.encntr_id = ce.encntr_id
	and e.active_ind = 1
	and oi.order_id =  mae.template_order_id
	and oi.action_sequence = mae.documentation_action_sequence
	and oi.ingredient_type_flag != 5
	and od.order_id = o.order_id
	and od.dispense_category_cd != 2561954483.00 ;Dummy Items COA
	and pr.person_id = mae.prsnl_id
	and mae.prsnl_id != 0
	and p.person_id = e.person_id
	and ea.encntr_id = e.encntr_id
	and ea.encntr_alias_type_cd = 1077
	and ea.active_ind = 1
	with sqltype('f8','f8','f8','f8','f8','f8','i2','i2','vc','f8','vc','i2')
  )i
)
 
plan i
 
order by i.event_id
 
Head report
	cnt = 0
Head i.event_id
	cnt += 1
	call alterlist(bcma->plist, cnt)
	bcma->plist[cnt].facility = trim(uar_get_code_description(i.nurse_unit_cd))
	bcma->plist[cnt].nurse_unit = uar_get_code_display(i.nurse_unit_cd)
	bcma->plist[cnt].nurse_unit_cd = i.nurse_unit_cd
	bcma->plist[cnt].prsnl_name = prsnl_name
	bcma->plist[cnt].prsnl_position = role
	bcma->plist[cnt].encntrid = i.encntr_id
	bcma->plist[cnt].met_compli = i.met_comp
	bcma->plist[cnt].orderid = i.order_id
	bcma->plist[cnt].order_mnemonic = cnvtlower(i.hna_order_mnemonic)
	bcma->plist[cnt].eventid = i.event_id
	bcma->plist[cnt].event_cnt = i.event_cnt
	bcma->plist[cnt].med_admin_eventid = i.med_admin_event_id
	bcma->plist[cnt].positive_med_ind = i.positive_med_ident_ind
	bcma->plist[cnt].positive_patient_ind = i.positive_patient_ident_ind
 
with nocounter
 
;--------------------------------------------------------------------------------
;Get Item id
select into 'nl:'
 
from	(dummyt d with seq = value(size(bcma->plist, 5)))
	, order_product op
 
plan d
 
join op where op.order_id = outerjoin(bcma->plist[d.seq].orderid)
 
order by op.item_id
 
Head op.order_id
	icnt = 0
	idx = 0
      idx = locateval(icnt ,1 ,size(bcma->plist,5), op.order_id ,bcma->plist[icnt].orderid)
      if(idx > 0)
		bcma->plist[idx].itemid = op.item_id
	endif
 
with nocounter
 
;-----------------------------------------------------------------------------------------------
;Find missing Item_id's
select into 'nl:'
     mair.event_id, mai.item_id, mai.med_product_id
from
	(dummyt d WITH seq = value(size(bcma->plist,5)))
      , ce_med_admin_ident_reltn mair
	, ce_med_admin_ident mai
 
plan d where bcma->plist[d.seq].itemid = 0
 
join mair where mair.event_id = bcma->plist[d.seq].eventid
 
join mai where mai.ce_med_admin_ident_id = outerjoin(mair.ce_med_admin_ident_id)
 
order by mair.event_id
 
Head mair.event_id
	icnt = 0
	idx = 0
      idx = locateval(icnt ,1 ,size(bcma->plist,5), mair.event_id ,bcma->plist[icnt].eventid)
      if(idx > 0)
      	if(bcma->plist[idx].itemid = 0)
			bcma->plist[idx].itemid = mai.item_id
		endif
	endif
 
with nocounter
;-----------------------------------------------------------------------------------------------
 
;Get Charge numbers
select into 'nl:'
 
 mi.item_id, value = trim(mi.value ,3), mi.med_identifier_id
 
from	(dummyt d with seq = value(size(bcma->plist, 5)))
	, med_identifier mi
 
plan d
 
join mi where mi.item_id = bcma->plist[d.seq].itemid
	and mi.active_ind = 1
	and mi.med_identifier_type_cd = 3096.00 ;charge_num_var
 
order by mi.item_id
 
Head mi.item_id
	icnt = 0
	idx = 0
      idx = locateval(icnt ,1 ,size(bcma->plist,5), mi.item_id ,bcma->plist[icnt].itemid)
      while(idx > 0)
		bcma->plist[idx].charge_number = trim(mi.value ,3)
	      idx = locateval(icnt,(idx+1), size(bcma->plist,5), mi.item_id ,bcma->plist[icnt].itemid)
	endwhile
 
with nocounter
*/ 
;--------------------------- End Old -------------------------------------------------------------------------------

;Flag Non-BCMA meds as per pharmacy exclusion list
select into $outdev
 
charge_num = trim(cv1.display, 3) 
, cat = bcma->plist[d.seq].catalogcd, item = bcma->plist[d.seq].itemid

 
from	(dummyt d with seq = value(size(bcma->plist, 5)))
  	, code_value cv1
  	, code_value_extension cve
  	, code_value_extension cve1
 
plan cv1 where cv1.code_set = 100499
	and cv1.cdf_meaning = 'BCMA_RX'
	and cv1.active_ind = 1
 
join d where trim(bcma->plist[d.seq].charge_number, 3) = trim(cv1.display, 3)
 
join cve where cve.code_set = cv1.code_set
	and cv1.code_value = cv1.code_value
	and cve.field_name = 'Catalog_cd'
	and cnvtreal(cve.field_value) = bcma->plist[d.seq].catalogcd
 
join cve1 where cve1.code_set = cv1.code_set
	and cve1.code_value = cv1.code_value
	and cve1.field_name = 'Item_id'
	and cnvtreal(cve1.field_value) = bcma->plist[d.seq].itemid
 
order by charge_num
 
Head charge_num
	idx = 0
	cnt = 0
      idx = locateval(cnt ,1 ,size(bcma->plist,5) ,charge_num ,trim(bcma->plist[cnt].charge_number, 3))
      while(idx > 0)
		bcma->plist[idx].non_bcma_med = 'Yes'
	      idx = locateval(cnt ,(idx+1) ,size(bcma->plist,5) ,charge_num ,trim(bcma->plist[cnt].charge_number, 3))
	endwhile
 
With nocounter
 
;====================== End of Non-BCMA meds ==========================================================================

call echorecord(bcma)
 
;----------------------------------------------------------------------------------------------------
;----------- Aggregated Results - seperate sections(bec's of the Non-RDBMS table) -------------------
;----------------------------------------------------------------------------------------------------
 
;Get aggregated results for PRSNL
select into 'nl:'
 fac = trim(substring(1,100,bcma->plist[d1.seq].facility))
, nurse_unit = trim(substring(1,100,bcma->plist[d1.seq].nurse_unit))
, nurse_unit_cd =	bcma->plist[d1.seq].nurse_unit_cd
, prsnl_name = bcma->plist[d1.seq].prsnl_name
, role = bcma->plist[d1.seq].prsnl_position
, event_cnt = bcma->plist[d1.seq].event_cnt
, event_id = bcma->plist[d1.seq].eventid
, positive_med_ind = bcma->plist[d1.seq].positive_med_ind
, positive_patient_ind = bcma->plist[d1.seq].positive_patient_ind
, met_compli = cnvtint(bcma->plist[d1.seq].met_compli)
 
from	(dummyt   d1  with seq = size(bcma->plist, 5))
 
plan d1 where bcma->plist[d1.seq].non_bcma_med != 'Yes'

/* Non_Formulary Items
where substring(1,4, trim(substring(1, 30, bcma->plist[d1.seq].charge_number ))) != 'NCRX' ;non chargeable items
	and trim(substring(1, 300, bcma->plist[d1.seq].order_mnemonic)) != '*non-formulary*'
*/
 
order by nurse_unit, prsnl_name, event_id
 
Head report
	cnt = 0
Head prsnl_name
	cnt += 1
	call alterlist(bcma_sum->list, cnt)
Foot prsnl_name
	bcma_sum->list[cnt].facility = fac
	bcma_sum->list[cnt].nurse_unit_cd = nurse_unit_cd
	bcma_sum->list[cnt].nurse_unit = nurse_unit
	bcma_sum->list[cnt].prsnl_name = prsnl_name
	bcma_sum->list[cnt].prsnl_role = role
	bcma_sum->list[cnt].pr_tot_med_given = sum(event_cnt)
	bcma_sum->list[cnt].pr_tot_med_scan =sum(positive_med_ind)
	bcma_sum->list[cnt].pr_tot_wrist_scan = sum(positive_patient_ind)
	bcma_sum->list[cnt].pr_tot_compliance = sum(met_compli)
 
with nocounter
 
;--------------------------------------------------------------------------------------------
;Get aggregated results for Nurse Units
select into 'nl:'
 fac = trim(substring(1,100,bcma->plist[d1.seq].facility))
, nurse_unit = trim(substring(1,100,bcma->plist[d1.seq].nurse_unit))
, nurse_unit_cd =	bcma->plist[d1.seq].nurse_unit_cd
, prsnl_name = bcma->plist[d1.seq].prsnl_name
, role = bcma->plist[d1.seq].prsnl_position
, event_cnt = bcma->plist[d1.seq].event_cnt
, event_id = bcma->plist[d1.seq].eventid
, positive_med_ind = bcma->plist[d1.seq].positive_med_ind
, positive_patient_ind = bcma->plist[d1.seq].positive_patient_ind
, met_compli = cnvtint(bcma->plist[d1.seq].met_compli)
 
from	(dummyt   d1  with seq = size(bcma->plist, 5))
 
plan d1 where bcma->plist[d1.seq].non_bcma_med != 'Yes'

/* Non_Formulary Items
where substring(1,4, trim(substring(1, 30, bcma->plist[d1.seq].charge_number ))) != 'NCRX' ;non chargeable items
	and trim(substring(1, 300, bcma->plist[d1.seq].order_mnemonic)) != '*non-formulary*'
*/
 
order by nurse_unit_cd, event_id
 
Head report
	ncnt = 0
Head nurse_unit_cd
	ncnt += 1
	call alterlist(nu->list, ncnt)
 
Foot nurse_unit_cd
	nu->list[ncnt].n_unit_cd = nurse_unit_cd
	nu->list[ncnt].n_unit = uar_get_code_display(nurse_unit_cd)
	nu->list[ncnt].nu_tot_med_given = sum(event_cnt)
	nu->list[ncnt].nu_tot_med_scan = sum(positive_med_ind)
	nu->list[ncnt].nu_tot_wrist_scan = sum(positive_patient_ind)
	nu->list[ncnt].nu_tot_compliance = sum(met_compli)
 
with nocounter
 
;--------------------------------------------------------
;Assign Nurse Unit results to bcma_sum
select into 'nl:'
 
n_unit = nu->list[d2.seq].n_unit_cd
,unit = uar_get_code_display(nu->list[d2.seq].n_unit_cd)
 
from (dummyt   d1  with seq = size(bcma_sum->list, 5))
	,(dummyt   d2  with seq = size(nu->list, 5))
 
plan d1
 
join d2 where bcma_sum->list[d1.seq].nurse_unit_cd = nu->list[d2.seq].n_unit_cd
 
order by n_unit
 
Head n_unit
	num = 0
	idx = 0
      idx = locateval(num ,1 ,size(bcma_sum->list ,5), n_unit ,bcma_sum->list[num].nurse_unit_cd)
      while(idx > 0)
		bcma_sum->list[idx].unit_tot_med_given = nu->list[d2.seq].nu_tot_med_given
		bcma_sum->list[idx].unit_tot_med_scan = nu->list[d2.seq].nu_tot_med_scan
		bcma_sum->list[idx].unit_tot_wrist_scan = nu->list[d2.seq].nu_tot_wrist_scan
		bcma_sum->list[idx].unit_tot_compliance = nu->list[d2.seq].nu_tot_compliance
	      idx = locateval(num,(idx+1),size(bcma_sum->list ,5), n_unit ,bcma_sum->list[num].nurse_unit_cd)
	endwhile
 
with nocounter
 
call echorecord(bcma_sum)
 
;-----------temp-----------------------------------------------------------
 
/*
SELECT DISTINCT INTO $outdev
 
	location = SUBSTRING(1, 100, BCMA_SUM->list[D1.SEQ].facility)
	, FAC_TOT_MED_GIVEN = BCMA_SUM->list[D1.SEQ].fac_tot_med_given
	, FAC_TOT_MED_SCAN = BCMA_SUM->list[D1.SEQ].fac_tot_med_scan
	, FAC_TOT_WRIST_SCAN = BCMA_SUM->list[D1.SEQ].fac_tot_wrist_scan
	, FAC_TOT_COMPLIANCE = BCMA_SUM->list[D1.SEQ].fac_tot_compliance
	, NURSE_UNIT = SUBSTRING(1, 100, BCMA_SUM->list[D1.SEQ].nurse_unit)
	, UNIT_TOT_MED_GIVEN = BCMA_SUM->list[D1.SEQ].unit_tot_med_given
	, UNIT_TOT_MED_SCAN = BCMA_SUM->list[D1.SEQ].unit_tot_med_scan
	, UNIT_TOT_WRIST_SCAN = BCMA_SUM->list[D1.SEQ].unit_tot_wrist_scan
	, UNIT_TOT_COMPLIANCE = BCMA_SUM->list[D1.SEQ].unit_tot_compliance
	, PRSNL_NAME = SUBSTRING(1, 50, BCMA_SUM->list[D1.SEQ].prsnl_name)
	, PRSNL_ROLE = SUBSTRING(1, 50, BCMA_SUM->list[D1.SEQ].prsnl_role)
	, PR_TOT_MED_GIVEN = BCMA_SUM->list[D1.SEQ].pr_tot_med_given
	, PR_TOT_MED_SCAN = BCMA_SUM->list[D1.SEQ].pr_tot_med_scan
	, PR_TOT_WRIST_SCAN = BCMA_SUM->list[D1.SEQ].pr_tot_wrist_scan
	, PR_TOT_COMPLIANCE = BCMA_SUM->list[D1.SEQ].pr_tot_compliance
 
FROM
	(DUMMYT   D1  WITH SEQ = SIZE(BCMA_SUM->list, 5))
 
PLAN D1
 
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
 
*/
;----------------------------------------------------------------------------
 
#exitscript
 
end go
 
 
/**** Infusion Center Prompt *****
 
SELECT CV1.CODE_VALUE ,CV1.DISPLAY, cv1.description
FROM CODE_VALUE CV1
WHERE CV1.CODE_SET =  220 AND CV1.ACTIVE_IND = 1
and cnvtlower(cv1.DESCRIPTION) = '*infusion*'
and cdf_meaning = 'AMBULATORY'
 
*/
