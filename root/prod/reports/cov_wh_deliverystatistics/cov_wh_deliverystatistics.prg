 
 /*****************************************************************************
  Covenant Health Information Technology
  Knoxville, Tennessee
******************************************************************************
 
	Author:				Cerner
	Date Written:		January 2020
	Solution:			Womens Health
	Source file name:	cov_wh_DeliveryStatistics.prg
	Object name:		cov_wh_DeliveryStatistics
	CR#:				6951
 
	Program purpose:
 
	Executing from:		CCL
 
 	Special Notes:		TRANSLATED FROM CERNER "PCM_RPT_DELIVERY_SUMMARY"
 
 
*******************************************************************************
*   GENERATED MODIFICATION CONTROL LOG
*
*   Revision #	Mod Date	Developer           Comment
*   ----------	----------- ------------------  -------------------------------
*	001			01-31-2020	Dan Herren			CR6951 Change title on report.
*	002			04-08-2020	Dan Herren			CR7381 Break fix for deliveries.
*
*******************************************************************************/
;*** Generated by TRANSLATE, verify before re-including (Debug:N, Optimize:N) ***
 
DROP PROGRAM cov_wh_DeliveryStatistics :dba GO
CREATE PROGRAM cov_wh_DeliveryStatistics :dba
 
 prompt
	"Output to File/Printer/MINE" = "MINE"
	, "Start Date" = "CURDATE"
	, "End Date" = "CURDATE"
	, "Organization" = 0
 
with OUTDEV, pStartDate, pEndDate, org
 
EXECUTE reportrtl
 
DECLARE _createfonts (dummy ) = null WITH protect
DECLARE _createpens (dummy ) = null WITH protect
DECLARE pagebreak (dummy ) = null WITH protect
DECLARE finalizereport ((ssendreport = vc ) ) = null WITH protect
DECLARE titlesection ((ncalc = i2 ) ) = f8 WITH protect
DECLARE titlesectionabs ((ncalc = i2 ) ,(offsetx = f8 ) ,(offsety = f8 ) ) = f8 WITH protect
DECLARE summarycountsection ((ncalc = i2 ) ) = f8 WITH protect
DECLARE summarycountsectionabs ((ncalc = i2 ) ,(offsetx = f8 ) ,(offsety = f8 ) ) = f8 WITH protect
DECLARE cesareansection ((ncalc = i2 ) ) = f8 WITH protect
DECLARE cesareansectionabs ((ncalc = i2 ) ,(offsetx = f8 ) ,(offsety = f8 ) ) = f8 WITH protect
DECLARE vaginal_section ((ncalc = i2 ) ) = f8 WITH protect
DECLARE vaginal_sectionabs ((ncalc = i2 ) ,(offsetx = f8 ) ,(offsety = f8 ) ) = f8 WITH protect
DECLARE initializereport (dummy ) = null WITH protect
DECLARE _hreport = i4 WITH noconstant (0 ) ,protect
DECLARE _yoffset = f8 WITH noconstant (0.0 ) ,protect
DECLARE _xoffset = f8 WITH noconstant (0.0 ) ,protect
DECLARE rpt_render = i2 WITH constant (0 ) ,protect
DECLARE _crlf = vc WITH constant (concat (char (13 ) ,char (10 ) ) ) ,protect
DECLARE rpt_calcheight = i2 WITH constant (1 ) ,protect
DECLARE _yshift = f8 WITH noconstant (0.0 ) ,protect
DECLARE _xshift = f8 WITH noconstant (0.0 ) ,protect
DECLARE _sendto = vc WITH noconstant ("" ) ,protect
DECLARE _rpterr = i2 WITH noconstant (0 ) ,protect
DECLARE _rptstat = i2 WITH noconstant (0 ) ,protect
DECLARE _oldfont = i4 WITH noconstant (0 ) ,protect
DECLARE _oldpen = i4 WITH noconstant (0 ) ,protect
DECLARE _dummyfont = i4 WITH noconstant (0 ) ,protect
DECLARE _dummypen = i4 WITH noconstant (0 ) ,protect
DECLARE _fdrawheight = f8 WITH noconstant (0.0 ) ,protect
DECLARE _rptpage = i4 WITH noconstant (0 ) ,protect
DECLARE _diotype = i2 WITH noconstant (8 ) ,protect
DECLARE _outputtype = i2 WITH noconstant (rpt_postscript ) ,protect
DECLARE _times8b0 = i4 WITH noconstant (0 ) ,protect
DECLARE _times10i0 = i4 WITH noconstant (0 ) ,protect
DECLARE _times10b0 = i4 WITH noconstant (0 ) ,protect
DECLARE _times100 = i4 WITH noconstant (0 ) ,protect
DECLARE _times14b0 = i4 WITH noconstant (0 ) ,protect
DECLARE _pen21s0c0 = i4 WITH noconstant (0 ) ,protect
DECLARE _pen14s0c0 = i4 WITH noconstant (0 ) ,protect
DECLARE _pen14s0c16777215 = i4 WITH noconstant (0 ) ,protect
 
SUBROUTINE  pagebreak (dummy )
 	SET _rptpage = uar_rptendpage (_hreport )
 	SET _rptpage = uar_rptstartpage (_hreport )
 	SET _yoffset = rptreport->m_margintop
END ;Subroutine
 
SUBROUTINE  finalizereport (ssendreport )
 	SET _rptpage = uar_rptendpage (_hreport )
 	SET _rptstat = uar_rptendreport (_hreport )
 	DECLARE sfilename = vc WITH noconstant (trim (ssendreport ) ) ,private
  	DECLARE bprint = i2 WITH noconstant (0 ) ,private
  	IF ((textlen (sfilename ) > 0 ) )
  		SET bprint = checkqueue (sfilename )
   		IF (bprint )
    		EXECUTE cpm_create_file_name "RPT" ,"PS"
   			SET sfilename = cpm_cfn_info->file_name_path
   		ENDIF
  	ENDIF
 	SET _rptstat = uar_rptprinttofile (_hreport ,nullterm (sfilename ) )
  	IF (bprint )
  		SET spool value (sfilename ) value (ssendreport ) WITH deleted ,dio = value (_diotype )
  	ENDIF
  	DECLARE _errorfound = i2 WITH noconstant (0 ) ,protect
  	DECLARE _errcnt = i2 WITH noconstant (0 ) ,protect
 	SET _errorfound = uar_rptfirsterror (_hreport ,rpterror )
  	WHILE ((_errorfound = rpt_errorfound )
  		AND (_errcnt < 512 ) )
   		SET _errcnt = (_errcnt + 1 )
   		SET stat = alterlist (rpterrors->errors ,_errcnt )
   		SET rpterrors->errors[_errcnt ].m_severity = rpterror->m_severity
   		SET rpterrors->errors[_errcnt ].m_text = rpterror->m_text
   		SET rpterrors->errors[_errcnt ].m_source = rpterror->m_source
   		SET _errorfound = uar_rptnexterror (_hreport ,rpterror )
  	ENDWHILE
  	SET _rptstat = uar_rptdestroyreport (_hreport )
END ;Subroutine
 
SUBROUTINE  titlesection (ncalc )
  	DECLARE a1 = f8 WITH noconstant (0.0 ) ,private
  	SET a1 = titlesectionabs (ncalc ,_xoffset ,_yoffset )
  	RETURN (a1 )
END ;Subroutine
 
SUBROUTINE  titlesectionabs (ncalc ,offsetx ,offsety )
  	DECLARE sectionheight = f8 WITH noconstant (0.880000 ) ,private
  	DECLARE __title = vc WITH noconstant (build2 (captions->report_title ,char (0 ) ) ) ,protect
  	DECLARE __date_range = vc WITH noconstant (build2 (captions->date_range ,char (0 ) ) ) ,protect
  	DECLARE __start_date_lbl = vc WITH noconstant (build2 (captions->start_date ,char (0 ) ) ) ,protect
  	DECLARE __end_date_lbl = vc WITH noconstant (build2 (captions->end_date ,char (0 ) ) ) ,protect
  	DECLARE __start_date = vc WITH noconstant (build2 (delivery->start_date ,char (0 ) ) ) ,protect
  	DECLARE __end_date = vc WITH noconstant (build2 (delivery->end_date ,char (0 ) ) ) ,protect
  	DECLARE __executed_by_lbl = vc WITH noconstant (build2 (captions->executed_by ,char (0 ) ) ) ,protect
  	DECLARE __executed_dt_tm_lbl = vc WITH noconstant (build2 (captions->execute_dt_tm ,char (0 ) ) ) ,protect
  	DECLARE __executed_by = vc WITH noconstant (build2 (delivery->executed_by ,char (0 ) ) ) ,protect
  	DECLARE __executed_dt_tm = vc WITH noconstant (build2 (delivery->executed_dt_tm ,char (0 ) ) ) ,protect
 
  	IF ((ncalc = rpt_render ) )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_borders = rpt_sdnoborders
   		SET rptsd->m_padding = rpt_sdnoborders
   		SET rptsd->m_paddingwidth = 0.000
   		SET rptsd->m_linespacing = rpt_single
   		SET rptsd->m_rotationangle = 0
   		SET rptsd->m_y = (offsety + 0.000 )
   		SET rptsd->m_x = (offsetx + 0.500 )
   		SET rptsd->m_width = 6.500
   		SET rptsd->m_height = 0.250
   		SET _oldfont = uar_rptsetfont (_hreport ,_times14b0 )
   		SET _oldpen = uar_rptsetpen (_hreport ,_pen14s0c0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__title )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_y = (offsety + 0.313 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 2.000
   		SET rptsd->m_height = 0.198
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times10b0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__date_range )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 1.250
   		SET rptsd->m_height = 0.198
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__start_date_lbl )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 1.250
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__end_date_lbl )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 1.625 )
   		SET rptsd->m_width = 1.250
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__start_date )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 1.625 )
   		SET rptsd->m_width = 1.250
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__end_date )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.250
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__executed_by_lbl )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.250
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__executed_dt_tm_lbl )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 5.250 )
   		SET rptsd->m_width = 2.125
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__executed_by )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 5.250 )
   		SET rptsd->m_width = 1.250
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__executed_dt_tm )
   		SET _dummyfont = uar_rptsetfont (_hreport ,_oldfont )
   		SET _dummypen = uar_rptsetpen (_hreport ,_oldpen )
   		SET _yoffset = (offsety + sectionheight )
  	ENDIF
  	RETURN (sectionheight )
END ;Subroutine
 
SUBROUTINE  summarycountsection (ncalc )
  	DECLARE a1 = f8 WITH noconstant (0.0 ) ,private
  	SET a1 = summarycountsectionabs (ncalc ,_xoffset ,_yoffset )
  	RETURN (a1 )
END ;Subroutine
 
SUBROUTINE  summarycountsectionabs (ncalc ,offsetx ,offsety )
  	DECLARE sectionheight = f8 WITH noconstant (1.630000 ) ,private
  	DECLARE __singleton_lbl = vc WITH noconstant (build2 (captions->singleton ,char (0 ) ) ) ,protect
  	DECLARE __twins_lbl = vc WITH noconstant (build2 (captions->twins ,char (0 ) ) ) ,protect
  	DECLARE __triplets_lbl = vc WITH noconstant (build2 (captions->triplets ,char (0 ) ) ) ,protect
  	DECLARE __other_lbl = vc WITH noconstant (build2 (captions->other ,char (0 ) ) ) ,protect
  	DECLARE __births_lbl = vc WITH noconstant (build2 (captions->births ,char (0 ) ) ) ,protect
  	DECLARE __mothers_delivered = vc WITH noconstant (build2 (captions->mothers_delivered ,char (0 ) )) ,protect
  	DECLARE __nul_mothers_lbl = vc WITH noconstant (build2 (captions->nuliparous_mothers ,char (0 ) )) ,protect
  	DECLARE __thirty_seven_lbl = vc WITH noconstant (build2 (captions->greater_37_wks ,char (0 ) ) ) ,protect
  	DECLARE __fifteen_g_lbl = vc WITH noconstant (build2 (captions->less_1500_g ,char (0 ) ) ) ,protect
  	DECLARE __sum_result = vc WITH noconstant (build2 (delivery->num_births[1 ].count ,char (0 ) ) ) ,protect
  	DECLARE __sum_result9 = vc WITH noconstant (build2 (delivery->num_births[2 ].count ,char (0 ) ) ) ,protect
  	DECLARE __sum_result10 = vc WITH noconstant (build2 (delivery->num_births[3 ].count ,char (0 ) ) ),protect
  	DECLARE __sum_result11 = vc WITH noconstant (build2 (delivery->num_births[4 ].count ,char (0 ) ) ),protect
  	DECLARE __sum_result12 = vc WITH noconstant (build2 (delivery->num_mother_deliv[1 ].count ,char (0) ) ) ,protect
  	DECLARE __sum_result13 = vc WITH noconstant (build2 (delivery->num_mother_deliv[2 ].count ,char (0) ) ) ,protect
  	DECLARE __sum_result14 = vc WITH noconstant (build2 (delivery->num_mother_deliv[3 ].count ,char (0) ) ) ,protect
  	DECLARE __sum_result15 = vc WITH noconstant (build2 (delivery->num_mother_deliv[4 ].count ,char (0) ) ) ,protect
  	DECLARE __sum_result16 = vc WITH noconstant (build2 (delivery->num_nuliparous[1 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result17 = vc WITH noconstant (build2 (delivery->num_nuliparous[2 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result18 = vc WITH noconstant (build2 (delivery->num_nuliparous[3 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result19 = vc WITH noconstant (build2 (delivery->num_nuliparous[4 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result20 = vc WITH noconstant (build2 (delivery->greater_37_wks[1 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result21 = vc WITH noconstant (build2 (delivery->greater_37_wks[2 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result22 = vc WITH noconstant (build2 (delivery->greater_37_wks[3 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result23 = vc WITH noconstant (build2 (delivery->greater_37_wks[4 ].count ,char (0 )) ) ,protect
  	DECLARE __sum_result24 = vc WITH noconstant (build2 (delivery->less_1500_g[1 ].count ,char (0 ) )) ,protect
  	DECLARE __sum_result25 = vc WITH noconstant (build2 (delivery->less_1500_g[2 ].count ,char (0 ) )) ,protect
  	DECLARE __sum_result26 = vc WITH noconstant (build2 (delivery->less_1500_g[3 ].count ,char (0 ) )) ,protect
  	DECLARE __sum_result27 = vc WITH noconstant (build2 (delivery->less_1500_g[4 ].count ,char (0 ) )) ,protect
  	DECLARE __total_lbl    = vc WITH noconstant (build2 (captions->total ,char (0 ) ) ) ,protect
  	DECLARE __sum_result30 = vc WITH noconstant (build2 (delivery->tot_num_births ,char (0 ) ) ) ,protect
  	DECLARE __sum_result31 = vc WITH noconstant (build2 (delivery->tot_num_mother_deliv ,char (0 ) ) ),protect
  	DECLARE __sum_result32 = vc WITH noconstant (build2 (delivery->tot_num_nuliparous ,char (0 ) ) ) ,protect
  	DECLARE __sum_result33 = vc WITH noconstant (build2 (delivery->tot_greater_37_wks ,char (0 ) ) ) ,protect
  	DECLARE __sum_result34 = vc WITH noconstant (build2 (delivery->tot_less_1500_g ,char (0 ) ) ) ,protect
 
  	IF ((ncalc = rpt_render ) )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_borders = rpt_sdnoborders
   		SET rptsd->m_padding = rpt_sdnoborders
   		SET rptsd->m_paddingwidth = 0.000
   		SET rptsd->m_linespacing = rpt_single
   		SET rptsd->m_rotationangle = 0
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _oldfont = uar_rptsetfont (_hreport ,_times10b0 )
   		SET _oldpen = uar_rptsetpen (_hreport ,_pen14s0c0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__singleton_lbl )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__twins_lbl )
   		SET rptsd->m_y = (offsety + 0.875 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__triplets_lbl )
   		SET rptsd->m_y = (offsety + 1.063 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__other_lbl )
   		SET rptsd->m_flags = 1044
   		SET rptsd->m_y = (offsety + 0.000 )
   		SET rptsd->m_x = (offsetx + 1.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.500
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__births_lbl )
   		SET rptsd->m_y = (offsety + 0.000 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.500
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__mothers_delivered )
   		SET rptsd->m_y = (offsety + 0.000 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.500
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__nul_mothers_lbl )
   		SET rptsd->m_y = (offsety + 0.000 )
   		SET rptsd->m_x = (offsetx + 5.000 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.500
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__thirty_seven_lbl )
   		SET rptsd->m_y = (offsety + 0.000 )
   		SET rptsd->m_x = (offsetx + 6.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.500
   		SET _dummypen = uar_rptsetpen (_hreport ,_pen14s0c16777215 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__fifteen_g_lbl )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 1.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _dummypen = uar_rptsetpen (_hreport ,_pen14s0c0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 1.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result9 )
   		SET rptsd->m_y = (offsety + 0.875 )
   		SET rptsd->m_x = (offsetx + 1.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result10 )
   		SET rptsd->m_y = (offsety + 1.063 )
   		SET rptsd->m_x = (offsetx + 1.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result11 )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result12 )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result13 )
   		SET rptsd->m_y = (offsety + 0.875 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result14 )
   		SET rptsd->m_y = (offsety + 1.063 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result15 )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result16 )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result17 )
   		SET rptsd->m_y = (offsety + 0.875 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result18 )
   		SET rptsd->m_y = (offsety + 1.063 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result19 )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 5.000 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result20 )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 5.000 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result21 )
   		SET rptsd->m_y = (offsety + 0.875 )
   		SET rptsd->m_x = (offsetx + 5.000 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result22 )
   		SET rptsd->m_y = (offsety + 1.063 )
   		SET rptsd->m_x = (offsetx + 5.000 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result23 )
   		SET rptsd->m_y = (offsety + 0.500 )
   		SET rptsd->m_x = (offsetx + 6.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result24 )
   		SET rptsd->m_y = (offsety + 0.688 )
   		SET rptsd->m_x = (offsetx + 6.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result25 )
   		SET rptsd->m_y = (offsety + 0.875 )
   		SET rptsd->m_x = (offsetx + 6.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result26 )
   		SET rptsd->m_y = (offsety + 1.063 )
   		SET rptsd->m_x = (offsetx + 6.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result27 )
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 1.313 ) ,(offsetx + 7.250 ) ,(offsety + 1.313 ) )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times10b0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__total_lbl )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 1.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result30 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result31 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 3.750 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result32 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 5.000 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result33 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 6.250 )
   		SET rptsd->m_width = 1.000
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result34 )
   		SET _dummyfont = uar_rptsetfont (_hreport ,_oldfont )
   		SET _dummypen = uar_rptsetpen (_hreport ,_oldpen )
   		SET _yoffset = (offsety + sectionheight )
  	ENDIF
  	RETURN (sectionheight )
END ;Subroutine
 
SUBROUTINE  cesareansection (ncalc )
  	DECLARE a1 = f8 WITH noconstant (0.0 ) ,private
  	SET a1 = cesareansectionabs (ncalc ,_xoffset ,_yoffset )
  	RETURN (a1 )
END ;Subroutine
 
SUBROUTINE  cesareansectionabs (ncalc ,offsetx ,offsety )
  	DECLARE sectionheight = f8 WITH noconstant (3.290000 ) ,private
  	DECLARE __csect_vbac_lbl = vc WITH noconstant (build2 (captions->csec_vbac ,char (0 ) ) ) ,protect
  	DECLARE __num_cs_lbl = vc WITH noconstant (build2 (captions->num_of_csec ,char (0 ) ) ) ,protect
  	DECLARE __cs_rate_lbl = vc WITH noconstant (build2 (captions->overall_cs_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result5 = vc WITH noconstant (build2 (delivery->tot_cs_rate ,char (0 ) ) ) ,protect
  	DECLARE __repeat_vbac_lbl = vc WITH noconstant (build2 (captions->repeat_vbac ,char (0 ) ) ) ,protect
  	DECLARE __number_lbl = vc WITH noconstant (build2 (captions->number ,char (0 ) ) ) ,protect
  	DECLARE __rate_lbl = vc WITH noconstant (build2 (captions->rate ,char (0 ) ) ) ,protect
  	DECLARE __live_37_lbl = vc WITH noconstant (build2 (captions->live_birth_beyond ,char (0 ) ) ) ,protect
  	DECLARE __number_of_single_prior_cs_lbl = vc WITH noconstant (build2 (captions->num_single_prior_cs,char (0 ) ) ) ,protect
  	DECLARE __number_of_vbac_attempted_lbl = vc WITH noconstant (build2 (captions->num_vbac_attempt ,char (0 ) ) ) ,protect
  	DECLARE __number_of_vbac_successful_lbl = vc WITH noconstant (build2 (captions->num_vbac_succ ,char (0 ) ) ) ,protect
  	DECLARE __vbac_rate_prior_cs_lbl = vc WITH noconstant (build2 (captions->vbac_rate ,char (0 ) ) ) ,protect
  	DECLARE __number_of_repeat_cs = vc WITH noconstant (build2 (captions->num_repeat_cs ,char (0 ) ) ),protect
  	DECLARE __sum_result15 = vc WITH noconstant (build2 (delivery->tot_prior_cs ,char (0 ) ) ) ,protect
  	DECLARE __sum_result16 = vc WITH noconstant (build2 (delivery->prior_single_cs ,char (0 ) ) ) ,protect
  	DECLARE __sum_result20 = vc WITH noconstant (build2 (delivery->prior_repeat_cs ,char (0 ) ) ) ,protect
  	DECLARE __sum_result23 = vc WITH noconstant (build2 (delivery->tot_prior_cs_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result24 = vc WITH noconstant (build2 (delivery->prior_repeat_cs_rate ,char (0 ) ) ),protect
  	DECLARE __sum_result25 = vc WITH noconstant (build2 (delivery->prior_single_cs_rate ,char (0 ) ) ),protect
  	DECLARE __primary_cesarean_section_lbl = vc WITH noconstant (build2 (captions->tot_primary_cs ,char (0 ) ) ) ,protect
  	DECLARE __rate_lbl29 = vc WITH noconstant (build2 (captions->rate ,char (0 ) ) ) ,protect
  	DECLARE __number_lbl30 = vc WITH noconstant (build2 (captions->number ,char (0 ) ) ) ,protect
  	DECLARE __tot_prim_cs_lbl = vc WITH noconstant (build2 (captions->tot_primary_cs ,char (0 ) ) ) ,protect
  	DECLARE __cpdftp_lbl = vc WITH noconstant (build2 (captions->cpd_ftp ,char (0 ) ) ) ,protect
  	DECLARE __fetal_distress_lbl = vc WITH noconstant (build2 (captions->fetal_distress ,char (0 ) ) ),protect
  	DECLARE __malpresentation_lbl = vc WITH noconstant (build2 (captions->malpresentation ,char (0 ) )) ,protect
  	DECLARE __other_lbl = vc WITH noconstant (build2 (captions->other ,char (0 ) ) ) ,protect
  	DECLARE __sum_result36 = vc WITH noconstant (build2 (delivery->tot_prim_cs ,char (0 ) ) ) ,protect
  	DECLARE __sum_result37 = vc WITH noconstant (build2 (delivery->tot_cpd_ftp ,char (0 ) ) ) ,protect
  	DECLARE __sum_result38 = vc WITH noconstant (build2 (delivery->tot_fetal_distress ,char (0 ) ) ) ,protect
  	DECLARE __sum_result39 = vc WITH noconstant (build2 (delivery->tot_malpresentation ,char (0 ) ) ) ,protect
  	DECLARE __sum_result40 = vc WITH noconstant (build2 (delivery->tot_reason_cs_other ,char (0 ) ) ) ,protect
  	DECLARE __sum_result41 = vc WITH noconstant (build2 (delivery->tot_prim_cs_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result42 = vc WITH noconstant (build2 (delivery->tot_cpd_ftp_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result43 = vc WITH noconstant (build2 (delivery->tot_fetal_distress_rate ,char (0 )) ) ,protect
  	DECLARE __sum_result44 = vc WITH noconstant (build2 (delivery->tot_malpresentation_rate ,char (0 )) ) ,protect
  	DECLARE __sum_result45 = vc WITH noconstant (build2 (delivery->tot_reason_cs_other_rate ,char (0 )) ) ,protect
  	DECLARE __sum_result0 = vc WITH noconstant (build2 (delivery->vbac_prior_cs_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result2 = vc WITH noconstant (build2 ((delivery->tot_vbac + delivery->tot_failed_vbac) ,char (0 ) ) ) ,protect
  	DECLARE __sum_result3 = vc WITH noconstant (build2 (delivery->vbac_attempt_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result4 = vc WITH noconstant (build2 (delivery->vbac_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result6 = vc WITH noconstant (build2 (delivery->tot_vbac ,char (0 ) ) ) ,protect
  	DECLARE __sum_result1 = vc WITH noconstant (build2 (delivery->tot_cs ,char (0 ) ) ) ,protect
  	DECLARE __c_singleton_lbl = vc WITH noconstant (build2 (captions->cs_del_sing ,char (0 ) ) ) ,protect
  	DECLARE __c_rate_lbl = vc WITH noconstant (build2 (captions->cs_rate_sing ,char (0 ) ) ) ,protect
  	DECLARE __stv_nopriorcs_lbl = vc WITH noconstant (build2 (captions->sing_vertext_no_prior ,char (0) ) ) ,protect
  	DECLARE __cs_rate2_lbl = vc WITH noconstant (build2 (captions->cs_rate ,char (0 ) ) ) ,protect
  	DECLARE __csections_lbl = vc WITH noconstant (build2 (captions->cs ,char (0 ) ) ) ,protect
  	DECLARE __tot_births_lbl = vc WITH noconstant (build2 (captions->tot_births ,char (0 ) ) ) ,protect
  	DECLARE __primips_lbl = vc WITH noconstant (build2 (captions->primips ,char (0 ) ) ) ,protect
  	DECLARE __multips_lbl = vc WITH noconstant (build2 (captions->multips ,char (0 ) ) ) ,protect
  	DECLARE __sum_result13 = vc WITH noconstant (build2 (delivery->live_birth_greater_37_wks ,char (0) ) ) ,protect
  	DECLARE __sum_result14 = vc WITH noconstant (build2 (delivery->cs_sing_term_ver_prim ,char (0 ) )) ,protect
  	DECLARE __sum_result17 = vc WITH noconstant (build2 (delivery->cs_sing_term_ver_prim_rt ,char (0 )) ) ,protect
  	DECLARE __sum_result7 = vc WITH noconstant (build2 (delivery->primips_tot_birth ,char (0 ) ) ) ,protect
  	DECLARE __sum_result8 = vc WITH noconstant (build2 (delivery->multips_tot_birth ,char (0 ) ) ) ,protect
  	DECLARE __sum_result9 = vc WITH noconstant (build2 (delivery->primips_tot_birth_cs ,char (0 ) ) ) ,protect
  	DECLARE __sum_result10 = vc WITH noconstant (build2 (delivery->multips_tot_birth_cs ,char (0 ) ) ),protect
  	DECLARE __sum_result11 = vc WITH noconstant (build2 (delivery->primips_tot_birth_cs_rate ,char (0) ) ) ,protect
  	DECLARE __sum_result12 = vc WITH noconstant (build2 (delivery->multips_tot_birth_cs_rate ,char (0) ) ) ,protect
  	DECLARE __number_prior_cs_lbl = vc WITH noconstant (build2 (captions->num_prior_cs ,char (0 ) ) ) ,protect
 
  	IF ((ncalc = rpt_render ) )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_borders = rpt_sdnoborders
   		SET rptsd->m_padding = rpt_sdnoborders
   		SET rptsd->m_paddingwidth = 0.000
   		SET rptsd->m_linespacing = rpt_single
   		SET rptsd->m_rotationangle = 0
   		SET rptsd->m_y = (offsety + 0.125 )
   		SET rptsd->m_x = (offsetx + 0.250 )
   		SET rptsd->m_width = 3.250
   		SET rptsd->m_height = 0.198
   		SET _oldfont = uar_rptsetfont (_hreport ,_times10b0 )
   		SET _oldpen = uar_rptsetpen (_hreport ,_pen14s0c0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__csect_vbac_lbl )
   		SET _dummypen = uar_rptsetpen (_hreport ,_pen21s0c0 )
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 0.344 ) ,(offsetx + 7.250 ) ,(offsety + 0.344 ) )
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 3.282 ) ,(offsetx + 7.250 ) ,(offsety + 3.282 ) )
   		SET _dummypen = uar_rptsetpen (_hreport ,_pen14s0c0 )
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 0.657 ) ,(offsetx + 7.250 ) ,(offsety + 0.657 ) )
   		SET rptsd->m_y = (offsety + 0.438 )
   		SET rptsd->m_x = (offsetx + 0.500 )
   		SET rptsd->m_width = 2.000
   		SET rptsd->m_height = 0.198
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__num_cs_lbl )
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 3.751 ) ,(offsety + 0.667 ) ,(offsetx + 3.751 ) ,(offsety + 3.271 ) )
   		SET rptsd->m_y = (offsety + 0.438 )
   		SET rptsd->m_x = (offsetx + 4.000 )
   		SET rptsd->m_width = 2.250
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__cs_rate_lbl )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_y = (offsety + 0.438 )
   		SET rptsd->m_x = (offsetx + 6.750 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.198
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result5 )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_y = (offsety + 0.750 )
   		SET rptsd->m_x = (offsetx + 0.313 )
   		SET rptsd->m_width = 2.125
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times10b0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__repeat_vbac_lbl )
   		SET rptsd->m_y = (offsety + 0.750 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__number_lbl )
   		SET rptsd->m_y = (offsety + 0.750 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__rate_lbl )
   		SET rptsd->m_y = (offsety + 2.625 )
   		SET rptsd->m_x = (offsetx + 0.313 )
   		SET rptsd->m_width = 2.938
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__live_37_lbl )
   		SET rptsd->m_y = (offsety + 1.188 )
   		SET rptsd->m_x = (offsetx + 0.625 )
   		SET rptsd->m_width = 1.875
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__number_of_single_prior_cs_lbl )
   		SET rptsd->m_y = (offsety + 1.563 )
   		SET rptsd->m_x = (offsetx + 0.500 )
   		SET rptsd->m_width = 2.000
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__number_of_vbac_attempted_lbl )
   		SET rptsd->m_y = (offsety + 1.750 )
   		SET rptsd->m_x = (offsetx + 0.500 )
   		SET rptsd->m_width = 2.000
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__number_of_vbac_successful_lbl )
   		SET rptsd->m_y = (offsety + 1.938 )
   		SET rptsd->m_x = (offsetx + 0.500 )
   		SET rptsd->m_width = 2.000
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__vbac_rate_prior_cs_lbl )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 0.625 )
   		SET rptsd->m_width = 1.875
   		SET rptsd->m_height = 0.188
		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__number_of_repeat_cs )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_y = (offsety + 1.000 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result15 )
   		SET rptsd->m_y = (offsety + 1.188 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result16 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result20 )
   		SET rptsd->m_y = (offsety + 1.000 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result23 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result24 )
   		SET rptsd->m_y = (offsety + 1.188 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result25 )
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 2.157 ) ,(offsetx + 7.250 ) ,(offsety + 2.157 ) )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_y = (offsety + 0.750 )
   		SET rptsd->m_x = (offsetx + 3.813 )
   		SET rptsd->m_width = 2.125
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times10b0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__primary_cesarean_section_lbl )
   		SET rptsd->m_y = (offsety + 0.750 )
   		SET rptsd->m_x = (offsetx + 6.750 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__rate_lbl29 )
   		SET rptsd->m_y = (offsety + 0.750 )
   		SET rptsd->m_x = (offsetx + 6.000 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__number_lbl30 )
   		SET rptsd->m_y = (offsety + 1.000 )
   		SET rptsd->m_x = (offsetx + 4.000 )
   		SET rptsd->m_width = 2.000
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__tot_prim_cs_lbl )
   		SET rptsd->m_y = (offsety + 1.188 )
   		SET rptsd->m_x = (offsetx + 4.125 )
   		SET rptsd->m_width = 1.875
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times10i0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__cpdftp_lbl )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 4.125 )
   		SET rptsd->m_width = 1.875
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__fetal_distress_lbl )
   		SET rptsd->m_y = (offsety + 1.563 )
   		SET rptsd->m_x = (offsetx + 4.125 )
   		SET rptsd->m_width = 1.875
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__malpresentation_lbl )
   		SET rptsd->m_y = (offsety + 1.938 )
   		SET rptsd->m_x = (offsetx + 4.125 )
   		SET rptsd->m_width = 1.875
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__other_lbl )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_y = (offsety + 1.000 )
   		SET rptsd->m_x = (offsetx + 6.000 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result36 )
   		SET rptsd->m_y = (offsety + 1.188 )
   		SET rptsd->m_x = (offsetx + 6.000 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result37 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 6.000 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result38 )
   		SET rptsd->m_y = (offsety + 1.563 )
   		SET rptsd->m_x = (offsetx + 6.000 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result39 )
   		SET rptsd->m_y = (offsety + 1.938 )
   		SET rptsd->m_x = (offsetx + 6.000 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result40 )
   		SET rptsd->m_y = (offsety + 1.000 )
   		SET rptsd->m_x = (offsetx + 6.750 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result41 )
   		SET rptsd->m_y = (offsety + 1.188 )
   		SET rptsd->m_x = (offsetx + 6.750 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result42 )
   		SET rptsd->m_y = (offsety + 1.375 )
   		SET rptsd->m_x = (offsetx + 6.750 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result43 )
   		SET rptsd->m_y = (offsety + 1.563 )
   		SET rptsd->m_x = (offsetx + 6.750 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result44 )
   		SET rptsd->m_y = (offsety + 1.938 )
   		SET rptsd->m_x = (offsetx + 6.750 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result45 )
   		SET rptsd->m_y = (offsety + 1.938 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result0 )
   		SET rptsd->m_y = (offsety + 1.563 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result2 )
   		SET rptsd->m_y = (offsety + 1.563 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result3 )
   		SET rptsd->m_y = (offsety + 1.750 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result4 )
   		SET rptsd->m_y = (offsety + 1.750 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result6 )
   		SET rptsd->m_y = (offsety + 0.438 )
   		SET rptsd->m_x = (offsetx + 2.500 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result1 )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_y = (offsety + 2.813 )
   		SET rptsd->m_x = (offsetx + 0.313 )
   		SET rptsd->m_width = 2.938
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__c_singleton_lbl )
   		SET rptsd->m_y = (offsety + 3.000 )
   		SET rptsd->m_x = (offsetx + 0.313 )
   		SET rptsd->m_width = 2.938
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__c_rate_lbl )
   		SET rptsd->m_y = (offsety + 2.250 )
   		SET rptsd->m_x = (offsetx + 3.813 )
   		SET rptsd->m_width = 3.313
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times10b0 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__stv_nopriorcs_lbl )
   		SET rptsd->m_flags = 20
   		SET rptsd->m_y = (offsety + 2.625 )
   		SET rptsd->m_x = (offsetx + 6.625 )
   		SET rptsd->m_width = 0.625
   		SET rptsd->m_height = 0.188
   		SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__cs_rate2_lbl )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_y = (offsety + 2.625 )
   		SET rptsd->m_x = (offsetx + 6.063 )
   		SET rptsd->m_width = 0.250
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__csections_lbl )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_y = (offsety + 2.625 )
   		SET rptsd->m_x = (offsetx + 4.938 )
   		SET rptsd->m_width = 0.750
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__tot_births_lbl )
   		SET rptsd->m_y = (offsety + 2.813 )
   		SET rptsd->m_x = (offsetx + 4.000 )
   		SET rptsd->m_width = 0.813
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__primips_lbl )
   		SET rptsd->m_y = (offsety + 3.000 )
   		SET rptsd->m_x = (offsetx + 4.000 )
   		SET rptsd->m_width = 0.813
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__multips_lbl )
 
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.251 ) ,(offsety + 0.333 ) ,(offsetx + 0.251 ) ,(offsety + 3.271 ) )
   		SET _rptstat = uar_rptline (_hreport ,(offsetx + 7.240 ) ,(offsety + 0.344 ) ,(offsetx + 7.240 ) ,(offsety + 3.292 ) )
 
;------ this is the beg/end grouping pattern
   		SET rptsd->m_y = (offsety + 2.625 )
   		SET rptsd->m_x = (offsetx + 3.200 ) ;3.250
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result13 )
;------
   		SET rptsd->m_y = (offsety + 2.813 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result14 )
   		SET rptsd->m_flags = 16
   		SET rptsd->m_y = (offsety + 3.000 )
   		SET rptsd->m_x = (offsetx + 3.250 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result17 )
   		SET rptsd->m_y = (offsety + 2.813 )
   		SET rptsd->m_x = (offsetx + 4.938 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result7 )
   		SET rptsd->m_y = (offsety + 3.000 )
   		SET rptsd->m_x = (offsetx + 4.938 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result8 )
   		SET rptsd->m_y = (offsety + 2.813 )
   		SET rptsd->m_x = (offsetx + 5.813 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result9 )
   		SET rptsd->m_y = (offsety + 3.000 )
   		SET rptsd->m_x = (offsetx + 5.813 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result10 )
   		SET rptsd->m_y = (offsety + 2.813 )
   		SET rptsd->m_x = (offsetx + 6.688 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result11 )
   		SET rptsd->m_y = (offsety + 3.000 )
   		SET rptsd->m_x = (offsetx + 6.688 )
   		SET rptsd->m_width = 0.500
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result12 )
   		SET rptsd->m_flags = 32
   		SET rptsd->m_y = (offsety + 1.000 )
   		SET rptsd->m_x = (offsetx + 0.500 )
   		SET rptsd->m_width = 1.875
   		SET rptsd->m_height = 0.188
   		SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__number_prior_cs_lbl )
   		SET _dummyfont = uar_rptsetfont (_hreport ,_oldfont )
   		SET _dummypen = uar_rptsetpen (_hreport ,_oldpen )
   		SET _yoffset = (offsety + sectionheight )
  	ENDIF
  	RETURN (sectionheight )
END ;Subroutine
 
SUBROUTINE  vaginal_section (ncalc )
  	DECLARE a1 = f8 WITH noconstant (0.0 ) ,private
  	SET a1 = vaginal_sectionabs (ncalc ,_xoffset ,_yoffset )
  	RETURN (a1 )
END ;Subroutine
 
SUBROUTINE  vaginal_sectionabs (ncalc ,offsetx ,offsety )
  	DECLARE sectionheight = f8 WITH noconstant (3.420000 ) ,private
  	DECLARE __vag_del_lbl13 = vc WITH noconstant (build2 (captions->vag_deliv ,char (0 ) ) ) ,protect
  	DECLARE __tot_vag_lbl = vc WITH noconstant (build2 (captions->tot_vag_deliv ,char (0 ) ) ) ,protect
  	DECLARE __sum_result18 = vc WITH noconstant (build2 (delivery->tot_vag ,char (0 ) ) ) ,protect
  	DECLARE __vac_lbl = vc WITH noconstant (build2 (captions->num_vacuum ,char (0 ) ) ) ,protect
  	DECLARE __for_lbl = vc WITH noconstant (build2 (captions->num_forceps ,char (0 ) ) ) ,protect
  	DECLARE __tot_op_vag_del_lbl = vc WITH noconstant (build2 (captions->tot_op_vag_del ,char (0 ) ) ),protect
  	DECLARE __sum_result5 = vc WITH noconstant (build2 (delivery->num_vacuum_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result7 = vc WITH noconstant (build2 (delivery->num_forceps_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result9 = vc WITH noconstant (build2 (delivery->tot_op_vag_del_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result10 = vc WITH noconstant (build2 (delivery->tot_op_vag_del ,char (0 ) ) ) ,protect
  	DECLARE __sum_result11 = vc WITH noconstant (build2 (delivery->num_vacuum ,char (0 ) ) ) ,protect
  	DECLARE __sum_result13 = vc WITH noconstant (build2 (delivery->num_forceps ,char (0 ) ) ) ,protect
  	DECLARE __for_vac_lbl = vc WITH noconstant (build2 (captions->num_for_vac ,char (0 ) ) ) ,protect
  	DECLARE __sum_result16 = vc WITH noconstant (build2 (delivery->num_for_vac ,char (0 ) ) ) ,protect
  	DECLARE __sum_result17 = vc WITH noconstant (build2 (delivery->num_for_vac_rate ,char (0 ) ) ) ,protect
  	DECLARE __oxy_induct_lbl = vc WITH noconstant (build2 (captions->oxy_induct ,char (0 ) ) ) ,protect
  	DECLARE __oxy_aug_lbl = vc WITH noconstant (build2 (captions->oxy_aug ,char (0 ) ) ) ,protect
  	DECLARE __oxy_tot_lbl = vc WITH noconstant (build2 (captions->tot_oxy ,char (0 ) ) ) ,protect
  	DECLARE __sum_result3 = vc WITH noconstant (build2 (delivery->oxytocin_inductions ,char (0 ) ) ) ,protect
  	DECLARE __sum_result4 = vc WITH noconstant (build2 (delivery->oxytocin_aug ,char (0 ) ) ) ,protect
  	DECLARE __sum_result6 = vc WITH noconstant (build2 (delivery->oxytocin_total ,char (0 ) ) ) ,protect
  	DECLARE __sum_result8 = vc WITH noconstant (build2 (delivery->oxytocin_inductions_rate ,char (0 )) ) ,protect
  	DECLARE __sum_result12 = vc WITH noconstant (build2 (delivery->oxytocin_aug_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result14 = vc WITH noconstant (build2 (delivery->oxytocin_total_rate ,char (0 ) ) ) ,protect
  	DECLARE __oxy_tot_lbl15 = vc WITH noconstant (build2 (captions->only_for ,char (0 ) ) ) ,protect
  	DECLARE __epis_lbl = vc WITH noconstant (build2 (captions->epis_vag ,char (0 ) ) ) ,protect
  	DECLARE __third_degree = vc WITH noconstant (build2 (captions->3_degree ,char (0 ) ) ) ,protect
  	DECLARE __fourth_degree = vc WITH noconstant (build2 (captions->4_degree ,char (0 ) ) ) ,protect
  	DECLARE __epid_lbl = vc WITH noconstant (build2 (captions->epid_vag ,char (0 ) ) ) ,protect
  	DECLARE __sum_result26 = vc WITH noconstant (build2 (delivery->tot_epis ,char (0 ) ) ) ,protect
  	DECLARE __sum_result27 = vc WITH noconstant (build2 (delivery->3_degree_lac ,char (0 ) ) ) ,protect
  	DECLARE __sum_result28 = vc WITH noconstant (build2 (delivery->4_degree_lac ,char (0 ) ) ) ,protect
  	DECLARE __sum_result29 = vc WITH noconstant (build2 (delivery->tot_epid ,char (0 ) ) ) ,protect
  	DECLARE __sum_result45 = vc WITH noconstant (build2 (delivery->tot_epis_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result30 = vc WITH noconstant (build2 (delivery->3_degree_lac_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result31 = vc WITH noconstant (build2 (delivery->4_degree_lac_rate ,char (0 ) ) ) ,protect
  	DECLARE __sum_result32 = vc WITH noconstant (build2 (delivery->tot_epid_rate ,char (0 ) ) ) ,protect
 
	IF ((ncalc = rpt_render ) )
	   	SET rptsd->m_flags = 32
	   	SET rptsd->m_borders = rpt_sdnoborders
	   	SET rptsd->m_padding = rpt_sdnoborders
	   	SET rptsd->m_paddingwidth = 0.000
	   	SET rptsd->m_linespacing = rpt_single
	   	SET rptsd->m_rotationangle = 0
	   	SET rptsd->m_y = (offsety + 0.125 )
	   	SET rptsd->m_x = (offsetx + 0.250 )
	   	SET rptsd->m_width = 3.250
	   	SET rptsd->m_height = 0.198
	   	SET _oldfont = uar_rptsetfont (_hreport ,_times10b0 )
	   	SET _oldpen = uar_rptsetpen (_hreport ,_pen14s0c0 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__vag_del_lbl13 )
	   	SET _dummypen = uar_rptsetpen (_hreport ,_pen21s0c0 )
	   	SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 0.407 ) ,(offsetx + 7.250 ) ,(offsety + 0.407 ) )
	   	SET rptsd->m_y = (offsety + 0.500 )
	   	SET rptsd->m_x = (offsetx + 0.375 )
	   	SET rptsd->m_width = 2.000
	   	SET rptsd->m_height = 0.198
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
	   	SET _dummypen = uar_rptsetpen (_hreport ,_pen14s0c0 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__tot_vag_lbl )
	   	SET rptsd->m_flags = 16
	   	SET rptsd->m_y = (offsety + 0.500 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result18 )
	   	SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 0.730 ) ,(offsetx + 7.250 ) ,(offsety + 0.730 ) )
	   	SET rptsd->m_flags = 32
	   	SET rptsd->m_y = (offsety + 0.875 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 1.938
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__vac_lbl )
	   	SET rptsd->m_y = (offsety + 1.063 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 2.000
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__for_lbl )
	   	SET rptsd->m_y = (offsety + 1.438 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 2.135
	   	SET rptsd->m_height = 0.198
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_times10b0 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__tot_op_vag_del_lbl )
	   	SET rptsd->m_flags = 16
	   	SET rptsd->m_y = (offsety + 0.875 )
	   	SET rptsd->m_x = (offsetx + 3.250 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result5 )
	   	SET rptsd->m_y = (offsety + 1.063 )
	   	SET rptsd->m_x = (offsetx + 3.250 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result7 )
	   	SET rptsd->m_y = (offsety + 1.438 )
	   	SET rptsd->m_x = (offsetx + 3.250 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result9 )
	   	SET rptsd->m_y = (offsety + 1.438 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result10 )
	   	SET rptsd->m_y = (offsety + 0.875 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result11 )
	   	SET rptsd->m_y = (offsety + 1.063 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result13 )
	   	SET rptsd->m_flags = 32
	   	SET rptsd->m_y = (offsety + 1.250 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 2.000
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__for_vac_lbl )
	   	SET rptsd->m_flags = 16
	   	SET rptsd->m_y = (offsety + 1.250 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result16 )
	   	SET rptsd->m_y = (offsety + 1.250 )
	   	SET rptsd->m_x = (offsetx + 3.250 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result17 )
	   	SET rptsd->m_flags = 32
	   	SET rptsd->m_y = (offsety + 1.813 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 2.000
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__oxy_induct_lbl )
	   	SET rptsd->m_y = (offsety + 2.000 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 2.000
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__oxy_aug_lbl )
	   	SET rptsd->m_y = (offsety + 2.188 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 2.000
	   	SET rptsd->m_height = 0.198
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_times10b0 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__oxy_tot_lbl )
	   	SET rptsd->m_flags = 16
	   	SET rptsd->m_y = (offsety + 1.813 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result3 )
	   	SET rptsd->m_y = (offsety + 2.000 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result4 )
	   	SET rptsd->m_y = (offsety + 2.188 )
	   	SET rptsd->m_x = (offsetx + 2.625 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result6 )
	   	SET rptsd->m_y = (offsety + 1.813 )
	   	SET rptsd->m_x = (offsetx + 3.250 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.250
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result8 )
	   	SET rptsd->m_y = (offsety + 2.000 )
	   	SET rptsd->m_x = (offsetx + 3.250 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result12 )
	   	SET rptsd->m_y = (offsety + 2.188 )
	   	SET rptsd->m_x = (offsetx + 3.250 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result14 )
	   	SET rptsd->m_flags = 36
	   	SET rptsd->m_y = (offsety + 2.500 )
	   	SET rptsd->m_x = (offsetx + 0.313 )
	   	SET rptsd->m_width = 3.375
	   	SET rptsd->m_height = 0.313
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_times8b0 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__oxy_tot_lbl15 )
	   	SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 0.406 ) ,(offsetx + 0.250 ) ,(offsety + 2.812 ) )
	   	SET _rptstat = uar_rptline (_hreport ,(offsetx + 7.240 ) ,(offsety + 0.396 ) ,(offsetx + 7.240 ) ,(offsety + 2.802 ) )
	   	SET _dummypen = uar_rptsetpen (_hreport ,_pen21s0c0 )
	   	SET _rptstat = uar_rptline (_hreport ,(offsetx + 0.250 ) ,(offsety + 2.791 ) ,(offsetx + 7.250 ) ,(offsety + 2.791 ) )
	   	SET _dummypen = uar_rptsetpen (_hreport ,_pen14s0c0 )
	  	SET _rptstat = uar_rptline (_hreport ,(offsetx + 3.750 ) ,(offsety + 0.740 ) ,(offsetx + 3.750 ) ,(offsety + 2.782 ) )
	   	SET rptsd->m_flags = 32
	   	SET rptsd->m_y = (offsety + 0.875 )
	   	SET rptsd->m_x = (offsetx + 3.813 )
	   	SET rptsd->m_width = 1.938
	   	SET rptsd->m_height = 0.198
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_times100 )
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__epis_lbl )
	   	SET rptsd->m_flags = 36
	   	SET rptsd->m_y = (offsety + 1.250 )
	   	SET rptsd->m_x = (offsetx + 3.813 )
	   	SET rptsd->m_width = 1.635
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__third_degree )
	   	SET rptsd->m_y = (offsety + 1.438 )
	   	SET rptsd->m_x = (offsetx + 3.813 )
	   	SET rptsd->m_width = 1.625
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__fourth_degree )
	   	SET rptsd->m_flags = 32
	   	SET rptsd->m_y = (offsety + 2.000 )
	   	SET rptsd->m_x = (offsetx + 3.813 )
	   	SET rptsd->m_width = 2.000
	   	SET rptsd->m_height = 0.198
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__epid_lbl )
	   	SET rptsd->m_flags = 16
	   	SET rptsd->m_y = (offsety + 0.875 )
	   	SET rptsd->m_x = (offsetx + 6.000 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result26 )
	   	SET rptsd->m_y = (offsety + 1.250 )
	   	SET rptsd->m_x = (offsetx + 6.000 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result27 )
	   	SET rptsd->m_y = (offsety + 1.438 )
	   	SET rptsd->m_x = (offsetx + 6.000 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result28 )
	   	SET rptsd->m_y = (offsety + 2.000 )
	   	SET rptsd->m_x = (offsetx + 6.000 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result29 )
	   	SET rptsd->m_y = (offsety + 0.875 )
	   	SET rptsd->m_x = (offsetx + 6.750 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result45 )
	   	SET rptsd->m_y = (offsety + 1.250 )
	   	SET rptsd->m_x = (offsetx + 6.750 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result30 )
	   	SET rptsd->m_y = (offsety + 1.438 )
	   	SET rptsd->m_x = (offsetx + 6.750 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result31 )
	   	SET rptsd->m_y = (offsety + 2.000 )
	   	SET rptsd->m_x = (offsetx + 6.750 )
	   	SET rptsd->m_width = 0.500
	   	SET rptsd->m_height = 0.188
	   	SET _fdrawheight = uar_rptstringdraw (_hreport ,rptsd ,__sum_result32 )
	   	SET _dummyfont = uar_rptsetfont (_hreport ,_oldfont )
	   	SET _dummypen = uar_rptsetpen (_hreport ,_oldpen )
	   	SET _yoffset = (offsety + sectionheight )
  	ENDIF
  	RETURN (sectionheight )
END ;Subroutine
 
SUBROUTINE  initializereport (dummy )
  	SET rptreport->m_recsize = 100
  	SET rptreport->m_reportname = "cov_wh_DeliveryStatistics"  ;001
  	SET rptreport->m_pagewidth = 8.50
  	SET rptreport->m_pageheight = 11.00
  	SET rptreport->m_orientation = rpt_portrait
  	SET rptreport->m_marginleft = 0.50
  	SET rptreport->m_marginright = 0.50
  	SET rptreport->m_margintop = 0.50
  	SET rptreport->m_marginbottom = 0.50
  	SET rptreport->m_horzprintoffset = _xshift
  	SET rptreport->m_vertprintoffset = _yshift
  	SET _yoffset = rptreport->m_margintop
  	SET _xoffset = rptreport->m_marginleft
  	SET _hreport = uar_rptcreatereport (rptreport ,_outputtype ,rpt_inches )
  	SET _rpterr = uar_rptseterrorlevel (_hreport ,rpt_error )
  	SET _rptstat = uar_rptstartreport (_hreport )
  	SET _rptpage = uar_rptstartpage (_hreport )
  	CALL _createfonts (0 )
  	CALL _createpens (0 )
END ;Subroutine
 
SUBROUTINE  _createfonts (dummy )
  	SET rptfont->m_recsize = 50
  	SET rptfont->m_fontname = rpt_times
  	SET rptfont->m_pointsize = 10
  	SET rptfont->m_bold = rpt_off
  	SET rptfont->m_italic = rpt_off
  	SET rptfont->m_underline = rpt_off
  	SET rptfont->m_strikethrough = rpt_off
  	SET rptfont->m_rgbcolor = rpt_black
  	SET _times100 = uar_rptcreatefont (_hreport ,rptfont )
  	SET rptfont->m_pointsize = 14
  	SET rptfont->m_bold = rpt_on
  	SET _times14b0 = uar_rptcreatefont (_hreport ,rptfont )
  	SET rptfont->m_pointsize = 10
  	SET _times10b0 = uar_rptcreatefont (_hreport ,rptfont )
  	SET rptfont->m_bold = rpt_off
  	SET rptfont->m_italic = rpt_on
  	SET _times10i0 = uar_rptcreatefont (_hreport ,rptfont )
  	SET rptfont->m_pointsize = 8
  	SET rptfont->m_bold = rpt_on
  	SET rptfont->m_italic = rpt_off
  	SET _times8b0 = uar_rptcreatefont (_hreport ,rptfont )
END ;Subroutine
 
SUBROUTINE  _createpens (dummy )
  	SET rptpen->m_recsize = 16
  	SET rptpen->m_penwidth = 0.014
  	SET rptpen->m_penstyle = 0
  	SET rptpen->m_rgbcolor = rpt_black
  	SET _pen14s0c0 = uar_rptcreatepen (_hreport ,rptpen )
  	SET rptpen->m_rgbcolor = rpt_white
  	SET _pen14s0c16777215 = uar_rptcreatepen (_hreport ,rptpen )
  	SET rptpen->m_penwidth = 0.021
  	SET rptpen->m_rgbcolor = rpt_black
  	SET _pen21s0c0 = uar_rptcreatepen (_hreport ,rptpen )
END ;Subroutine
 
SET d0 = initializereport (0 )
IF ((validate (i18nuar_def ,999 ) = 999 ) )
  	CALL echo ("Declaring i18nuar_def" )
  	DECLARE i18nuar_def = i2 WITH persist
  	SET i18nuar_def = 1
  	DECLARE uar_i18nlocalizationinit ((p1 = i4 ) ,(p2 = vc ) ,(p3 = vc ) ,(p4 = f8 ) ) = i4 WITH persist
  	DECLARE uar_i18ngetmessage ((p1 = i4 ) ,(p2 = vc ) ,(p3 = vc ) ) = vc WITH persist
  	DECLARE uar_i18nbuildmessage () = vc WITH persist
  	DECLARE uar_i18ngethijridate ((imonth = i2 (val ) ) ,(iday = i2 (val ) ) ,(iyear = i2 (val ) ) ,(
   		sdateformattype = vc (ref ) ) ) = c50 WITH image_axp = "shri18nuar" ,image_aix =
  		"libi18n_locale.a(libi18n_locale.o)" ,uar = "uar_i18nGetHijriDate" ,persist
  	DECLARE uar_i18nbuildfullformatname ((sfirst = vc (ref ) ) ,(slast = vc (ref ) ) ,(smiddle = vc (
    	ref ) ) ,(sdegree = vc (ref ) ) ,(stitle = vc (ref ) ) ,(sprefix = vc (ref ) ) ,(ssuffix = vc (
    	ref ) ) ,(sinitials = vc (ref ) ) ,(soriginal = vc (ref ) ) ) = c250 WITH image_axp =
  		"shri18nuar" ,image_aix = "libi18n_locale.a(libi18n_locale.o)" ,uar = "i18nBuildFullFormatName" ,persist
  	DECLARE uar_i18ngetarabictime ((ctime = vc (ref ) ) ) = c20 WITH image_axp = "shri18nuar" ,
  		image_aix = "libi18n_locale.a(libi18n_locale.o)" ,uar = "i18n_GetArabicTime" ,persist
ENDIF
 
IF ((validate (i18nuar_def ,999 ) = 999 ) )
  	CALL echo ("Declaring i18nuar_def" )
  	DECLARE i18nuar_def = i2 WITH persist
  	SET i18nuar_def = 1
  	DECLARE uar_i18nlocalizationinit ((p1 = i4 ) ,(p2 = vc ) ,(p3 = vc ) ,(p4 = f8 ) ) = i4 WITH persist
  	DECLARE uar_i18ngetmessage ((p1 = i4 ) ,(p2 = vc ) ,(p3 = vc ) ) = vc WITH persist
  	DECLARE uar_i18nbuildmessage () = vc WITH persist
ENDIF
 
DECLARE i18nhandle = i4 WITH persistscript
CALL uar_i18nlocalizationinit (i18nhandle ,curprog ,"" ,curcclrev )
 
IF (NOT (validate (reply ,0 ) ) )
  	RECORD reply (
    	1 status_data
      		2 status = c1
      		2 subeventstatus [1 ]
        		3 operationname = c25
        		3 operationstatus = c1
        		3 targetobjectname = c25
        		3 targetobjectvalue = vc
  	)
ENDIF
 
FREE RECORD birth
RECORD birth (
   	1 sz = i4
   	1 rec [* ]
     	2 event_cd = f8
)
 
FREE RECORD org
RECORD org (
   	1 rec [* ]
     	2 organization_id = f8
     	2 display = vc
   	1 count = i4
   	1 display = vc
)
 
FREE RECORD dcp_request
RECORD dcp_request (
   	1 patient_list [* ]
     	2 patient_id = f8
   	1 pregnancy_list [* ]
     	2 pregnancy_id = f8
   	1 multiple_egas = i2
)
 
FREE RECORD delivery
RECORD delivery (
   	1 start_date = vc
   	1 end_date = vc
   	1 executed_by = vc
   	1 executed_dt_tm = vc
   	1 tot_births = i4
   	1 tot_cs = i4
   	1 tot_cs_rate = vc
   	1 tot_vag = i4
   	1 tot_vbac = i4
  	1 vbac_rate = vc
   	1 vbac_prior_cs_rate = vc
   	1 vbac_attempt_rate = vc
   	1 tot_failed_vbac = i4
   	1 live_birth_greater_37_wks = i4
   	1 tot_prior_cs = i4
   	1 tot_prior_cs_rate = vc
   	1 prior_single_cs = i4
   	1 prior_single_cs_rate = vc
   	1 prior_repeat_cs = i4
   	1 prior_repeat_cs_rate = vc
   	1 tot_num_births = i4
   	1 tot_num_mother_deliv = i4
   	1 tot_greater_37_wks = i4
   	1 tot_less_1500_g = i4
   	1 tot_num_nuliparous = i4
   	1 tot_nuliparous_cs = i4
   	1 tot_cpd_ftp = i4
   	1 tot_cpd_ftp_rate = vc
   	1 tot_fetal_distress = i4
   	1 tot_fetal_distress_rate = vc
   	1 tot_malpresentation = i4
   	1 tot_malpresentation_rate = vc
   	1 tot_reason_cs_other = i4
   	1 tot_reason_cs_other_rate = vc
   	1 tot_prim_cs = i4
   	1 tot_prim_cs_rate = vc
   	1 cs_sing_term_ver_prim = i4
   	1 cs_sing_term_ver_prim_rt = vc
   	1 primips_tot_birth = i4
   	1 multips_tot_birth = i4
   	1 primips_tot_birth_cs = i4
   	1 multips_tot_birth_cs = i4
   	1 primips_tot_birth_cs_rate = vc
   	1 multips_tot_birth_cs_rate = vc
   	1 num_vacuum = i4
   	1 num_forceps = i4
   	1 tot_op_vag_del = i4
   	1 num_for_vac = i4
   	1 oxytocin_inductions = i4
   	1 oxytocin_aug = i4
   	1 oxytocin_total = i4
   	1 oxytocin_inductions_rate = vc
   	1 oxytocin_aug_rate = vc
   	1 oxytocin_total_rate = vc
   	1 num_vacuum_rate = vc
   	1 num_forceps_rate = vc
   	1 tot_op_vag_del_rate = vc
   	1 num_for_vac_rate = vc
   	1 tot_epis = i4
   	1 tot_epis_rate = vc
   	1 3_degree_lac = i4
   	1 3_degree_lac_rate = vc
   	1 4_degree_lac = i4
   	1 4_degree_lac_rate = vc
   	1 tot_epid = i4
   	1 tot_epid_rate = vc
   	1 num_births [4 ]
    	2 count = i4
   	1 num_mother_deliv [4 ]
     	2 count = i4
   	1 num_nuliparous [4 ]
     	2 count = i4
   	1 greater_37_wks [4 ]
     	2 count = i4
   	1 less_1500_g [4 ]
     	2 count = i4
   	1 rec [* ]
     	2 pregnancy_id = f8
     	2 person_id = f8
     	2 encntr_id = f8
     	2 historical_ind = i4
     	2 pregnancy_end_dt_tm = vc
     	2 maternal_age = vc
     	2 mother_name_last = vc
     	2 mother_name_first = vc
     	2 mrn = vc
     	2 primary_physician = vc
     	2 prev_pregnancy_ind = i4
     	2 cs_ind = i4
     	2 prev_cs_ind = i4
     	2 date_range_ind = i4
     	2 gest_age_grtr_37_ind = i4
     	2 primip_ind = i4
     	2 babya_dt_tm = dq8
     	2 baby [* ]
       		3 delivery_method = vc
       		3 delivery_method_cd = f8
       		3 birth_wt = vc
       		3 gest_age = i4
       		3 gest_age_wks = vc
       		3 delivery_dt_tm = dq8
       		3 wt_less_1500_ind = i4
       		3 vag_ind = i4
      		3 vbac_ind = i4
       		3 neonatal_outcome = vc
       		3 live_birth_ind = i2
       		3 neonatal_outcome_cd = f8
       		3 date_range_ind = i4
       		3 cs_ind = i4
       		3 vertex_ind = i4
       		3 label_name = vc
 )
 
FREE RECORD captions
RECORD captions (
   	1 report_title = vc
   	1 execute_dt_tm = vc
   	1 date_range = vc
   	1 start_date = vc
   	1 end_date = vc
   	1 page_of_page = vc
   	1 executed_by = vc
   	1 end_of_report = vc
   	1 singleton = vc
   	1 twins = vc
   	1 triplets = vc
   	1 other = vc
   	1 total = vc
   	1 births = vc
   	1 mothers_delivered = vc
   	1 nuliparous_mothers = vc
   	1 greater_37_wks = vc
   	1 less_1500_g = vc
   	1 csec_vbac = vc
   	1 num_of_csec = vc
   	1 repeat_vbac = vc
   	1 num_prior_cs = vc
   	1 num_single_prior_cs = vc
   	1 num_vbac_attempt = vc
   	1 num_vbac_succ = vc
   	1 vbac_rate = vc
   	1 num_repeat_cs = vc
   	1 nqf = vc
   	1 live_birth_beyond = vc
   	1 cs_del_sing = vc
   	1 cs_rate_sing = vc
   	1 number = vc
   	1 rate = vc
   	1 overall_cs_rate = vc
   	1 primary_cs = vc
   	1 tot_primary_cs = vc
   	1 cpd_ftp = vc
   	1 fetal_distress = vc
   	1 malpresentation = vc
   	1 sing_vertext_no_prior = vc
   	1 primips = vc
   	1 multips = vc
   	1 tot_births = vc
   	1 cs = vc
   	1 cs_rate = vc
   	1 vag_deliv = vc
   	1 tot_vag_deliv = vc
   	1 num_vacuum = vc
   	1 num_forceps = vc
   	1 num_for_vac = vc
   	1 tot_op_vag_del = vc
   	1 oxy_induct = vc
   	1 oxy_aug = vc
   	1 tot_oxy = vc
   	1 epis_vag = vc
   	1 3_degree = vc
   	1 4_degree = vc
   	1 epid_vag = vc
   	1 only_for = vc
   	1 detail_s = vc
   	1 patient_id = vc
   	1 last_name = vc
   	1 first_name = vc
   	1 gestational_age = vc
   	1 primary_physician = vc
   	1 birth_weight = vc
   	1 maternal_age = vc
   	1 delivery_type = vc
 )
SET captions->report_title = uar_i18ngetmessage (i18nhandle ,"cap1" ,"Delivery Statistics Report" ) ;001
SET captions->execute_dt_tm = uar_i18ngetmessage (i18nhandle ,"cap2" ,"Report Run:" )
SET captions->date_range = uar_i18ngetmessage (i18nhandle ,"cap3" ,"Report Date Range" )
SET captions->start_date = uar_i18ngetmessage (i18nhandle ,"cap4" ,"Start Date" )
SET captions->end_date = uar_i18ngetmessage (i18nhandle ,"cap5" ,"End Date" )
SET captions->page_of_page = uar_i18ngetmessage (i18nhandle ,"cap6" ,"Page" )
SET captions->executed_by = uar_i18ngetmessage (i18nhandle ,"cap7" ,"Executed By:" )
SET captions->end_of_report = uar_i18ngetmessage (i18nhandle ,"cap8" ,"*** End of Report ***" )
SET captions->singleton = uar_i18ngetmessage (i18nhandle ,"cap9" ,"Singleton" )
SET captions->twins = uar_i18ngetmessage (i18nhandle ,"cap10" ,"Twins" )
SET captions->triplets = uar_i18ngetmessage (i18nhandle ,"cap11" ,"Triplets" )
SET captions->other = uar_i18ngetmessage (i18nhandle ,"cap12" ,"Other" )
SET captions->total = uar_i18ngetmessage (i18nhandle ,"cap13" ,"Total" )
SET captions->births = uar_i18ngetmessage (i18nhandle ,"cap14" ,"Newborns" )
SET captions->mothers_delivered = uar_i18ngetmessage (i18nhandle ,"cap15" ,"Mothers Delivered" )
SET captions->nuliparous_mothers = uar_i18ngetmessage (i18nhandle ,"cap16" ,"Nulliparous Mothers" )
SET captions->greater_37_wks = uar_i18ngetmessage (i18nhandle ,"cap17" ,">37 weeks" )
SET captions->less_1500_g = uar_i18ngetmessage (i18nhandle ,"cap18" ,"<1500 g" )
SET captions->csec_vbac = uar_i18ngetmessage (i18nhandle ,"cap19" ,"Cesarean Sections (C/S) and VBACs" )
SET captions->num_of_csec = uar_i18ngetmessage (i18nhandle ,"cap20" ,"Number of C/S Deliveries" )
SET captions->repeat_vbac = uar_i18ngetmessage (i18nhandle ,"cap21" ,"Repeat/VBAC" )
SET captions->num_prior_cs = uar_i18ngetmessage (i18nhandle ,"cap22" ,"Number with Prior C/S" )
SET captions->num_single_prior_cs = uar_i18ngetmessage (i18nhandle ,"cap23" ,"1 Prior C/S" )
SET captions->num_vbac_attempt = uar_i18ngetmessage (i18nhandle ,"cap24" ,"Number of VBAC Attempted" )
SET captions->num_vbac_succ = uar_i18ngetmessage (i18nhandle ,"cap25" ,"Number of VBAC Successful" )
SET captions->vbac_rate = uar_i18ngetmessage (i18nhandle ,"cap26" ,"VBAC Rate (VBAC/Prior C/S)" )
SET captions->num_repeat_cs = uar_i18ngetmessage (i18nhandle ,"cap27" ,"> 1 Prior C/S" )
SET captions->nqf = uar_i18ngetmessage (i18nhandle ,"cap28" ,"NQF" )
SET captions->live_birth_beyond = uar_i18ngetmessage (i18nhandle ,"cap29" ,"Live births beyond 37 weeks" )
SET captions->cs_del_sing = uar_i18ngetmessage (i18nhandle ,"cap30" ,"C/S deliveries for Singleton, Term, Vertex, primips" )
SET captions->cs_rate_sing = uar_i18ngetmessage (i18nhandle ,"cap31" ,"C/S rate for Singleton, Term, Vertex, primips" )
SET captions->number = uar_i18ngetmessage (i18nhandle ,"cap32" ,"Number" )
SET captions->rate = uar_i18ngetmessage (i18nhandle ,"cap33" ,"Rate" )
SET captions->overall_cs_rate = uar_i18ngetmessage (i18nhandle ,"cap34" ,"Overall C/S Rate" )
SET captions->primary_cs = uar_i18ngetmessage (i18nhandle ,"cap35" ,"Primary C/S" )
SET captions->tot_primary_cs = uar_i18ngetmessage (i18nhandle ,"cap36" ,"Total Primary C/S" )
SET captions->cpd_ftp = uar_i18ngetmessage (i18nhandle ,"cap37" ,"CPD/FTP" )
SET captions->fetal_distress = uar_i18ngetmessage (i18nhandle ,"cap38" ,"Nonreassuring Fetal Status" )
SET captions->malpresentation = uar_i18ngetmessage (i18nhandle ,"cap39" ,"Malpresentation" )
SET captions->sing_vertext_no_prior = uar_i18ngetmessage (i18nhandle ,"cap40" ,"Singleton, Term, Vertex (No prior C/S)" )
SET captions->primips = uar_i18ngetmessage (i18nhandle ,"cap41" ,"Primips" )
SET captions->multips = uar_i18ngetmessage (i18nhandle ,"cap42" ,"Multips" )
SET captions->tot_births = uar_i18ngetmessage (i18nhandle ,"cap43" ,"Total Births" )
SET captions->cs = uar_i18ngetmessage (i18nhandle ,"cap44" ,"C/S" )
SET captions->cs_rate = uar_i18ngetmessage (i18nhandle ,"cap45" ,"C/S Rate" )
SET captions->vag_deliv = uar_i18ngetmessage (i18nhandle ,"cap46" ,"Vaginal Deliveries" )
SET captions->tot_vag_deliv = uar_i18ngetmessage (i18nhandle ,"cap47" ,"Total Vaginal Deliveries" )
SET captions->num_vacuum = uar_i18ngetmessage (i18nhandle ,"cap48" ,"Number of Vacuums*" )
SET captions->num_for_vac = uar_i18ngetmessage (i18nhandle ,"cap49" ,"Number of Forceps with Vacuums*" )
SET captions->num_forceps = uar_i18ngetmessage (i18nhandle ,"cap51" ,"Number of Forceps*" )
SET captions->tot_op_vag_del = uar_i18ngetmessage (i18nhandle ,"cap52" ,"Total Operative Vaginal Deliveries*" )
SET captions->oxy_induct = uar_i18ngetmessage (i18nhandle ,"cap53" ,"Oxytocin Inductions" )
SET captions->oxy_aug = uar_i18ngetmessage (i18nhandle ,"cap54" ,"Oxytocin Augmentations" )
SET captions->tot_oxy = uar_i18ngetmessage (i18nhandle ,"cap55" ,"Total Oxytocin Patients" )
SET captions->epis_vag = uar_i18ngetmessage (i18nhandle ,"cap56" ,"Episiotomies (vaginal deliveries)" )
SET captions->3_degree = uar_i18ngetmessage (i18nhandle ,"cap57" ,"3rd Degree Laceration" )
SET captions->4_degree = uar_i18ngetmessage (i18nhandle ,"cap58" ,"4th Degree Laceration" )
SET captions->epid_vag = uar_i18ngetmessage (i18nhandle ,"cap59" ,"Epidurals (vaginal deliveries)" )
SET captions->only_for = uar_i18ngetmessage (i18nhandle ,"cap60" ,
  "*Only for cephalic presentations, Epidurals are per mother, the rest are per delivery" )
SET captions->detail_s = uar_i18ngetmessage (i18nhandle ,"cap61" ,"Detail" )
SET captions->patient_id = uar_i18ngetmessage (i18nhandle ,"cap62" ,"Patient ID" )
SET captions->last_name = uar_i18ngetmessage (i18nhandle ,"cap63" ,"Last Name" )
SET captions->first_name = uar_i18ngetmessage (i18nhandle ,"cap64" ,"First Name" )
SET captions->gestational_age = uar_i18ngetmessage (i18nhandle ,"cap65" ,"Gestational Age" )
SET captions->primary_physician = uar_i18ngetmessage (i18nhandle ,"cap66" ,"Primary Physician" )
SET captions->birth_weight = uar_i18ngetmessage (i18nhandle ,"cap67" ,"Birth Weight (g)" )
SET captions->maternal_age = uar_i18ngetmessage (i18nhandle ,"cap68" ,"Maternal Age" )
SET captions->delivery_type = uar_i18ngetmessage (i18nhandle ,"cap69" ,"Delivery Type" )
;
DECLARE script_version	= vc
DECLARE c_sec_cnt 		= i4 WITH protect ,noconstant (0 )
DECLARE auth 			= f8 WITH protect ,constant (uar_get_code_by_cki ("CKI.CODEVALUE!2628" ) )
DECLARE modified 		= f8 WITH protect ,constant (uar_get_code_by_cki ("CKI.CODEVALUE!2636" ) )
DECLARE altered 		= f8 WITH protect ,constant (uar_get_code_by_cki ("CKI.CODEVALUE!16901" ) )
DECLARE g_cd 			= f8 WITH protect ,constant (uar_get_code_by_cki ("CKI.CODEVALUE!6123" ) )
DECLARE kg_cd 			= f8 WITH protect ,constant (uar_get_code_by_cki ("CKI.CODEVALUE!2751" ) )
DECLARE lb_cd 			= f8 WITH protect ,constant (uar_get_code_by_cki ("CKI.CODEVALUE!2746" ) )
DECLARE lb_to_kg 		= f8 WITH protect ,constant (0.45359237 )
 
DECLARE reason_for_csection = vc WITH protect ,constant ("CERNER!7963B3E1-0F6C-40A0-AA21-4D57220CF9AE" )
;DECLARE presenting_part 				= vc WITH protect ,constant ("CERNER!5E8EA222-CDC3-4297-B9CA-06165BB8FB69"  )
DECLARE presenting_part 				= f8 with constant(uar_get_code_by("DISPLAY",72,"Presenting Part")),protect ;002
;DECLARE para 							= vc WITH protect ,constant ("CERNER!AEO/PQD7LLZ5Xf67n4waeg" )
DECLARE para 							= f8 with constant(uar_get_code_by("DISPLAY",72,"Para")),protect ;002
;DECLARE gravida 						= vc WITH protect ,constant ("CERNER!AEO/PQD7LLZ5Xf6zn4waeg" )
DECLARE gravida 						= f8 with constant(uar_get_code_by("DISPLAY",72,"Gravida")),protect ;002
;DECLARE date_time_of_birth 			= vc WITH protect ,constant ("CERNER!ASYr9AEYvUr1YoPTCqIGfQ" )
DECLARE date_time_of_birth 				= f8 with constant(uar_get_code_by("DISPLAY",72,"Date, Time of Birth:")),protect ;002
 
DECLARE augmentation_methods 			= vc WITH protect ,constant ("CERNER!6B69F0FC-5514-40A1-BBE4-EF20AAF35BE0" )
DECLARE induction_methods 				= vc WITH protect ,constant ("CERNER!4D713327-956D-46E5-893B-8DAFA44336FE" )
DECLARE birth_weight 					= vc WITH protect ,constant ("CERNER!ASYr9AEYvUr1YoRMCqIGfQ" )
DECLARE delivery_type 					= vc WITH protect ,constant ("CERNER!0B07155E-2E5C-461F-ADE6-CB5768257107" )
DECLARE neonate_outcome 				= vc WITH protect ,constant ("CERNER!ASYr9AEYvUr1YoRACqIGfQ" )
DECLARE labial_laceration 				= vc WITH protect ,constant ("CERNER!8CC89133-CAE8-4D22-AF0E-CE133E62B105" )
;
;DECLARE episiotomy_other_information 	= vc WITH protect ,constant ("CERNER!919A00D1-41C2-4717-99E5-1D7147DF69A8" )
DECLARE episiotomy_other_information 	= f8 with constant(uar_get_code_by("DISPLAY",72,"Episiotomy Other Information")),protect ;002
;DECLARE episiotomy_performed 			= vc WITH protect ,constant ("CERNER!155683DF-B118-4C15-B603-B750F3A6515F" )
DECLARE episiotomy_performed 			= f8 with constant(uar_get_code_by("DISPLAY",72,"Episiotomy Performed")),protect ;002
;DECLARE episiotomy_mediolateral 		= vc WITH protect ,constant ("CERNER!D4413143-8122-45C7-BFB6-21608DAF7A1B" )
DECLARE episiotomy_mediolateral 		= f8 with constant(uar_get_code_by("DISPLAY",72,"Episiotomy Mediolateral")),protect ;002
;DECLARE episiotomy_midline 			= vc WITH protect ,constant ("CERNER!1DD6481D-40C0-471C-8516-F8EE19469897" )
DECLARE episiotomy_midline				= f8 with constant(uar_get_code_by("DISPLAY",72,"Episiotomy Midline")),protect ;002
;DECLARE episiotomy_degree 				= vc WITH protect ,constant ("CERNER!93130FE6-0444-4DE2-90C4-DE2CD6A00493" )
DECLARE episiotomy_degree 				= f8 with constant(uar_get_code_by("DISPLAY",72,"Episiotomy Degree Transcribed")),protect ;002
;
DECLARE cs_classical 					= vc WITH protect ,constant ("CERNER!1724ABB7-D497-435B-B75B-32551F5D81D5" )
DECLARE cs_low_transverse 				= vc WITH protect ,constant ("CERNER!0FAD0F18-8F3E-4F64-9F4C-E60441303B90" )
DECLARE cs_other 						= vc WITH protect ,constant ("CERNER!D31BAA70-438C-4B72-A697-B8D462CF4CE3" )
DECLARE cs 								= vc WITH protect ,constant ("CERNER!C1CD3D9D-44EC-45A2-9913-06717C5040DA" )
DECLARE cs_low_vertical 				= vc WITH protect ,constant ("CERNER!EA5B3ED5-6CB5-46CA-BED1-59A3F01D7693"  )
DECLARE cs_t_incision 					= vc WITH protect ,constant ("CERNER!BCE6F84D-93A6-430F-8F92-E3FA3E68916F" )
DECLARE cs_forcep_and_vacuum 			= vc WITH protect ,constant ("CERNER!72919051-F018-4D12-8227-A487C6893755" )
DECLARE cs_forcep_assist 				= vc WITH protect ,constant ("CERNER!7945D455-9812-4FA7-AD4F-23FF1CEFE1A5"  )
DECLARE cs_j_incision 					= vc WITH protect ,constant ("CERNER!5DC6C28E-C77B-4E5B-9A61-2AE53EFB0277" )
DECLARE cs_vacuum_assist 				= vc WITH protect ,constant ("CERNER!F9C37DEC-1307-405E-B971-F3CCE2DC9FD0"  )
;
DECLARE vag 							= vc WITH protect ,constant ("CERNER!ABfQJgD4st77Y5mon4waeg" )
DECLARE vag_forcep_and_vacuum 			= vc WITH protect ,constant ("CERNER!4419660E-009A-4448-B9BF-7EBD880E0943" )
DECLARE vag_forcep_assist 				= vc WITH protect ,constant ("CERNER!B3426C74-7ABE-4F02-A42B-6AD6526C67C2" )
DECLARE vag_vacuum_assist 				= vc WITH protect ,constant ("CERNER!02D13740-3BB0-4128-93A0-63A01335D2C4" )
DECLARE live_birth 						= vc WITH protect ,constant ("CERNER!ASYr9AEYvUr1YoRYCqIGfQ" )
DECLARE oxytocin_infusion 				= vc WITH protect ,constant ("CERNER!8305C18A-8356-4AAF-8AC2-385F3A15F4B4" )
DECLARE epidural 						= vc WITH protect ,constant ("CERNER!ABfQJgD4st77Y5ekn4waeg" )
DECLARE vertex 							= vc WITH protect ,constant ("CERNER!684360AF-9EC4-4EBD-8FE4-6015EE1678BA" )
DECLARE failed_vbac 					= vc WITH protect ,constant ("CERNER!84E7499B-5650-4866-84B3-F088EC2AA6C4" )
DECLARE lack_of_descent_of_fetal_head 	= vc WITH protect ,constant ("CERNER!54BD0F94-EC0A-4814-B11D-6B0BB8ED77CA" )
DECLARE lack_of_progressive_cervical_dilation	= vc WITH protect ,constant ("CERNER!455A4910-20E2-4C37-881B-87A5CA612FF9" )
DECLARE malpresentation 				= vc WITH protect ,constant ("CERNER!86A9AC4B-960C-48ED-AE9D-8499E2329F89" )
DECLARE nonreassuring_fetal_status 		= vc WITH protect ,constant ("CERNER!18F519CC-9A7E-4033-ACCF-FF0DA852BB3D" )
DECLARE cephalopelvic_disproportion 	= vc WITH protect ,constant ("CERNER!2A855FF2-B346-446E-A28A-DC8D4A504364" )
;
;***** NOT USED ******
;DECLARE perineum_cervical_laceration 	= f8 with constant(uar_get_code_by("DISPLAY",72,"Perineum Cervical Laceration")),protect
;;;DECLARE perineum_cervical_laceration = vc WITH protect ,constant ("CERNER!12448C7B-1C76-4D14-8F4A-2370708B1040" )
;;;DECLARE perineum_perineal_laceration = vc WITH protect ,constant ("CERNER!6DEBAC89-5A20-4074-9698-EAD6A4E4ED0D" )
;;;DECLARE perineum_intact = vc WITH protect ,constant ("CERNER!D344529E-FBC5-4E8D-99E1-C6195274F252"  )
;;;DECLARE anesthesia_type_ob 		= vc WITH protect ,constant ("CERNER!ASYr9AEYvUr1YoPECqIGfQ" )
;;;DECLARE labial_laceration = vc WITH protect ,constant ("CERNER!8CC89133-CAE8-4D22-AF0E-CE133E62B105" )
;;;DECLARE perineum_vaginal_laceration = vc WITH protect ,constant ("CERNER!1F964DAE-0971-46AA-B38C-B7710C1159D0" )
;;;DECLARE perineum_superficial_abrasion_laceration = vc WITH protect ,constant ("CERNER!6E9C03CA-CC3D-4D8E-BF6C-8B42A007083A" )
;;;DECLARE perineum_periurethral_laceration = vc WITH protect ,constant ("CERNER!F7BB6E59-D0EE-466B-AAAA-1524FDF7FBDC" )
;;;DECLARE placental_abruption = vc WITH protect ,constant ("CERNER!FAB4E54E-B9A5-46DE-960B-9280C9C40930" )
;;;DECLARE active_herpes = vc WITH protect ,constant ("CERNER!5A47205D-2007-4E9D-BC1C-80522A2E7727" )
;;;DECLARE multiple_gestation = vc WITH protect ,constant ("CERNER!1D2AA6BE-AD65-4018-AC99-FE5D39E64FAD" )
;;;DECLARE placenta_previa = vc WITH protect ,constant ("CERNER!716D2FC1-F633-4FCA-BD2C-9012442DB080"  )
;;;DECLARE elective_repeat_csection = vc WITH protect ,constant ("CERNER!5D8BD6FD-2DE0-4135-98F9-E6C6F4ED5696" )
;;;DECLARE maternal_hemorrhage = vc WITH protect ,constant ("CERNER!3B6DF751-4DD2-49CB-863F-F9427DC7F6F6" )
;
DECLARE birth_idx = i4
DECLARE org_idx = i4
DECLARE org2_idx = i4
DECLARE rate_per (n ,d ) = vc WITH protect ,noconstant (" " )
DECLARE all_orgs_flag = i4 WITH protect ,noconstant (0 )
DECLARE birth_dt_tm_cs1 = i4 WITH protect ,constant (72 )
DECLARE birth_dt_tm_cs2 = i4 WITH protect ,constant (93 )
DECLARE birth_dt_tm_cs3 = i4 WITH protect ,constant (14003 )
DECLARE birth_dt_tm_cs4 = i4 WITH protect ,constant (4002119 )  ;djh
;
SET delivery->start_date = format (cnvtdatetime ( $PSTARTDATE ) ,"@SHORTDATE" )
SET delivery->end_date = format (cnvtdatetime ( $PENDDATE ) ,"@SHORTDATE" )
SET delivery->executed_dt_tm = format (cnvtdatetime (curdate ,curtime3 ) ,"@SHORTDATETIME" )
DECLARE prenddatetime = vc WITH protect ,constant (concat ( $PENDDATE ," 23:59:59" ) )
 
SELECT INTO "nl:"
FROM (PRSNL p )
WHERE (p.person_id = reqinfo->updt_id )
 
DETAIL
	delivery->executed_by = p.name_full_formatted
 
WITH nocounter
;end select
 
SELECT INTO "nl:"
FROM (CODE_VALUE cv )
 
PLAN (cv
WHERE (
	cv.code_set IN (birth_dt_tm_cs1 , birth_dt_tm_cs2 , birth_dt_tm_cs3, birth_dt_tm_cs4 )
	AND (cv.code_value = date_time_of_birth) ;002
;   	AND (cv.concept_cki = date_time_of_birth )
	) )
 
HEAD REPORT
   cnt = 0
 
DETAIL
   cnt = (cnt + 1 ) ,
   dstat = alterlist (birth->rec ,cnt ) ,
   birth->rec[cnt ].event_cd = cv.code_value
 
FOOT REPORT
   birth->sz = cnt
 
WITH nocounter
;end select
 
SELECT INTO "nl:"
FROM (ORGANIZATION o )
 
PLAN (o
  	WHERE (o.organization_id IN ( $4 ) )
   		AND (o.organization_id != 0 ) )
HEAD REPORT
   	cnt = 0
 
DETAIL
   	cnt = (cnt + 1 ) ,
   	stat = alterlist (org->rec ,cnt ) ,
   	org->rec[cnt ].organization_id = o.organization_id ,
   	org->rec[cnt ].display = o.org_name ,
   	IF ((cnt > 1 ) ) org->display = concat (org->display ,"; " ,trim (o.org_name ) )
   	ELSE org->display = trim (o.org_name )
   	ENDIF
 
FOOT REPORT
   	org->count = cnt
 
WITH nocounter
;end select
 
 
IF ((size (org->rec ,5 ) = 0 ) )
  	SET all_orgs_flag = 1
ENDIF
 
DECLARE valid_pi_org_id_ind = i4 WITH protect ,constant (checkdic ("PREGNANCY_INSTANCE.ORGANIZATION_ID" ,"A" ,0 ) )
DECLARE loadpregnancyorganizationsecuritylist () = null
 
IF ((validate (preg_org_sec_ind ) = 0 ) )
  	DECLARE preg_org_sec_ind = i4 WITH noconstant (0 )
 
  	SELECT INTO "nl:"
   	FROM (DM_INFO d1 ),
    	(dm_info d2 )
   	WHERE (d1.info_domain = "SECURITY" )
   		AND (d1.info_name = "SEC_ORG_RELTN" )
   		AND (d1.info_number = 1 )
   		AND (d2.info_domain = "SECURITY" )
   		AND (d2.info_name = "SEC_PREG_ORG_RELTN" )
   		AND (d2.info_number = 1 )
 
   	DETAIL
    	preg_org_sec_ind = 1
 
   	WITH nocounter
  	;end select
 
	CALL echo (build ("preg_org_sec_ind=" ,preg_org_sec_ind ) )
	IF ((preg_org_sec_ind = 1 ) )
  		FREE RECORD preg_sec_orgs
   		RECORD preg_sec_orgs (
    		1 qual [* ]
       			2 org_id = f8
       			2 confid_level = i4
   		)
		CALL loadpregnancyorganizationsecuritylist (null )
  	ENDIF
ENDIF
 
SUBROUTINE  loadpregnancyorganizationsecuritylist (null )
  	DECLARE org_cnt = i2 WITH noconstant (0 )
  	DECLARE stat = i2 WITH protect ,noconstant (0 )
  	IF ((validate (sac_org ) = 1 ) )
   		FREE RECORD sac_org
  	ENDIF
  	RECORD sac_org (
    	1 organizations [* ]
      		2 organization_id = f8
      		2 confid_cd = f8
      		2 confid_level = i4
  	)
 
  	EXECUTE secrtl
 
  	DECLARE orgcnt = i4 WITH protected ,noconstant (0 )
  	DECLARE secstat = i2
  	DECLARE logontype = i4 WITH protect ,noconstant (- (1 ) )
  	DECLARE confid_cd = f8 WITH protected ,noconstant (0.0 )
  	DECLARE role_profile_org_id = f8 WITH protected ,noconstant (0.0 )
 
  	CALL uar_secgetclientlogontype (logontype )
  	CALL echo (build ("logontype:" ,logontype ) )
 
  	IF ((logontype = 0 ) )
   		SELECT DISTINCT INTO "nl:"
    	FROM (PRSNL_ORG_RELTN por ),
     		(ORGANIZATION o ),
     		(PRSNL p )
    	PLAN (p
     		WHERE (p.person_id = reqinfo->updt_id ) )
     	JOIN (por
     		WHERE (por.person_id = p.person_id )
     			AND (por.active_ind = 1 )
     			AND (por.beg_effective_dt_tm <= cnvtdatetime (curdate ,curtime3 ) )
     			AND (por.end_effective_dt_tm > cnvtdatetime (curdate ,curtime3 ) ) )
     	JOIN (o
     		WHERE (por.organization_id = o.organization_id ) )
    	DETAIL
     		orgcnt = (orgcnt + 1 ) ,
     		IF ((mod (orgcnt ,10 ) = 1 ) ) secstat = alterlist (sac_org->organizations ,(orgcnt + 9 ) )
     		ENDIF
     		,sac_org->organizations[orgcnt ].organization_id = por.organization_id ,
     		sac_org->organizations[orgcnt ].confid_cd = por.confid_level_cd ,
     		confid_cd = uar_get_collation_seq (por.confid_level_cd ) ,
     		sac_org->organizations[orgcnt ].confid_level =
     		IF ((confid_cd > 0 ) ) confid_cd
     		ELSE 0
     		ENDIF
    	WITH nocounter
   		;end select
 
   		SET secstat = alterlist (sac_org->organizations ,orgcnt )
  	ENDIF
 
  	IF ((logontype = 1 ) )
   		CALL echo ("entered into NHS logon" )
   		DECLARE hprop = i4 WITH protect ,noconstant (0 )
   		DECLARE tmpstat = i2
   		DECLARE spropname = vc
   		DECLARE sroleprofile = vc
   		SET hprop = uar_srvcreateproperty ()
   		SET tmpstat = uar_secgetclientattributesext (5 ,hprop )
   		SET spropname = uar_srvfirstproperty (hprop )
   		SET sroleprofile = uar_srvgetpropertyptr (hprop ,nullterm (spropname ) )
   		CALL echo (sroleprofile )
   		DECLARE nhstrustchild_org_org_reltn_cd = f8
   		SET nhstrustchild_org_org_reltn_cd = uar_get_code_by ("MEANING" ,369 ,"NHSTRUSTCHLD" )
 
   		SELECT INTO "nl:"
    	FROM (PRSNL_ORG_RELTN_TYPE prt ),
     		(PRSNL_ORG_RELTN por ),
     		(ORGANIZATION o )
    	PLAN (prt
     		WHERE (prt.role_profile = sroleprofile )
     			AND (prt.active_ind = 1 )
     			AND (prt.beg_effective_dt_tm <= cnvtdatetime (curdate ,curtime3 ) )
     			AND (prt.end_effective_dt_tm > cnvtdatetime (curdate ,curtime3 ) ) )
     	JOIN (o
     		WHERE (o.organization_id = prt.organization_id ) )
     	JOIN (por
     		WHERE (outerjoin (prt.organization_id ) = por.organization_id )
     			AND (por.person_id = outerjoin (prt.prsnl_id ) )
     			AND (por.active_ind = outerjoin (1 ) )
     			AND (por.beg_effective_dt_tm <= outerjoin (cnvtdatetime (curdate ,curtime3 ) ) )
     			AND (por.end_effective_dt_tm > outerjoin (cnvtdatetime (curdate ,curtime3 ) ) ) )
    	ORDER BY por.prsnl_org_reltn_id
 
    	DETAIL
     		orgcnt = 1 ,
     		stat = alterlist (sac_org->organizations ,1 ) ,
     		sac_org->organizations[1 ].organization_id = prt.organization_id ,
     		role_profile_org_id = sac_org->organizations[orgcnt ].organization_id ,
     		sac_org->organizations[1 ].confid_cd = por.confid_level_cd ,
     		confid_cd = uar_get_collation_seq (por.confid_level_cd ) ,
     		sac_org->organizations[1 ].confid_level =
     		IF ((confid_cd > 0 ) ) confid_cd
     		ELSE 0
     		ENDIF
    	WITH maxrec = 1
   		;end select
 
   		SELECT INTO "nl:"
    	FROM (PRSNL_ORG_RELTN por )
    	PLAN (por
    	WHERE (por.person_id = reqinfo->updt_id )
     		AND (por.active_ind = 1 )
     		AND (por.beg_effective_dt_tm <= cnvtdatetime (curdate ,curtime3 ) )
     		AND (por.end_effective_dt_tm > cnvtdatetime (curdate ,curtime3 ) ) )
 
    	HEAD REPORT
     		IF ((orgcnt > 0 ) ) stat = alterlist (sac_org->organizations ,10 )
     		ENDIF
 
    	DETAIL
     		IF ((role_profile_org_id != por.organization_id ) ) orgcnt = (orgcnt + 1 ) ,
      			IF ((mod (orgcnt ,10 ) = 1 ) ) stat = alterlist (sac_org->organizations ,(orgcnt + 9 ) )
      			ENDIF
      			,sac_org->organizations[orgcnt ].organization_id = por.organization_id ,sac_org->organizations[
      			orgcnt ].confid_cd = por.confid_level_cd ,confid_cd = uar_get_collation_seq (por.confid_level_cd )
				,sac_org->organizations[orgcnt ].confid_level =
      			IF ((confid_cd > 0 ) ) confid_cd
      			ELSE 0
      			ENDIF
     		ENDIF
    	FOOT REPORT
     		stat = alterlist (sac_org->organizations ,orgcnt )
    	WITH nocounter
   		;end select
 
		CALL uar_srvdestroyhandle (hprop )
  	ENDIF
 
  	SET org_cnt = size (sac_org->organizations ,5 )
  	CALL echo (build ("org_cnt: " ,org_cnt ) )
  	SET stat = alterlist (preg_sec_orgs->qual ,(org_cnt + 1 ) )
  	FOR (count = 1 TO org_cnt )
   		SET preg_sec_orgs->qual[count ].org_id = sac_org->organizations[count ].organization_id
   		SET preg_sec_orgs->qual[count ].confid_level = sac_org->organizations[count ].confid_level
  	ENDFOR
  	SET preg_sec_orgs->qual[(org_cnt + 1 ) ].org_id = 0.00
  	SET preg_sec_orgs->qual[(org_cnt + 1 ) ].confid_level = 0
END ;Subroutine
 
SET i18nhandle = 0
SET h = uar_i18nlocalizationinit (i18nhandle ,curprog ,"" ,curcclrev )
CALL echo (build ("preg_org_sec_ind :" ,preg_org_sec_ind ) )
CALL echo (build ("valid_pi_org_id_ind :" ,valid_pi_org_id_ind ) )
CALL echo (build ("all_orgs_flag :" ,all_orgs_flag ) )
 
IF ((all_orgs_flag = 1 ) )
  	SELECT
   		IF ((preg_org_sec_ind = 1 ) )
    		FROM (PREGNANCY_INSTANCE pi ),
     			(CLINICAL_EVENT ce ),
     			(ENCOUNTER e ),
     			(CE_DYNAMIC_LABEL ced ),
     			(CE_DATE_RESULT cdt )
    		PLAN (pi
    			WHERE (pi.preg_start_dt_tm >= datetimeadd (cnvtdatetime ( $PSTARTDATE ) ,- (300 ) ) )
     				AND (pi.active_ind = 1 )
     				AND (pi.historical_ind = 0 ) )
    		JOIN (ce
     			WHERE (ce.person_id = pi.person_id )
     				AND expand (birth_idx ,1 ,size (birth->rec ,5 ) ,ce.event_cd ,birth->rec[birth_idx ].event_cd )
     				AND (ce.event_end_dt_tm BETWEEN cnvtdatetime ( $PSTARTDATE ) AND cnvtdatetime (prenddatetime ))
     				AND (ce.valid_until_dt_tm > cnvtdatetime (curdate ,curtime3 ) )
     				AND (ce.result_status_cd IN (auth ,modified ,altered ) ) )
    		JOIN (e
     			WHERE (e.encntr_id = ce.encntr_id )
     				AND expand (org_idx ,1 ,size (preg_sec_orgs->qual ,5 ) ,(e.organization_id + 0 ) ,
					preg_sec_orgs->qual[org_idx ].org_id ) )
    		JOIN (ced
     			WHERE (ced.ce_dynamic_label_id = ce.ce_dynamic_label_id ) )
    		JOIN (cdt
     			WHERE (cdt.event_id = ce.event_id )
     			AND (cdt.result_dt_tm BETWEEN cnvtdatetime ( $PSTARTDATE ) AND cnvtdatetime (prenddatetime ) ))
		ELSE
    		FROM (PREGNANCY_INSTANCE pi ),
     			(CLINICAL_EVENT ce ),
     			(CE_DYNAMIC_LABEL ced ),
     			(CE_DATE_RESULT cdt )
    		PLAN (pi
     			WHERE (pi.preg_start_dt_tm >= datetimeadd (cnvtdatetime ( $PSTARTDATE ) ,- (300 ) ) )
     				AND (pi.active_ind = 1 )
     				AND (pi.historical_ind = 0 ) )
     		JOIN (ce
     			WHERE (ce.person_id = pi.person_id )
    				AND expand (birth_idx ,1 ,size (birth->rec ,5 ) ,ce.event_cd ,birth->rec[birth_idx ].event_cd )
     				AND (ce.event_end_dt_tm BETWEEN datetimeadd (cnvtdatetime ( $PSTARTDATE ) ,- (7 ) ) AND
     					datetimeadd (cnvtdatetime (prenddatetime ) ,7 ) )
     				AND (ce.valid_until_dt_tm > cnvtdatetime (curdate ,curtime3 ) )
     				AND (ce.result_status_cd IN (auth ,modified ,altered ) ) )
     		JOIN (ced
     			WHERE (ced.ce_dynamic_label_id = ce.ce_dynamic_label_id ) )
     		JOIN (cdt
     			WHERE (cdt.event_id = ce.event_id )
     				AND (cdt.result_dt_tm BETWEEN cnvtdatetime ( $PSTARTDATE ) AND cnvtdatetime (prenddatetime ) ))
   		ENDIF
 
   	ORDER BY pi.pregnancy_id ,
    	ced.label_name ,
    	cdt.result_dt_tm DESC
 
   	HEAD REPORT
    	preg_cnt = 0 ,
    	del_cnt = 0
 
   	HEAD pi.pregnancy_id
    	preg_cnt = (preg_cnt + 1 ) ,
    	IF ((preg_cnt > size (delivery->rec ,5 ) ) )
			stat1 = alterlist (delivery->rec ,(preg_cnt + 99 ))
    	ENDIF
    	,
	    IF ((preg_cnt > size (dcp_request->pregnancy_list ,5 ) ) )
			stat2 = alterlist (dcp_request->pregnancy_list ,(preg_cnt + 99 ) )
	    ENDIF
		,
    	delivery->rec[preg_cnt ].pregnancy_id = pi.pregnancy_id ,
		delivery->rec[preg_cnt ].person_id = pi.person_id ,
		delivery->rec[preg_cnt ].encntr_id = ce.encntr_id ,
		dcp_request->pregnancy_list[preg_cnt ].pregnancy_id = pi.pregnancy_id ,
		del_cnt = 0
 
   	HEAD ced.label_name
    	del_cnt = (del_cnt + 1 ) ,
		stat3 = alterlist (delivery->rec[preg_cnt ].baby ,
		del_cnt ) ,delivery->rec[preg_cnt ].baby[del_cnt ].delivery_dt_tm = cdt.result_dt_tm ,
		delivery->rec[preg_cnt ].baby[del_cnt ].label_name = ced.label_name
 
   	FOOT  pi.pregnancy_id
    	IF ((del_cnt = 1 ) )
			delivery->num_births[1 ].count = (delivery->num_births[1 ].count + del_cnt) ,
      		delivery->num_mother_deliv[1 ].count = (delivery->num_mother_deliv[1 ].count + 1 )
    	ELSEIF ((del_cnt = 2 ) )
			delivery->num_births[2 ].count = (delivery->num_births[2 ].count + del_cnt ) ,
			delivery->num_mother_deliv[2 ].count = (delivery->num_mother_deliv[2 ].count + 1 )
    	ELSEIF ((del_cnt = 3 ) )
			delivery->num_births[3 ].count = (delivery->num_births[3 ].count + del_cnt ) ,
			delivery->num_mother_deliv[3 ].count = (delivery->num_mother_deliv[3 ].count + 1 )
    	ELSE delivery->num_births[4 ].count = (delivery->num_births[4 ].count + del_cnt ) ,
			delivery->num_mother_deliv[4 ].count = (delivery->num_mother_deliv[4 ].count + 1 )
    	ENDIF
		,
    	delivery->tot_num_births = (delivery->tot_num_births + del_cnt ) ,
		delivery->tot_num_mother_deliv = (delivery->tot_num_mother_deliv + 1 )
 
   	FOOT REPORT
    	stat1 = alterlist (delivery->rec ,preg_cnt ) ,
    	stat2 = alterlist (dcp_request->pregnancy_list ,preg_cnt )
 
   	WITH nocounter
  	;end select
ELSE
 	SELECT
   		IF ((preg_org_sec_ind = 1 ) )
    		FROM (PREGNANCY_INSTANCE pi ),
     			(CLINICAL_EVENT ce ),
     			(ENCOUNTER e ),
     			(CE_DYNAMIC_LABEL ced ),
     			(CE_DATE_RESULT cdt )
 
    		PLAN (pi
     			WHERE (pi.preg_start_dt_tm >= datetimeadd (cnvtdatetime ( $PSTARTDATE ) ,- (300 ) ) )
     				AND (pi.active_ind = 1 )
     				AND (pi.historical_ind = 0 ) )
     		JOIN (ce
     			WHERE (ce.person_id = pi.person_id )
     				AND expand (birth_idx ,1 ,size (birth->rec ,5 ) ,ce.event_cd ,birth->rec[birth_idx ].event_cd )
     				AND (ce.event_end_dt_tm BETWEEN cnvtdatetime ( $PSTARTDATE ) AND cnvtdatetime (prenddatetime ))
     				AND (ce.valid_until_dt_tm > cnvtdatetime (curdate ,curtime3 ) )
     				AND (ce.result_status_cd IN (auth ,modified ,altered ) ) )
     		JOIN (e
     			WHERE (e.encntr_id = ce.encntr_id )
     				AND expand (org_idx ,1 ,size (org->rec ,5 ) ,(e.organization_id + 0 ) ,org->rec[org_idx ].organization_id )
     				AND expand (org2_idx ,1 ,size (preg_sec_orgs->qual ,5 ) ,(e.organization_id + 0 ) ,
						preg_sec_orgs->qual[org2_idx ].org_id ) )
     		JOIN (ced
     			WHERE (ced.ce_dynamic_label_id = ce.ce_dynamic_label_id ) )
     		JOIN (cdt
     			WHERE (cdt.event_id = ce.event_id )
     				AND (cdt.result_dt_tm BETWEEN cnvtdatetime ( $PSTARTDATE ) AND cnvtdatetime (prenddatetime ) ))
   		ELSE
    		FROM (PREGNANCY_INSTANCE pi ),
     			(CLINICAL_EVENT ce ),
     			(ENCOUNTER e ),
     			(CE_DYNAMIC_LABEL ced ),
     			(CE_DATE_RESULT cdt )
 
    		PLAN (pi
     			WHERE (pi.preg_start_dt_tm >= datetimeadd (cnvtdatetime ( $PSTARTDATE ) ,- (300 ) ) )
     				AND (pi.active_ind = 1 )
     				AND (pi.historical_ind = 0 ) )
     		JOIN (ce
     			WHERE (ce.person_id = pi.person_id )
     				AND expand (birth_idx ,1 ,size (birth->rec ,5 ) ,ce.event_cd ,birth->rec[birth_idx ].event_cd )
     				AND (ce.event_end_dt_tm BETWEEN datetimeadd (cnvtdatetime ( $PSTARTDATE ) ,- (7 ) ) AND
     					datetimeadd (cnvtdatetime (prenddatetime ) ,7 ) )
     				AND (ce.valid_until_dt_tm > cnvtdatetime (curdate ,curtime3 ) )
     				AND (ce.result_status_cd IN (auth ,modified ,altered ) ) )
     		JOIN (e
     			WHERE (e.encntr_id = ce.encntr_id )
     				AND expand (org_idx ,1 ,size (org->rec ,5 ) ,(e.organization_id + 0 ) ,org->rec[org_idx ].organization_id ) )
     		JOIN (ced
     			WHERE (ced.ce_dynamic_label_id = ce.ce_dynamic_label_id ) )
     		JOIN (cdt
     			WHERE (cdt.event_id = ce.event_id )
     				AND (cdt.result_dt_tm BETWEEN cnvtdatetime ( $PSTARTDATE ) AND cnvtdatetime (prenddatetime ) ))
   		ENDIF
 
   	ORDER BY pi.pregnancy_id ,
    	ced.label_name ,
    	cdt.result_dt_tm DESC
 
   	HEAD REPORT
    	preg_cnt = 0 ,
    	del_cnt = 0
 
   	HEAD pi.pregnancy_id
    	preg_cnt = (preg_cnt + 1 ) ,
    	IF ((preg_cnt > size (delivery->rec ,5 ) ) )
			stat1 = alterlist (delivery->rec ,(preg_cnt + 99 ))
    	ENDIF
    	,
    	IF ((preg_cnt > size (dcp_request->pregnancy_list ,5 ) ) )
			stat2 = alterlist (dcp_request->pregnancy_list ,(preg_cnt + 99 ) )
    	ENDIF
    	,delivery->rec[preg_cnt ].pregnancy_id = pi.pregnancy_id ,delivery->rec[preg_cnt ].person_id = pi.person_id
    	,delivery->rec[preg_cnt ].encntr_id = ce.encntr_id ,dcp_request->pregnancy_list[
    	preg_cnt ].pregnancy_id = pi.pregnancy_id ,del_cnt = 0
 
   	HEAD ced.label_name
    	del_cnt = (del_cnt + 1 ) ,stat3 = alterlist (delivery->rec[preg_cnt ].baby ,del_cnt ) ,delivery->
    	rec[preg_cnt ].baby[del_cnt ].delivery_dt_tm = cdt.result_dt_tm ,delivery->rec[preg_cnt ].baby[
    	del_cnt ].label_name = ced.label_name
 
   	FOOT  pi.pregnancy_id
    	IF ((del_cnt = 1 ) )
			delivery->num_births[1 ].count = (delivery->num_births[1 ].count + del_cnt ) ,
     		delivery->num_mother_deliv[1 ].count = (delivery->num_mother_deliv[1 ].count + 1 )
    	ELSEIF ((del_cnt = 2 ) )
			delivery->num_births[2 ].count = (delivery->num_births[2 ].count + del_cnt ) ,
			delivery->num_mother_deliv[2 ].count = (delivery->num_mother_deliv[2 ].count + 1 )
    	ELSEIF ((del_cnt = 3 ) )
			delivery->num_births[3 ].count = (delivery->num_births[3 ].count + del_cnt ) ,
			delivery->num_mother_deliv[3 ].count = (delivery->num_mother_deliv[3 ].count + 1 )
    	ELSE delivery->num_births[4 ].count = (delivery->num_births[4 ].count + del_cnt ) ,
			delivery->num_mother_deliv[4 ].count = (delivery->num_mother_deliv[4 ].count + 1 )
    	ENDIF
    	,delivery->tot_num_births = (delivery->tot_num_births + del_cnt )
		,delivery->tot_num_mother_deliv = (delivery->tot_num_mother_deliv + 1 )
 
   	FOOT REPORT
    	stat1 = alterlist (delivery->rec ,preg_cnt ) ,
    	stat2 = alterlist (dcp_request->pregnancy_list ,preg_cnt )
 
   	WITH nocounter
  	;end select
ENDIF
 
IF ((curqual = 0 ) )
 	GO TO no_data
ENDIF
 
SELECT INTO "nl:"
FROM (clinical_event ce ),
   	(code_value cv ),
   	(ce_dynamic_label ced ),
   	(ce_coded_result cer ),
   	(nomenclature n ),
   	(dummyt d1 WITH seq = size (delivery->rec ,5 ) ),
  	 (dummyt d2 WITH seq = 1 )
 
PLAN (d1
   	WHERE maxrec (d2 ,size (delivery->rec[d1.seq ].baby ,5 ) ) )
JOIN (d2 )
JOIN (ce
   	WHERE (ce.encntr_id = delivery->rec[d1.seq ].encntr_id )
   		AND (ce.valid_until_dt_tm > cnvtdatetime (curdate ,curtime3 ) )
   		AND (ce.result_status_cd IN (auth ,modified ,altered ) ) )
JOIN (cv
   	WHERE (cv.code_value = ce.event_cd )
   		AND (cv.code_set IN (birth_dt_tm_cs1 ,birth_dt_tm_cs2 ,birth_dt_tm_cs3 , birth_dt_tm_cs4 ) )
   		AND (cv.concept_cki IN (birth_weight ,
   			reason_for_csection ,
   			augmentation_methods ,
   			induction_methods ,
   			delivery_type ,
   			neonate_outcome ) ) )
JOIN (ced
   	WHERE (ced.ce_dynamic_label_id = ce.ce_dynamic_label_id ) )
JOIN (cer
   	WHERE (cer.event_id = outerjoin (ce.event_id ) )
   		AND (cer.valid_until_dt_tm > outerjoin (cnvtdatetime (curdate ,curtime3 ) ) ) )
JOIN (n
   	WHERE (n.nomenclature_id = outerjoin (cer.nomenclature_id ) ) )
 
ORDER BY d1.seq ,
   	d2.seq ,
   	ced.label_name ,
   	cv.concept_cki ,
   	ce.event_end_dt_tm DESC
 
HEAD REPORT
   aug_oxy_ind = 0 ,
   ind_oxy_ind = 0 ,
   wt_1500_cnt = 0 ,
   del_cnt = 0 ,
   reas_ind = 0 ,
   cpd_ftp_ind = 0
 
HEAD d1.seq
   aug_oxy_ind = 0 ,ind_oxy_ind = 0 ,wt_1500_cnt = 0 ,del_cnt = 0 ,reas_ind = 0 ,cpd_ftp_ind = 0
 
HEAD d2.seq
   del_cnt = del_cnt
 
HEAD ced.label_name
   	IF ((ced.label_name = delivery->rec[d1.seq ].baby[d2.seq ].label_name ) )
		del_cnt = (del_cnt + 1)
   	ENDIF
 
HEAD cv.concept_cki
	IF ((ced.label_name = delivery->rec[d1.seq ].baby[d2.seq ].label_name ) )
    	IF ((cv.concept_cki = birth_weight ) )
     		IF ((ce.result_units_cd = g_cd ) )
      			IF ((cnvtreal (ce.result_val ) < 1500 ) )
					wt_1500_cnt = (wt_1500_cnt + 1 )
      			ENDIF
     		ELSEIF ((ce.result_units_cd = kg_cd ) )
      			IF (((cnvtreal (ce.result_val ) * 1000 ) < 1500 ) )
					wt_1500_cnt = (wt_1500_cnt + 1 )
      			ENDIF
     		ELSEIF ((ce.result_units_cd = lb_cd ) )
      			IF (((cnvtreal (ce.result_val ) * lb_to_kg ) < 1500 ) )
					wt_1500_cnt = (wt_1500_cnt + 1 )
      			ENDIF
     		ENDIF
    	ELSEIF ((cv.concept_cki = delivery_type ) )
     		IF ((n.concept_cki = vag_forcep_assist ) )
				delivery->tot_vag = (delivery->tot_vag + 1 ) ,
      			delivery->num_forceps = (delivery->num_forceps + 1 ) ,
				delivery->tot_op_vag_del = (delivery->tot_op_vag_del + 1 ) ,
				delivery->rec[d1.seq ].baby[d2.seq ].vag_ind = 1
     		ELSEIF ((n.concept_cki = vag_forcep_and_vacuum ) )
				delivery->tot_vag = (delivery->tot_vag + 1 ) ,
     			delivery->num_for_vac = (delivery->num_for_vac + 1 ) ,
				delivery->tot_op_vag_del = (delivery->tot_op_vag_del + 1 ) ,
				delivery->rec[d1.seq ].baby[d2.seq ].vag_ind = 1
     		ELSEIF ((n.concept_cki = vag_vacuum_assist ) )
				delivery->tot_vag = (delivery->tot_vag + 1 ) ,
      			delivery->num_vacuum = (delivery->num_vacuum + 1 ) ,
				delivery->tot_op_vag_del = (delivery->tot_op_vag_del + 1 ) ,
				delivery->rec[d1.seq ].baby[d2.seq ].vag_ind = 1
     		ELSEIF ((n.concept_cki = vag ) )
				delivery->tot_vag = (delivery->tot_vag + 1 ) ,
				delivery->rec[d1.seq ].baby[d2.seq ].vag_ind = 1
     		ELSEIF ((n.concept_cki IN (cs_classical ,
     					cs_low_transverse ,
     					cs_other ,
     					cs ,
     					cs_low_vertical ,
     					cs_t_incision ,
     					cs_forcep_and_vacuum ,
     					cs_forcep_assist ,
     					cs_j_incision ,
     					cs_vacuum_assist ) ) )
				delivery->rec[d1.seq ].baby[d2.seq ].cs_ind = 1 ,
				delivery->rec[d1.seq ].cs_ind = 1
     		ENDIF
    	ELSEIF ((cv.concept_cki = neonate_outcome ) )
     		IF ((n.concept_cki = live_birth ) )
				delivery->rec[d1.seq ].baby[d2.seq ].live_birth_ind = 1
     		ENDIF
    	ENDIF
	ENDIF
 
HEAD ce.event_end_dt_tm
   reas_ind = reas_ind
 
DETAIL
	IF ((reas_ind = 0 ) )
    	IF ((cv.concept_cki = reason_for_csection ) )
     		IF ((n.concept_cki = failed_vbac ) )
				delivery->tot_failed_vbac = (delivery->tot_failed_vbac + 1)
     		ELSEIF ((n.concept_cki IN (lack_of_descent_of_fetal_head ,
     					lack_of_progressive_cervical_dilation ,
     					cephalopelvic_disproportion ) ) )
      			IF ((cpd_ftp_ind = 0 ) )
					delivery->tot_cpd_ftp = (delivery->tot_cpd_ftp + 1 )
      			ENDIF
      			,cpd_ftp_ind = 1
     		ELSEIF ((n.concept_cki = malpresentation ) )
				delivery->tot_malpresentation = (delivery->tot_malpresentation + 1 )
     		ELSEIF ((n.concept_cki = nonreassuring_fetal_status ) )
				delivery->tot_fetal_distress = (delivery->tot_fetal_distress + 1 )
     		ELSE delivery->tot_reason_cs_other = (delivery->tot_reason_cs_other + 1 )
     		ENDIF
    	ENDIF
    	,
    	IF ((delivery->rec[d1.seq ].baby[d2.seq ].vag_ind = 1 ) )
     		IF ((cv.concept_cki = augmentation_methods ) )
      			IF ((n.concept_cki = oxytocin_infusion ) )
					aug_oxy_ind = 1
      			ENDIF
     		ELSEIF ((cv.concept_cki = induction_methods ) )
      			IF ((n.concept_cki = oxytocin_infusion ) )
					ind_oxy_ind = 1
      			ENDIF
     		ENDIF
    	ENDIF
   	ENDIF
 
FOOT  ce.event_end_dt_tm
	IF ((cv.concept_cki = reason_for_csection ) )
		reas_ind = 1
   	ENDIF
 
FOOT  d1.seq
   	IF ((del_cnt = 1 ) )
		delivery->less_1500_g[1 ].count = (delivery->less_1500_g[1 ].count + wt_1500_cnt )
   	ELSEIF ((del_cnt = 2 ) )
		delivery->less_1500_g[2 ].count = (delivery->less_1500_g[2 ].count + wt_1500_cnt )
   	ELSEIF ((del_cnt = 3 ) )
		delivery->less_1500_g[3 ].count = (delivery->less_1500_g[3 ].count + wt_1500_cnt )
   	ELSE delivery->less_1500_g[4 ].count = (delivery->less_1500_g[4 ].count + wt_1500_cnt )
   	ENDIF ,
   	delivery->tot_less_1500_g = (delivery->tot_less_1500_g + wt_1500_cnt ) ,
 
   	IF ((aug_oxy_ind = 1 ) )
		delivery->oxytocin_aug = (delivery->oxytocin_aug + 1 ) ,
		delivery->oxytocin_total = (delivery->oxytocin_total + 1 )
   	ENDIF
   	,
   	IF ((ind_oxy_ind = 1 ) )
		delivery->oxytocin_inductions = (delivery->oxytocin_inductions + 1 ) ,
    	delivery->oxytocin_total = (delivery->oxytocin_total + 1 )
   	ENDIF
 
WITH nocounter
 ;end select
 
 
SELECT INTO "nl:"
FROM	(CLINICAL_EVENT ce ),
 		(CODE_VALUE cv ),
 		(CE_CODED_RESULT ccr ),
 		(NOMENCLATURE n ),
 		(DUMMYT d1 WITH seq = size (delivery->rec ,5 ) )
PLAN (d1 )
JOIN (ce
	WHERE (ce.encntr_id = delivery->rec[d1.seq ].encntr_id )
		AND (ce.valid_until_dt_tm > cnvtdatetime (curdate ,curtime3 ) )
		AND (ce.result_status_cd IN (auth , modified , altered ) ) )
JOIN (cv
	WHERE (cv.code_value = ce.event_cd ) )
JOIN (ccr
	WHERE (ccr.event_id = outerjoin (ce.event_id ) )
		AND (ccr.valid_until_dt_tm > outerjoin (cnvtdatetime (curdate ,curtime3 ) ) ) )
JOIN (n
	WHERE (n.nomenclature_id = outerjoin (ccr.nomenclature_id ) ) )
 
ORDER BY ce.encntr_id ,
 	cv.concept_cki ,
 	cv.code_value ,   ;002
 	ce.event_end_dt_tm DESC
 
HEAD REPORT
 	epis_ind = 0 ,
 	ver_ind = 0 ,
 	3d_ind = 0 ,
 	4d_ind = 0 ,
 	para_ind = 0
 
HEAD ce.encntr_id
 	epis_ind = 0 ,ver_ind = 0 ,3d_ind = 0 ,4d_ind = 0 ,para_ind = 0 ,gravida_cnt = 0
 
HEAD cv.concept_cki
 	IF ((n.concept_cki = epidural ) )
		delivery->tot_epid = (delivery->tot_epid + 1 )
 	ENDIF
 
HEAD cv.code_value   ;002
;*** Episiotomie's ***
;   IF ((cv.concept_cki IN (episiotomy_other_information ,
;   	episiotomy_performed ,
;   	episiotomy_mediolateral ,
;   	episiotomy_midline ,
;   	episiotomy_degree ) ) ) epis_ind = 1
;   ENDIF
	IF ((cv.code_value IN (episiotomy_other_information ,
   		episiotomy_performed ,
   		episiotomy_mediolateral ,
   		episiotomy_midline ,
   		episiotomy_degree))) epis_ind = 1
   	ENDIF ,
 
;*** Laceration Degree ***
;    IF ((cv.concept_cki = perineum_perineal_laceration ) ) ;002
;    	IF ((trim (cnvtupper (ce.result_val ) ) = "THIRD DEGREE" ) ) 3d_ind = 1
;    	ENDIF
;		,
;    	IF ((trim (cnvtupper (ce.result_val ) ) = "FOURTH DEGREE" ) ) 4d_ind = 1
;    	ENDIF
;    ENDIF
	IF ((cv.code_value = episiotomy_degree ) ) ;002
		IF ((trim (cnvtupper (ce.result_val ) ) = "3RD DEGREE" ) )
			3d_ind = 1
		ENDIF
		,
		IF ((trim (cnvtupper (ce.result_val ) ) = "4TH DEGREE" ) )
			4d_ind = 1
		ENDIF
	ENDIF
 
HEAD ce.event_end_dt_tm
   	ver_ind = ver_ind
 
DETAIL
	IF ((size (delivery->rec[d1.seq ].baby ,5 ) > 0 ) )
    	IF ((cv.code_value = para ) ) para_ind = 1 ,
     		IF ((ce.event_end_dt_tm < delivery->rec[d1.seq ].baby[1 ].delivery_dt_tm ) )
      			IF ((ce.result_val = "0" ) )
       				IF ((size (delivery->rec[d1.seq ].baby ,5 ) = 1 ) )
						delivery->num_nuliparous[1 ].count = (delivery->num_nuliparous[1 ].count + 1 )
       				ELSEIF ((size (delivery->rec[d1.seq ].baby ,5 ) = 2 ) )
						delivery->num_nuliparous[2 ].count = (delivery->num_nuliparous[2 ].count + 1 )
       				ELSEIF ((size (delivery->rec[d1.seq ].baby ,5 ) = 3 ) )
						delivery->num_nuliparous[3 ].count = (delivery->num_nuliparous[3 ].count + 1 )
       				ELSEIF ((size (delivery->rec[d1.seq ].baby ,5 ) > 3 ) )
						delivery->num_nuliparous[4 ].count = (delivery->num_nuliparous[4 ].count + 1 )
       				ENDIF
      			ENDIF
     		ENDIF
    	ENDIF
   	ENDIF
   ,
	IF ((cv.code_value = gravida ) ) gravida_cnt = (gravida_cnt + 1 ) ,
    	IF ((ce.result_val = "1" ) AND (gravida_cnt = 1 ) )
			delivery->rec[d1.seq ].primip_ind = 1
    	ELSE
			delivery->rec[d1.seq ].primip_ind = 0
    	ENDIF
   	ENDIF
   	,
   	IF ((cv.code_value = presenting_part ) ) ;002
    	IF ((ver_ind = 0 ) )
     		IF ((n.concept_cki = vertex ) )
      			IF ((size (delivery->rec[d1.seq ].baby ,5 ) > 0 ) )
					delivery->rec[d1.seq ].baby[1 ].vertex_ind = 1
      			ENDIF
      			,ver_ind = 1
     		ENDIF
    	ENDIF
   	ENDIF
 
FOOT  ce.encntr_id
   	delivery->tot_epis = (delivery->tot_epis + epis_ind ) ,
	delivery->3_degree_lac = (delivery->3_degree_lac + 3d_ind ) ,
   	delivery->4_degree_lac = (delivery->4_degree_lac + 4d_ind ) ,
   	IF ((para_ind = 0 ) )
    	IF ((size (delivery->rec[d1.seq ].baby ,5 ) = 1 ) )
			delivery->num_nuliparous[1 ].count = (delivery->num_nuliparous[1 ].count + 1 )
    	ELSEIF ((size (delivery->rec[d1.seq ].baby ,5 ) = 2 ) )
			delivery->num_nuliparous[2 ].count = (delivery->num_nuliparous[2 ].count + 1 )
    	ELSEIF ((size (delivery->rec[d1.seq ].baby ,5 ) = 3 ) )
			delivery->num_nuliparous[3 ].count = (delivery->num_nuliparous[3 ].count + 1 )
    	ELSEIF ((size (delivery->rec[d1.seq ].baby ,5 ) > 3 ) )
			delivery->num_nuliparous[4 ].count = (delivery->num_nuliparous[4 ].count + 1 )
    	ENDIF
   ENDIF
 
FOOT REPORT
   delivery->tot_num_nuliparous = (((delivery->num_nuliparous[1 ].count + delivery->num_nuliparous[2 ].count ) +
   delivery->num_nuliparous[3 ].count ) + delivery->num_nuliparous[4 ].count )
 
WITH nocounter
;end select
 
 
CALL echorecord (dcp_request )
IF ((valid_pi_org_id_ind > 0 ) )
 	EXECUTE dcp_get_final_ega WITH replace ("REQUEST" ,dcp_request ) , replace ("REPLY" ,dcp_reply )
ELSE
  	EXECUTE pcm_wh_get_final_ega WITH replace ("REQUEST" ,dcp_request ) , replace ("REPLY" ,dcp_reply )
ENDIF
 
SET modify = nopredeclare
FREE RECORD dcp_request
 
IF ((size (dcp_reply->gestation_info ,5 ) > 0 ) )
	SELECT INTO "nl:"
  		gest_age_37wk_ind =
  		IF (((dcp_reply->gestation_info[d2.seq ].gest_age_at_delivery / 7 ) >= 37 ) ) 1
  		ELSE 0
  		ENDIF
 	FROM (DUMMYT d1 WITH seq = size (delivery->rec ,5 ) ),
    	(DUMMYT d2 WITH seq = size (dcp_reply->gestation_info ,5 ) )
  	PLAN (d1 )
  	JOIN (d2
    WHERE (dcp_reply->gestation_info[d2.seq ].pregnancy_id = delivery->rec[d1.seq ].pregnancy_id ) )
   	DETAIL
    	delivery->rec[d1.seq ].gest_age_grtr_37_ind = gest_age_37wk_ind
   	WITH nocounter
  	;end select
ENDIF
 
FREE RECORD dcp_reply
CALL echorecord (delivery )
 
SELECT INTO "nl:"
  	gest_age_37wk_ind =
  	IF (((pc.gestation_age / 7 ) >= 37 ) ) 1
  	ELSE 0
  	ENDIF
 
FROM (PREGNANCY_INSTANCE pi ),
	(PREGNANCY_CHILD pc ),
   	(CODE_VALUE cv ),
   	(DUMMYT d1 WITH seq = size (delivery->rec ,5 ) )
 
PLAN (d1 )
JOIN (pi
   WHERE (pi.person_id = delivery->rec[d1.seq ].person_id )
	   AND (pi.active_ind = 1 ) )
JOIN (pc
   WHERE (pc.pregnancy_id = pi.pregnancy_id ) )
JOIN (cv
   WHERE (cv.code_value = pc.delivery_method_cd ) )
 
ORDER BY d1.seq ,
   	pi.pregnancy_id ,
   	pc.pregnancy_child_id
 
HEAD REPORT
   	cs_ind = 0 ,
   	prev_cs_cnt = 0
 
HEAD d1.seq
   	cs_ind = 0 ,prev_cs_cnt = 0
 
HEAD pi.pregnancy_id
   	cs_ind = 0
 
HEAD pc.pregnancy_child_id
	IF ((delivery->rec[d1.seq ].gest_age_grtr_37_ind = 0 )
		AND (delivery->rec[d1.seq ].pregnancy_id = pc.pregnancy_id ) )
		delivery->rec[d1.seq ].gest_age_grtr_37_ind = gest_age_37wk_ind
   	ENDIF
   ,
   IF ((pi.pregnancy_id != delivery->rec[d1.seq ].pregnancy_id ) )
    	IF ((size (delivery->rec[d1.seq ].baby ,5 ) > 0 ) )
     		IF ((pc.delivery_dt_tm < delivery->rec[d1.seq ].baby[1 ].delivery_dt_tm ) )
      			IF ((cv.concept_cki IN (cs_classical ,
      				cs_low_transverse ,
      				cs_other ,
      				cs ,
      				cs_low_vertical ,
      				cs_t_incision ,
      				cs_forcep_and_vacuum ,
      				cs_forcep_assist ,
      				cs_j_incision ,
      				cs_vacuum_assist ) ) ) cs_ind = 1
      			ENDIF
     		ENDIF
    	ENDIF
	ENDIF
 
FOOT  pi.pregnancy_id
   	prev_cs_cnt = (prev_cs_cnt + cs_ind )
 
FOOT  d1.seq
   	IF ((prev_cs_cnt = 1 ) )
		delivery->prior_single_cs = (delivery->prior_single_cs + 1 ) ,
		delivery->tot_prior_cs = (delivery->tot_prior_cs + 1 )
   	ELSEIF ((prev_cs_cnt > 1 ) )
		delivery->prior_repeat_cs = (delivery->prior_repeat_cs + 1 ) ,
    	delivery->tot_prior_cs = (delivery->tot_prior_cs + 1 )
   	ENDIF
   	,delivery->rec[d1.seq ].prev_cs_ind = prev_cs_cnt
 
WITH nocounter
 ;end select
 
CALL echorecord (delivery )
FOR (current_cnt = 1 TO size (delivery->rec ,5 ) )
	IF ((delivery->rec[current_cnt ].prev_cs_ind = 0 ) AND (delivery->rec[current_cnt ].cs_ind = 1 ) )
   		SET delivery->tot_prim_cs = (delivery->tot_prim_cs + 1 )
  	ENDIF
  	FOR (baby_cnt = 1 TO size (delivery->rec[current_cnt ].baby ,5 ) )
   		IF ((delivery->rec[current_cnt ].baby[baby_cnt ].vag_ind = 1 ) AND (delivery->rec[current_cnt ].prev_cs_ind > 0 ) )
    		SET delivery->tot_vbac = (delivery->tot_vbac + 1 )
   		ENDIF
   		IF ((delivery->rec[current_cnt ].baby[baby_cnt ].live_birth_ind = 1 ) )
    		IF ((delivery->rec[current_cnt ].gest_age_grtr_37_ind = 1 ) )
     			SET delivery->live_birth_greater_37_wks = (delivery->live_birth_greater_37_wks + 1 )
    		ENDIF
   		ENDIF
   		IF ((delivery->rec[current_cnt ].cs_ind = 1 ) )
    		SET delivery->tot_cs = (delivery->tot_cs + 1 )
   		ENDIF
	ENDFOR
 
	IF ((delivery->rec[current_cnt ].gest_age_grtr_37_ind = 1 ) )
		IF ((size (delivery->rec[current_cnt ].baby ,5 ) = 1 ) )
    		SET delivery->greater_37_wks[1 ].count = (delivery->greater_37_wks[1 ].count + 1 )
   		ELSEIF ((size (delivery->rec[current_cnt ].baby ,5 ) = 2 ) )
    		SET delivery->greater_37_wks[2 ].count = (delivery->greater_37_wks[2 ].count + 1 )
   		ELSEIF ((size (delivery->rec[current_cnt ].baby ,5 ) = 3 ) )
    		SET delivery->greater_37_wks[3 ].count = (delivery->greater_37_wks[3 ].count + 1 )
		ELSE
    		SET delivery->greater_37_wks[4 ].count = (delivery->greater_37_wks[4 ].count + 1 )
   		ENDIF
   		SET delivery->tot_greater_37_wks = (delivery->tot_greater_37_wks + 1 )
  	ENDIF
 
  	IF ((size (delivery->rec[current_cnt ].baby ,5 ) = 1 ) )
   		IF ((delivery->rec[current_cnt ].gest_age_grtr_37_ind = 1 ) )
    		IF ((delivery->rec[current_cnt ].baby[1 ].vertex_ind = 1 ) )
     			IF ((delivery->rec[current_cnt ].primip_ind = 1 ) )
      				IF ((delivery->rec[current_cnt ].cs_ind = 1 ) )
       					SET delivery->cs_sing_term_ver_prim = (delivery->cs_sing_term_ver_prim + 1 )
      					ENDIF
      					IF ((delivery->rec[current_cnt ].prev_cs_ind = 0 ) )
       						SET delivery->primips_tot_birth = (delivery->primips_tot_birth + 1 )
       					IF ((delivery->rec[current_cnt ].baby[1 ].cs_ind = 1 ) )
        					SET delivery->primips_tot_birth_cs = (delivery->primips_tot_birth_cs + 1 )
       					ENDIF
      				ENDIF
     			ELSE
      				IF ((delivery->rec[current_cnt ].prev_cs_ind = 0 ) )
       					SET delivery->multips_tot_birth = (delivery->multips_tot_birth + 1 )
       					IF ((delivery->rec[current_cnt ].baby[1 ].cs_ind = 1 ) )
        					SET delivery->multips_tot_birth_cs = (delivery->multips_tot_birth_cs + 1 )
       					ENDIF
      				ENDIF
     			ENDIF
    		ENDIF
   		ENDIF
	ENDIF
ENDFOR
 
SET delivery->vbac_prior_cs_rate = rate_per (delivery->tot_vbac ,delivery->tot_prior_cs )
SET delivery->tot_cs_rate = rate_per (delivery->tot_cs ,delivery->tot_num_births )
SET delivery->tot_prior_cs_rate = rate_per (delivery->tot_prior_cs ,delivery->tot_num_births )
SET delivery->prior_single_cs_rate = rate_per (delivery->prior_single_cs ,delivery->tot_num_births)
SET delivery->vbac_attempt_rate = rate_per ((delivery->tot_vbac + delivery->tot_failed_vbac ) ,delivery->tot_num_births )
SET delivery->vbac_rate = rate_per (delivery->tot_vbac ,delivery->tot_num_births )
SET delivery->prior_repeat_cs_rate = rate_per (delivery->prior_repeat_cs ,delivery->tot_num_births)
SET delivery->tot_prim_cs_rate = rate_per (delivery->tot_prim_cs ,delivery->tot_num_mother_deliv )
SET delivery->tot_cpd_ftp_rate = rate_per (delivery->tot_cpd_ftp ,delivery->tot_num_births )
SET delivery->tot_fetal_distress_rate = rate_per (delivery->tot_fetal_distress ,delivery->tot_num_births )
SET delivery->tot_malpresentation_rate = rate_per (delivery->tot_malpresentation ,delivery->tot_num_births )
SET delivery->tot_reason_cs_other_rate = rate_per (delivery->tot_reason_cs_other ,delivery->tot_num_births )
SET delivery->cs_sing_term_ver_prim_rt = rate_per (delivery->cs_sing_term_ver_prim ,delivery->tot_num_births )
SET delivery->primips_tot_birth_cs_rate = rate_per (delivery->primips_tot_birth_cs ,delivery->primips_tot_birth )
SET delivery->multips_tot_birth_cs_rate = rate_per (delivery->multips_tot_birth_cs ,delivery->multips_tot_birth )
SET delivery->num_vacuum_rate = rate_per (delivery->num_vacuum ,delivery->tot_vag )
SET delivery->num_forceps_rate = rate_per (delivery->num_forceps ,delivery->tot_vag )
SET delivery->num_for_vac_rate = rate_per (delivery->num_for_vac ,delivery->tot_vag )
SET delivery->tot_op_vag_del_rate = rate_per (delivery->tot_op_vag_del ,delivery->tot_vag )
SET delivery->oxytocin_aug_rate = rate_per (delivery->oxytocin_aug ,delivery->tot_vag )
SET delivery->oxytocin_inductions_rate = rate_per (delivery->oxytocin_inductions ,delivery->tot_vag)
SET delivery->oxytocin_total_rate = rate_per (delivery->oxytocin_total ,delivery->tot_vag )
SET delivery->tot_epid_rate = rate_per (delivery->tot_epid ,delivery->tot_vag )
SET delivery->tot_epis_rate = rate_per (delivery->tot_epis ,delivery->tot_vag )
SET delivery->3_degree_lac_rate = rate_per (delivery->3_degree_lac ,delivery->tot_vag )
SET delivery->4_degree_lac_rate = rate_per (delivery->4_degree_lac ,delivery->tot_vag )
 
SUBROUTINE  rate_per (n ,d )
	RETURN (build (cnvtstring (((cnvtreal (n ) / cnvtreal (d ) ) * 100 ) ,11 ,1 ) ,"%" ) )
END ;Subroutine
 
#no_data
SET d0 = titlesection (rpt_render )
SET d0 = summarycountsection (rpt_render )
SET d0 = cesareansection (rpt_render )
SET d0 = vaginal_section (rpt_render )
SET reply->status_data.status = "S"
 
#exit_script
SET d0 = finalizereport ( $1 )
CALL echorecord (delivery )
FREE RECORD delivery
SET script_verson = "004 12/12/2012 ss026368"
END GO
 
