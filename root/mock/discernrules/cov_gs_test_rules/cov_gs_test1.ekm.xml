<?xml version="1.0" encoding="ASCII"?>
<EM:ExpertModule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:EM="http:///com.cerner.expert/expertmodule/1.0.0" moduleName="COV_GS_TEST1">
  <information>
    <runtimeInformation versionString="001.009" externalFileName="COV_GS_TEST1" lastUpdated="2021-06-17T11:52:09.000-0400" validtionType="EXPIRED" title="COV_GS_TEST1" reconcileFlag="1" reconcileDate="2021-06-17T11:52:10.000-0400">
      <duration start="2020-04-10T00:00:00.000-0400" end="2100-12-31T23:59:59.000-0500"/>
      <updateUser userName="PARAMASIVAM, GEETHA"/>
    </runtimeInformation>
    <documentation author="gsaravan" institution="COVENANT HEALTH" specialist="GEETHA PARAMASIVAM" purpose="1)BH would like a rule to fire every 7 days starting from patient admission and then retrigger every 7 days after that.&#xD;&#xA;2)The order and task will be called &#x201c;BH Individual Plan of Care  Review&#x201d; and are already built in CERT.&#xD;&#xA;3)This is only for MHHS Senior Behavioral and Parkwest Behavioral Health.&#xD;&#xA;4)Task will go to: BH Discharge planner, BH Therapist, and BH Nurse Supervisor and BH Nurse" explanation="1)BH would like a rule to fire every 7 days starting from patient admission and then retrigger every 7 days after that.&#xD;&#xA;2)The order and task will be called &#x201c;BH Individual Plan of Care  Review&#x201d; and are already built in CERT.&#xD;&#xA;3)This is only for MHHS Senior Behavioral and Parkwest Behavioral Health.&#xD;&#xA;4)Task will go to: BH Discharge planner, BH Therapist, and BH Nurse Supervisor and BH Nurse"/>
  </information>
  <expertTemplates>
    <events>
      <event name=""/>
      <event name="ADDPROBLEM"/>
      <event name="ADDTOSCRATCHPAD"/>
      <event name="ALLERGY_EVENT"/>
      <event name="AP_ORDER_EVENT"/>
      <event name="BB_RESULT_EVENT"/>
      <event name="CBTFLEXORDERS"/>
      <event name="CHART_SERVER_EVENT"/>
      <event name="CLINICALTRIALSCREEN"/>
      <event name="CLINICAL_EVENT"/>
      <event name="CLOSECHART"/>
      <event name="COLLECTION_EVENT"/>
      <event name="DCP_CN_TASK_UPD"/>
      <event name="DCP_MODTASK_EVENT"/>
      <event name="DCP_PW_COND"/>
      <event name="DCP_PW_OUTCOME_EVENT"/>
      <event name="DIAGNOSIS_EVENT"/>
      <event name="EKS_FORMAT"/>
      <event name="EKS_SYNC_TEST01"/>
      <event name="EKS_TEST_02"/>
      <event name="EKS_TEST_EVENT"/>
      <event name="EKS_TEST_EVENT01"/>
      <event name="ENSURE_EVENT"/>
      <event name="EXPERT_EVENT"/>
      <event name="HEALTHE_EVENT"/>
      <event name="HEALTH_MAINT_QUAL_EVENT"/>
      <event name="HIM_ADD_REQUEST"/>
      <event name="HIM_ADMIT_EVENT"/>
      <event name="HIM_PATIENT_INFO_REQUEST"/>
      <event name="HIM_TEST_EVENT"/>
      <event name="HL7_EVENT"/>
      <event name="MB_EXPEDITE"/>
      <event name="MB_RESULT_EVENT"/>
      <event name="MB_SCRIPTED_WORKUPS"/>
      <event name="MB_SUSCEPTIBILITY"/>
      <event name="MDI_RESULT_EVENT"/>
      <event name="MEDCHARTACTIVATE"/>
      <event name="MPI_ADT"/>
      <event name="OPENCHART"/>
      <event name="ORDER_EVENT"/>
      <event name="ORDER_PRO_TEST1"/>
      <event name="PATIENT_EVENT"/>
      <event name="PCA_EXPERT_EVENT"/>
      <event name="Person_Transaction"/>
      <event name="PFT_Add_Account"/>
      <event name="PFT_ADJ_WO"/>
      <event name="PFT_CHARGE_EVENT"/>
      <event name="pft_check_amount"/>
      <event name="PFT_VEHICLE"/>
      <event name="PNTFLEXREFRANGE"/>
      <event name="POWERPLANFLEX"/>
      <event name="PROBLEM_EVENT"/>
      <event name="PROFIT_1450_CLAIM_EVENT"/>
      <event name="PROFIT_1500_CLAIM_EVENT"/>
      <event name="PROVIDER_CHG_EVENT"/>
      <event name="PROVIDE_EVENT"/>
      <event name="PWRCHRT_ADD_ORDER"/>
      <event name="RESULT_EVENT"/>
      <event name="RESULT_EVENT_CSM"/>
      <event name="RESULT_EVENT_TEST"/>
      <event name="SCH_ACTION_EVENT"/>
      <event name="SIGNORDER"/>
      <event name="SN New Pref Card Created"/>
      <event name="SN_CASE_CHECK_IN_EVENT"/>
      <event name="SN_CASE_EVENT"/>
      <event name="SN_CASE_SCHEDULE_EVENT"/>
      <event name="SN_DOCUMENT_OPEN"/>
      <event name="SN_DOCUMENT_STATE"/>
      <event name="SN_FINALIZE_DOC_EVENT"/>
      <event name="SN_PROCEDURE_SCHEDULE"/>
      <event name="SN_SAVE_PROCEDURE"/>
      <event name="SN_TEST_EVENT"/>
      <event name="SOCIAL_HISTORY_ADD"/>
      <event name="SYNCHEVENT"/>
      <event name="TOCFLEX"/>
      <event name="TOUCHOPENCHART"/>
    </events>
    <evokeTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_ORDER_E" definition="the triggering request contains an order ORD_METHOD OPT_ORDERS whose ordering physician OPT_QUALIFIER in OPT_ORDDOC" description="Orderable, ordering physician" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.36 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.61 //@expertTemplates/@events/@event.73 //@expertTemplates/@events/@event.75" optimizable="true" reconcilable="true">
        <keywords>ORDER</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="ORD_METHOD" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true" reconcileScript="N/A">
          <statements dependency="ORD_METHOD" statement="execute eks_t_db_ref_help &quot;HELPNEWORDMETHOD^&quot; go"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_ORDERS" dataType="CHARACTER" controlType="LISTBOX" validationType="READ_ONLY" dependency="ORD_METHOD" optimizable="true" reconcileScript="eks_p_ord_method_orders" keyFieldIndex="2">
          <statements dependency="OPT_ORDERS" statement="execute eks_t_db_ref_help ConCat(&quot;HELPCATALOGTYPE^&quot;, PAR1) go"/>
          <statements dependency="OPT_ORDERS" statement="execute eks_t_db_ref_help ConCat(&quot;HELPORDALPHA^&quot;, PAR1) go"/>
          <statements dependency="OPT_ORDERS" statement="execute eks_t_db_ref_help ConCat(&quot;HELPORDERS^&quot;, PAR1) go"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="OPT_QUALIFIER" dataType="CHARACTER" validationType="READ_ONLY" reconcileScript="N/A">
          <stringTable>
            <column value="is"/>
            <column value="is"/>
          </stringTable>
          <stringTable>
            <column value="is not"/>
            <column value="is not"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_ORDDOC" dataType="CHARACTER" controlType="LISTBOX" validationType="READ_ONLY" reconcileScript="eks_p_orddoc" keyFieldIndex="2">
          <statements dependency="OPT_ORDDOC" statement="EKS_ABC_REFHELP &quot; &quot; go"/>
          <statements dependency="OPT_ORDDOC" statement="select &#xD;&#xA; if (par1 =&quot;OTHER&quot;)&#xD;&#xA; from prsnl pl where pl.name_full_formatted != &quot; &quot; and &#xD;&#xA;      pl.name_full_formatted not between &quot;0*&quot; and &quot;Z*&quot; and&#xD;&#xA;      pl.active_ind = 1 and  pl.physician_ind = 1&#xD;&#xA; elseif (par1=&quot;ALL&quot;)&#xD;&#xA;  from prsnl pl where pl.name_full_formatted != &quot; &quot;  and &#xD;&#xA;      pl.active_ind=1 and  pl.physician_ind = 1&#xD;&#xA; else&#xD;&#xA;  from prsnl pl where pl.physician_ind = 1 and pl.active_ind=1&#xD;&#xA;      and cnvtupper(pl.name_full_formatted)=patstring(concat(substring(1,1,par1),&quot;*&quot;))&#xD;&#xA; endif&#xD;&#xA;  pl.name_full_formatted,&#xD;&#xA;  _hidden=pl.person_id&#xD;&#xA; order name_full_formatted"/>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_DEBUGEKM_E" definition="Turn debug messaging DEBUG_STATUS" description="Turn debug messaging on or off" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.4 //@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.9 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.11 //@expertTemplates/@events/@event.13 //@expertTemplates/@events/@event.16 //@expertTemplates/@events/@event.23 //@expertTemplates/@events/@event.26 //@expertTemplates/@events/@event.27 //@expertTemplates/@events/@event.28 //@expertTemplates/@events/@event.31 //@expertTemplates/@events/@event.32 //@expertTemplates/@events/@event.33 //@expertTemplates/@events/@event.34 //@expertTemplates/@events/@event.36 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.39 //@expertTemplates/@events/@event.41 //@expertTemplates/@events/@event.42 //@expertTemplates/@events/@event.45 //@expertTemplates/@events/@event.44 //@expertTemplates/@events/@event.48 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.50 //@expertTemplates/@events/@event.51 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.57 //@expertTemplates/@events/@event.58 //@expertTemplates/@events/@event.61 //@expertTemplates/@events/@event.62 //@expertTemplates/@events/@event.63 //@expertTemplates/@events/@event.64 //@expertTemplates/@events/@event.65 //@expertTemplates/@events/@event.66 //@expertTemplates/@events/@event.67 //@expertTemplates/@events/@event.68 //@expertTemplates/@events/@event.69 //@expertTemplates/@events/@event.70 //@expertTemplates/@events/@event.72 //@expertTemplates/@events/@event.73 //@expertTemplates/@events/@event.74 //@expertTemplates/@events/@event.75 //@expertTemplates/@events/@event.47" reconcilable="true" alwaysTrue="true">
        <keywords>UTILITY</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="DEBUG_STATUS" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true" reconcileScript="N/A" keyFieldIndex="2">
          <statements dependency="DEBUG_STATUS" statement="select debug_status = if (d.seq =  1) &quot;On for subsequent Evoke Templates&quot;&#xD;&#xA; elseif (d.seq = 2) &quot;Off for subsequent Evoke Templates&quot;&#xD;&#xA; elseif (d.seq = 3) &quot;On for all Logic Templates&quot;&#xD;&#xA; elseif (d.seq = 4) &quot;On for all Action Templates&quot;&#xD;&#xA; elseif (d.seq = 5) &quot;On for all Logic and Action Templates&quot;&#xD;&#xA; elseif (d.seq = 6) &quot;To FullAudit for this module only&quot;&#xD;&#xA; elseif (d.seq = 7) &quot;Additional EKSDATA logging&quot;&#xD;&#xA;ENDIF,&#xD;&#xA;_hidden = if (d.seq = 1) 1&#xD;&#xA; elseif (d.seq=2) 0&#xD;&#xA; elseif (d.seq=3) 2&#xD;&#xA; elseif (d.seq=4) 3&#xD;&#xA; elseif (d.seq=5) 4&#xD;&#xA; elseif (d.seq=6) 5&#xD;&#xA; elseif (d.seq=7) 6&#xD;&#xA;endif&#xD;&#xA;&#xD;&#xA;FROM (DUMMYT D WITH SEQ = VALUE(7))"/>
        </arguments>
      </templateDefinitions>
    </evokeTemplates>
    <logicTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_STOP_LOGIC_L" definition="the following templates are false, MODE logic evaluation" description="Used to control efficiency of Action Group rules" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.9 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.11 //@expertTemplates/@events/@event.13 //@expertTemplates/@events/@event.16 //@expertTemplates/@events/@event.23 //@expertTemplates/@events/@event.32 //@expertTemplates/@events/@event.36 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.39 //@expertTemplates/@events/@event.41 //@expertTemplates/@events/@event.42 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.50 //@expertTemplates/@events/@event.51 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.57 //@expertTemplates/@events/@event.58 //@expertTemplates/@events/@event.61 //@expertTemplates/@events/@event.72 //@expertTemplates/@events/@event.73 //@expertTemplates/@events/@event.74 //@expertTemplates/@events/@event.75" reconcilable="true" alwaysTrue="true">
        <keywords>UTILITY</keywords>
        <arguments xsi:type="EM:FixedListArgument" name="MODE" dataType="CHARACTER" validationType="READ_ONLY" reconcileScript="N/A">
          <defaultValue xsi:type="EM:StringValue" value="STOP"/>
          <stringTable>
            <column value="STOP"/>
            <column value=" "/>
          </stringTable>
          <stringTable>
            <column value="CONTINUE"/>
            <column value=" "/>
          </stringTable>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_LOGIC_TRUE" definition="LOGIC is true" description="Always true" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.9 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.11 //@expertTemplates/@events/@event.13 //@expertTemplates/@events/@event.16 //@expertTemplates/@events/@event.23 //@expertTemplates/@events/@event.24 //@expertTemplates/@events/@event.36 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.39 //@expertTemplates/@events/@event.41 //@expertTemplates/@events/@event.42 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.50 //@expertTemplates/@events/@event.51 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.57 //@expertTemplates/@events/@event.58 //@expertTemplates/@events/@event.60 //@expertTemplates/@events/@event.61 //@expertTemplates/@events/@event.72 //@expertTemplates/@events/@event.73 //@expertTemplates/@events/@event.74 //@expertTemplates/@events/@event.75" reconcilable="true" alwaysTrue="true">
        <keywords>UTILITY</keywords>
        <arguments name="LOGIC" dataType="CHARACTER" reconcileScript="N/A">
          <defaultValue xsi:type="EM:StringValue" value="@quot;LOGIC@quot;"/>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_ORDER_INCOMING_L" definition="the triggering request contains an order ORD_METHOD OPT_ORDERS whose ordering physician OPT_QUALIFIER in OPT_ORDDOC and OPT_ORDER_DETAIL OPT_DETAIL_QUALIFIER OPT_LIST" description="Incoming orderable, attributes" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.36 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.61 //@expertTemplates/@events/@event.73 //@expertTemplates/@events/@event.75" optimizable="true" reconcilable="true">
        <keywords>ORDER</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="ORD_METHOD" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true" reconcileScript="N/A">
          <statements dependency="ORD_METHOD" statement="execute eks_t_db_ref_help &quot;HELPNEWORDMETHOD^&quot; go"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_ORDERS" dataType="CHARACTER" controlType="LISTBOX" validationType="READ_ONLY" dependency="ORD_METHOD" optimizable="true" reconcileScript="eks_p_ord_method_orders" keyFieldIndex="2">
          <statements dependency="OPT_ORDERS" statement="execute eks_t_db_ref_help ConCat(&quot;HELPCATALOGTYPE^&quot;, PAR1) go&#xD;&#xA;"/>
          <statements dependency="OPT_ORDERS" statement="execute eks_t_db_ref_help ConCat(&quot;HELPORDALPHA^&quot;, PAR1) go&#xD;&#xA;"/>
          <statements dependency="OPT_ORDERS" statement="execute eks_t_db_ref_help ConCat(&quot;HELPORDERS^&quot;, PAR1) go"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="OPT_QUALIFIER" dataType="CHARACTER" validationType="READ_ONLY" reconcileScript="N/A">
          <stringTable>
            <column value="is"/>
            <column value="is"/>
          </stringTable>
          <stringTable>
            <column value="is not"/>
            <column value="is not"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_ORDDOC" dataType="CHARACTER" controlType="LISTBOX" validationType="READ_ONLY" reconcileScript="eks_p_orddoc" keyFieldIndex="2">
          <statements dependency="OPT_ORDDOC" statement="EKS_ABC_REFHELP &quot; &quot; go"/>
          <statements dependency="OPT_ORDDOC" statement="select &#xD;&#xA; if (par1 =&quot;OTHER&quot;)&#xD;&#xA; from prsnl pl where pl.name_full_formatted != &quot; &quot; and &#xD;&#xA;      pl.name_full_formatted not between &quot;0*&quot; and &quot;Z*&quot; and&#xD;&#xA;      pl.active_ind = 1 and  pl.physician_ind = 1&#xD;&#xA; elseif (par1=&quot;ALL&quot;)&#xD;&#xA;  from prsnl pl where pl.name_full_formatted != &quot; &quot;  and &#xD;&#xA;      pl.active_ind=1 and  pl.physician_ind = 1&#xD;&#xA; else&#xD;&#xA;  from prsnl pl where pl.physician_ind = 1 and pl.active_ind=1&#xD;&#xA;      and cnvtupper(pl.name_full_formatted)=patstring(concat(substring(1,1,par1),&quot;*&quot;))&#xD;&#xA; endif&#xD;&#xA;  pl.name_full_formatted,&#xD;&#xA;  _hidden=pl.person_id&#xD;&#xA; order name_full_formatted"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_ORDER_DETAIL" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" reconcileScript="N/A">
          <defaultValue xsi:type="EM:StringValue" value="FUTURE USE"/>
          <statements dependency="OPT_ORDER_DETAIL" statement=""/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="OPT_DETAIL_QUALIFIER" dataType="CHARACTER" reconcileScript="N/A">
          <defaultValue xsi:type="EM:StringValue" value="FUTURE USE"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_LIST" dataType="CHARACTER" controlType="LISTBOX" validationType="READ_ONLY" dependency="OPT_ORDER_DETAIL" reconcileScript="N/A" keyFieldIndex="2">
          <statements dependency="OPT_LIST" statement="execute eks_t_db_ref_help ConCat(&quot;HELPCATALOGTYPE^&quot;, PAR1) go"/>
        </arguments>
      </templateDefinitions>
    </logicTemplates>
    <actionTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_ALERT_HTML_A" definition="Send alert with title OPT_TITLE from html file HTML_FILE with parameters OPT_OVERRIDE_REASON, OPT_OVERRIDE_DEFAULT, OPT_PROBLEMS, OPT_DEFAULT_FIRST_PROBLEM, OPT_PROB_CONFIRMATION, OPT_PROB_CLASSIFICATION, OPT_FREETEXT_PARAM, OPT_OK_BUTTON_NAME, OPT_LINK." description="Interactive display of HTML file." eventDependency="//@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.61 //@expertTemplates/@events/@event.73 //@expertTemplates/@events/@event.75" optimizable="true" reconcilable="true">
        <keywords>ALERT</keywords>
        <arguments name="OPT_TITLE" dataType="CHARACTER" reconcileScript="N/A"/>
        <arguments name="HTML_FILE" dataType="CHARACTER" required="true" reconcileScript="eks_p_findfile"/>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_OVERRIDE_REASON" dataType="CHARACTER" controlType="LISTBOX" validationType="READ_ONLY" optimizable="true" reconcileScript="eks_p_codeset_cki_refhelp &quot;800&quot;,&quot;CKI&quot;,&quot;*ALL,*NONE&quot;" keyFieldIndex="2">
          <statements dependency="OPT_OVERRIDE_REASON" statement="eks_codeset_cki_refhelp &quot;800&quot;,&quot;CKI&quot;,&quot;*ALL,*NONE&quot; go"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="OPT_OVERRIDE_DEFAULT" dataType="CHARACTER" validationType="READ_ONLY" reconcileScript="N/A">
          <stringTable>
            <column value="NONE"/>
            <column value="None"/>
          </stringTable>
          <stringTable>
            <column value="FIRST"/>
            <column value="First override reason on list"/>
          </stringTable>
          <stringTable>
            <column value="FREETEXT"/>
            <column value="Default to free text reason"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_PROBLEMS" dataType="CHARACTER" controlType="NOMENCLATURE" reconcileScript="eks_p_nomen_recon 0"/>
        <arguments xsi:type="EM:FixedListArgument" name="OPT_DEFAULT_FIRST_PROBLEM" dataType="CHARACTER" validationType="READ_ONLY" reconcileScript="N/A">
          <defaultValue xsi:type="EM:StringValue" value="DISABLED"/>
          <stringTable>
            <column value="ENABLED"/>
            <column value="ENABLED"/>
          </stringTable>
          <stringTable>
            <column value="DISABLED"/>
            <column value="DISABLED"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_PROB_CONFIRMATION" dataType="CHARACTER" controlType="REFERENTIAL" validationType="REFERENTIAL" optimizable="true" reconcileScript="eks_p_codeset_cki_refhelp &quot;12031&quot;,&quot;CDF&quot;,&quot;&quot;" keyFieldIndex="2">
          <statements dependency="OPT_PROB_CONFIRMATION" statement="eks_codeset_cki_refhelp &quot;12031&quot;,&quot;CDF&quot;,&quot;&quot; go"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="OPT_PROB_CLASSIFICATION" dataType="CHARACTER" controlType="REFERENTIAL" validationType="REFERENTIAL" optimizable="true" reconcileScript="eks_p_codeset_cki_refhelp &quot;12033&quot;,&quot;CDF&quot;,&quot;&quot;" keyFieldIndex="2">
          <statements dependency="OPT_PROB_CLASSIFICATION" statement="eks_codeset_cki_refhelp &quot;12033&quot;,&quot;CDF&quot;,&quot;&quot; go"/>
        </arguments>
        <arguments name="OPT_FREETEXT_PARAM" dataType="CHARACTER" reconcileScript="N/A"/>
        <arguments name="OPT_OK_BUTTON_NAME" dataType="CHARACTER" reconcileScript="N/A"/>
        <arguments name="OPT_LINK" dataType="LINK" controlType="TEMPLATE_REFERENCE" reconcileScript="N/A"/>
      </templateDefinitions>
    </actionTemplates>
  </expertTemplates>
  <ruleDefinition>
    <evokeSection>
      <evokes evokeEvent="//@expertTemplates/@events/@event.61">
        <logicExpression xsi:type="EM:InfixExpression">
          <leftExpression xsi:type="EM:Antecedent" id="E1" template="EKS_ORDER_E">
            <facts argument="ORD_METHOD">
              <value xsi:type="EM:StringValue" value="whose primary mnemonic is"/>
            </facts>
            <facts argument="OPT_ORDERS">
              <value xsi:type="EM:ListValue">
                <values xsi:type="EM:ListValue">
                  <values xsi:type="EM:CustomValue" hideDisplay="true">
                    <customValue xsi:type="EM:StringValue" value="MUL.ORD!d03826"/>
                  </values>
                  <values xsi:type="EM:StringValue" value="traMADol"/>
                  <values xsi:type="EM:ListValue">
                    <values xsi:type="EM:CustomValue" hideDisplay="true">
                      <customValue xsi:type="EM:StringValue" value="2516.0|whose primary mnemonic is"/>
                    </values>
                    <values xsi:type="EM:CustomValue" hideDisplay="true">
                      <customValue xsi:type="EM:StringValue" value="T|2516.0|whose primary mnemonic is"/>
                    </values>
                  </values>
                </values>
              </value>
            </facts>
            <facts argument="OPT_QUALIFIER">
              <value xsi:type="EM:StringValue"/>
            </facts>
            <facts argument="OPT_ORDDOC">
              <value xsi:type="EM:StringValue"/>
            </facts>
          </leftExpression>
          <rightExpression xsi:type="EM:Antecedent" id="E2" template="EKS_DEBUGEKM_E">
            <facts argument="DEBUG_STATUS">
              <value xsi:type="EM:ListValue">
                <values xsi:type="EM:ListValue">
                  <values xsi:type="EM:CustomValue" hideDisplay="true">
                    <customValue xsi:type="EM:StringValue" value="5"/>
                  </values>
                  <values xsi:type="EM:StringValue" value="To FullAudit for this module only"/>
                </values>
              </value>
            </facts>
          </rightExpression>
        </logicExpression>
      </evokes>
    </evokeSection>
    <logicSection>
      <logicExpression xsi:type="EM:InfixExpression">
        <leftExpression xsi:type="EM:Antecedent" id="L1" template="EKS_STOP_LOGIC_L">
          <facts argument="MODE">
            <value xsi:type="EM:StringValue" value="STOP"/>
          </facts>
        </leftExpression>
        <rightExpression xsi:type="EM:InfixExpression">
          <leftExpression xsi:type="EM:Antecedent" id="L2" template="EKS_LOGIC_TRUE">
            <facts argument="LOGIC">
              <value xsi:type="EM:StringValue" value="@quot;LOGIC@quot;"/>
            </facts>
          </leftExpression>
          <rightExpression xsi:type="EM:Antecedent" id="L3" template="EKS_ORDER_INCOMING_L">
            <facts argument="ORD_METHOD">
              <value xsi:type="EM:StringValue" value="whose primary mnemonic is"/>
            </facts>
            <facts argument="OPT_ORDERS">
              <value xsi:type="EM:ListValue">
                <values xsi:type="EM:ListValue">
                  <values xsi:type="EM:CustomValue" hideDisplay="true">
                    <customValue xsi:type="EM:StringValue" value="MUL.ORD!d03826"/>
                  </values>
                  <values xsi:type="EM:StringValue" value="traMADol"/>
                  <values xsi:type="EM:ListValue">
                    <values xsi:type="EM:CustomValue" hideDisplay="true">
                      <customValue xsi:type="EM:StringValue" value="2516.0|whose primary mnemonic is"/>
                    </values>
                    <values xsi:type="EM:CustomValue" hideDisplay="true">
                      <customValue xsi:type="EM:StringValue" value="T|2516.0|whose primary mnemonic is"/>
                    </values>
                  </values>
                </values>
              </value>
            </facts>
            <facts argument="OPT_QUALIFIER">
              <value xsi:type="EM:StringValue"/>
            </facts>
            <facts argument="OPT_ORDDOC">
              <value xsi:type="EM:StringValue"/>
            </facts>
            <facts argument="OPT_ORDER_DETAIL">
              <value xsi:type="EM:StringValue" value="FUTURE USE"/>
            </facts>
            <facts argument="OPT_DETAIL_QUALIFIER">
              <value xsi:type="EM:StringValue" value="FUTURE USE"/>
            </facts>
            <facts argument="OPT_LIST">
              <value xsi:type="EM:StringValue"/>
            </facts>
          </rightExpression>
        </rightExpression>
      </logicExpression>
    </logicSection>
    <actionSection>
      <action xsi:type="EM:ActionExpression">
        <logicExpression xsi:type="EM:Antecedent" id="A1" template="EKS_ALERT_HTML_A">
          <facts argument="OPT_TITLE">
            <value xsi:type="EM:StringValue" value="STK Antithrombotic at Discharge"/>
          </facts>
          <facts argument="HTML_FILE">
            <value xsi:type="EM:StringValue" value="cer_install:rule_stk_antithrm_dschmed.html"/>
          </facts>
          <facts argument="OPT_OVERRIDE_REASON">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="OPT_OVERRIDE_DEFAULT">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="OPT_PROBLEMS">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="OPT_DEFAULT_FIRST_PROBLEM">
            <value xsi:type="EM:StringValue" value="DISABLED"/>
          </facts>
          <facts argument="OPT_PROB_CONFIRMATION">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="OPT_PROB_CLASSIFICATION">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="OPT_FREETEXT_PARAM">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="OPT_OK_BUTTON_NAME">
            <value xsi:type="EM:StringValue" value="OK"/>
          </facts>
          <facts argument="OPT_LINK">
            <value xsi:type="EM:AntecedentReference"/>
          </facts>
        </logicExpression>
      </action>
    </actionSection>
  </ruleDefinition>
</EM:ExpertModule>
