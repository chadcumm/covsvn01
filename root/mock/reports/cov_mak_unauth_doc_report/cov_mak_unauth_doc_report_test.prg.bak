/*****************************************************************************
  Covenant Health Information Technology
  Knoxville, Tennessee
******************************************************************************

	Author:				Chad Cummings
	Date Written:		03/01/2019
	Solution:			
	Source file name:	cov_mak_unauth_doc_report.prg
	Object name:		cov_mak_unauth_doc_report
	Request #:			6658, 8810

	Program purpose:

	Executing from:		CCL

 	Special Notes:		Called by ccl program(s).

******************************************************************************
  GENERATED MODIFICATION CONTROL LOG
******************************************************************************

Mod 	Mod Date	  Developer				      Comment
--- 	----------	--------------------	--------------------------------------
001 	08/26/2019  Chad Cummings
002		11/14/2019	Todd A. Blanchard		Added prompt for facility.
											Changed date flag.
											Adjusted final select statement.
003     06/03/2020	Chad Cummings			Added document status
004     06/03/2020	Chad Cummings			Added event_id
005     10/21/2020	Chad Cummings			updated cbr to select for parent ce and then otg reference
006		11/13/2020	Todd A. Blanchard		Added prompt for authentication flag.
											Added logic to handle authentication process.
******************************************************************************/

drop program cov_mak_unauth_doc_report_test:dba go
create program cov_mak_unauth_doc_report_test:dba

prompt 
	"Output to File/Printer/MINE" = "MINE"              ;* Enter or select the printer or file name to send this report to.
	, "Facility" = 0
	, "Discharge Start Date" = "01-MAY-2018 00:00:00"
	, "Discharge End Date" = "SYSDATE"
	, "Authenticate?" = 0 

with OUTDEV, facility, beg_dt_tm, end_dt_tm, auth_flag


call echo(build("loading script:",curprog))
set nologvar = 0	;do not create log = 1		, create log = 0
set noaudvar = 0	;do not create audit = 1	, create audit = 0
%i ccluserdir:cov_custom_ccl_common.inc

call writeLog(build2("************************************************************"))
call writeLog(build2("* START Custom Section  ************************************"))

if (not(validate(reply,0)))
record  reply
(
	1 text = vc
	1 status_data
	 2 status = c1
	 2 subeventstatus[1]
	  3 operationname = c15
	  3 operationstatus = c1
	  3 targetobjectname = c15
	  3 targetobjectvalue = c100
)
endif

set reply->status_data.status = "F"

call set_codevalues(null)
call check_ops(null)

free set t_rec
record t_rec
(
	1 cnt			= i4
	1 prompt_outdev = vc
)

free set him_request
record him_request
(
  1 sort_flag = i2
  1 date_flag = i2
  1 start_dt_tm = dq8
  1 end_dt_tm = dq8
  1 org_qual[*]
    2 organization_id = f8
  1 debug_ind = i2
)

free set him_temp
record him_temp
(
 1  qual[*]
     2  encntr_id               = f8
     2  person_id               = f8
     2  mrn_formatted           = c20
     2  fin_formatted           = c20
     2  name_full_formatted     = c35
     2  encntr_type_disp        = c15
     2  med_service_cd			= f8
     2  loc_facility_cd			= f8
     2  loc_nurse_unit_cd		= f8
     2  visit_age               = i2
     2  visit_alloc_dt_tm       = dq8
     2  disch_dt_tm             = dq8
     2  tdo                     = c20
     2  organization_id         = f8
     2  org_name                = vc
     2  doc_qual[*]
         3 clinical_event_id    = f8
         3 event_disp           = c20
         3 event_cd				= f8
         3 status_cd			= f8 ;003
         3 verified_prsnl_id    = f8
         3 verified_prsnl_pos   = vc ;005
         3 verified_prsnl  		= vc
         3 valid_from_dt_tm     = dq8
         3 event_id				= f8 ;004
         3 scanned_ind			= i2
)

call addEmailLog("chad.cummings@covhlth.com")

; set parameters
set him_request->sort_flag = 1
set him_request->date_flag = 2 ;002
set him_request->start_dt_tm = cnvtdatetime($beg_dt_tm)
set him_request->end_dt_tm = cnvtdatetime($end_dt_tm)
set him_request->debug_ind = 1

set t_rec->prompt_outdev = $OUTDEV

if (program_log->run_from_ops = 1)
	set him_request->start_dt_tm = cnvtdatetime("01-MAY-2018 00:00:00")
	set him_request->end_dt_tm = cnvtdatetime(datetimefind(cnvtlookbehind("1,D",cnvtdatetime(curdate,curtime3)), 'D', 'E', 'E'))
	set t_rec->prompt_outdev = 	concat(	 "cclscratch:"
			,trim("cov_mak_unauth_doc")
			,"_"
			,format(sysdate,"mmddyyyy;;q")
			,".csv"
		)

endif

;002
if (substring(1, 1, reflect(parameter(parameter2($facility), 0))) = "L") ; multiple values selected
	set num = 1
	
	while (num > 0)
		set par = reflect(parameter(parameter2($facility), num))
		
		if (par = " ")
			; no more items in list for parameter
			set num = 0
		else
			; valid item in list for parameter
			call alterlist(him_request->org_qual, num)
			
			set him_request->org_qual[num].organization_id = parameter(parameter2($facility), num)
			
			set num += 1
		endif
	endwhile     
else ; single value selected
	set num = 1
	
	set par = reflect(parameter(parameter2($facility), num))
	
	if (par != " ")
		call alterlist(him_request->org_qual, num)
	
		set him_request->org_qual[num].organization_id = parameter(parameter2($facility), num) 
	endif    
endif


call writeLog(build2("* END   Custom Section  ************************************"))
call writeLog(build2("************************************************************"))


call echo(build2("* START Execute cov_mak_unauth_doc_driver ******************"))
call writeLog(build2("* START Execute cov_mak_unauth_doc_driver ******************"))

free set reply
record reply
(
  1 file_name = vc
%i cclsource:status_block.inc
)

execute cov_mak_unauth_doc_driver with replace(request,him_request), replace(temp,him_temp)

if (size(him_temp->qual,5) <= 0)
	call echo(build2("* No results found from cov_mak_unauth_doc_driver ******************"))
	call writeLog(build2("* No results found from cov_mak_unauth_doc_driver ******************"))
	set reply->status_data.status = "Z"
	go to exit_script
endif

call echo(build2("* END   Execute cov_mak_unauth_doc_driver *******************"))
call writeLog(build2("* END   Execute cov_mak_unauth_doc_driver *******************"))

call echo(build2("* START Getting Encounter Information ***********************"))
call writeLog(build2("* START Getting Encounter Information ***********************"))

select into "nl:"
from
	 encounter e
	,(dummyt d1 with seq=value(size(him_temp->qual,5)))
plan d1
join e
	where e.encntr_id = him_temp->qual[d1.seq].encntr_id
order by
	e.encntr_id
head e.encntr_id
	him_temp->qual[d1.seq].med_service_cd = e.med_service_cd
	him_temp->qual[d1.seq].loc_facility_cd = e.loc_facility_cd
	him_temp->qual[d1.seq].loc_nurse_unit_cd = e.loc_building_cd
with nocounter

call echo(build2("* END   Getting Encounter Information ***********************"))
call writeLog(build2("* END   Getting Encounter Information ***********************"))

call echo(build2("* START Getting Document Information ************************"))
call writeLog(build2("* START Getting Document Information ************************"))

select into "nl:"
from
	 clinical_event ce
	,(dummyt d1 with seq=size(him_temp->qual,5))
	,(dummyt d2 with seq=1)
plan d1
	where maxrec(d2,size(him_temp->qual[d1.seq].doc_qual,5))
join d2
join ce
	where ce.clinical_event_id = him_temp->qual[d1.seq].doc_qual[d2.seq].clinical_event_id
order by
	ce.clinical_event_id
head ce.clinical_event_id
	 him_temp->qual[d1.seq].doc_qual[d2.seq].event_cd = ce.event_cd
	 him_temp->qual[d1.seq].doc_qual[d2.seq].status_cd = ce.result_status_cd ;003
	 him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl_id = ce.verified_prsnl_id
	 if (him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl_id = 0.0)
	 	him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl_id = ce.performed_prsnl_id
	 endif
with nocounter

call echo(build2("* END   Getting Document Information ************************"))
call writeLog(build2("* END   Getting Document Information ************************"))

call echo(build2("* START Getting Document Author *****************************"))
call writeLog(build2("* START Getting Document Author *****************************"))

select into "nl:"
from
	 prsnl p1
	,(dummyt d1 with seq=size(him_temp->qual,5))
	,(dummyt d2 with seq=1)
plan d1
	where maxrec(d2,size(him_temp->qual[d1.seq].doc_qual,5))
join d2
join p1
	where p1.person_id = him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl_id
detail
	him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl = p1.name_full_formatted
	him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl_pos = uar_get_code_display(p1.position_cd) ;005
with nocounter

call echo(build2("* END   Getting Document Author *****************************"))
call writeLog(build2("* END   Getting Document Author *****************************"))


call echo(build2("* START Scanned Document Check *****************************"))
call writeLog(build2("* START Scanned Document Check *****************************"))

declare dOTG_var				= f8 with constant(uar_get_code_by("DISPLAYKEY", 25, "OTG"))
select into "nl:"
from 
	 ce_blob_result cbr
	,clinical_event ce ;004
	,(dummyt d1 with seq=size(him_temp->qual,5))
	,(dummyt d2 with seq=1)
plan d1
	where maxrec(d2,size(him_temp->qual[d1.seq].doc_qual,5))
join d2
join ce	;004
	where ce.parent_event_id = him_temp->qual[d1.seq].doc_qual[d2.seq].event_id ;004
;004 join cbr 
;004 where
;004	cbr.event_id = him_temp->qual[d1.seq].doc_qual[d2.seq].event_id
join cbr	;004
	where cbr.event_id = ce.event_id	;004
	and cbr.storage_cd = dOTG_var 
	and cbr.valid_until_dt_tm >= cnvtdatetime(curdate,curtime3)
    
detail
	him_temp->qual[d1.seq].doc_qual[d2.seq].scanned_ind = 1
	call writeLog(build2("! Found Scanned Document"))
	
with nocounter

call echo(build2("* END   Scanned Document Check *****************************"))
call writeLog(build2("* END   Scanned Document Check *****************************"))

;006
if ($auth_flag = 1)
	declare clinical_event_id = f8 with noconstant(0.0)
	
	call echo(build2("* START Scanned Document Authentication ********************"))
	call writeLog(build2("* START Scanned Document Authentication ********************"))
	
	for (i = 1 to size(him_temp->qual,5))
		for (j = 1 to size(him_temp->qual[i].doc_qual,5))
			if (him_temp->qual[i].doc_qual[j].scanned_ind = 1)
				set clinical_event_id = him_temp->qual[i].doc_qual[j].clinical_event_id
				
				call echo(build2("! Authenticate Scanned Document for CLINICAL EVENT ID: ", cnvtstring(clinical_event_id)))
				call writeLog(build2("! Authenticate Scanned Document for CLINICAL EVENT ID: ", cnvtstring(clinical_event_id)))
				
				execute cov_him_auth_by_ce_event "mine", clinical_event_id
			endif
		endfor
	endfor

	call echo(build2("* END   Scanned Document Authentication ********************"))
	call writeLog(build2("* END   Scanned Document Authentication ********************"))
else
	call echo(build2("* SKIP  Scanned Document Authentication ********************"))
	call writeLog(build2("* SKIP  Scanned Document Authentication ********************"))
endif

call echo(build2("* START Generating Output ***********************************"))
call writeLog(build2("* START Generating Output ***********************************"))

;002

select
		if (program_log->run_from_ops = 1)
			with nocounter, pcformat(^"^, ^,^, 1,0),format=stream,formfeed=none,maxcol=32000,format,nullreport
		else
			with nocounter,separator = " ", format,nullreport
		endif
	 into t_rec->prompt_outdev
	Facility				= trim(him_temp->qual[d1.seq].org_name, 3)
	, Unit					= trim(uar_get_code_display(him_temp->qual[d1.seq].loc_nurse_unit_cd), 3)
	, MRN					= trim(him_temp->qual[d1.seq].mrn_formatted, 3)
	, FIN					= trim(him_temp->qual[d1.seq].fin_formatted, 3)
	, Patient_Name			= trim(him_temp->qual[d1.seq].name_full_formatted, 3)
	, Encounter_Type		= trim(him_temp->qual[d1.seq].encntr_type_disp, 3)
	, Medical_Service		= trim(uar_get_code_display(him_temp->qual[d1.seq].med_service_cd), 3)
	, Visit_Age				= him_temp->qual[d1.seq].visit_age
	, Visit_Alloc_Date		= him_temp->qual[d1.seq].visit_alloc_dt_tm "mm/dd/yyyy;;d"
	, Discharge_Date		= him_temp->qual[d1.seq].disch_dt_tm "mm/dd/yyyy;;d"
	, Document_Type			= trim(uar_get_code_display(him_temp->qual[d1.seq].doc_qual[d2.seq].event_cd), 3)
	, Scanned_Image			= him_temp->qual[d1.seq].doc_qual[d2.seq].scanned_ind
	, Author				= substring(1,70,him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl)
	, Position				= substring(1,70,him_temp->qual[d1.seq].doc_qual[d2.seq].verified_prsnl_pos) ;005
	, Status			    = trim(uar_get_code_display( him_temp->qual[d1.seq].doc_qual[d2.seq].status_cd)) ;003
	, Event_ID				= him_temp->qual[d1.seq].doc_qual[d2.seq].event_id ;004
	, Clinical_Event_ID		= him_temp->qual[d1.seq].doc_qual[d2.seq].clinical_event_id
from
	 (dummyt d1 with seq=size(him_temp->qual,5))
	,(dummyt d2 with seq=1)
plan d1
	where maxrec(d2,size(him_temp->qual[d1.seq].doc_qual,5))
join d2
order by
	 him_temp->qual[d1.seq].fin_formatted
	,him_temp->qual[d1.seq].doc_qual[d2.seq].valid_from_dt_tm
with nocounter, format, separator=" "		

if (program_log->run_from_ops = 1)
	execute cov_astream_file_transfer "cclscratch",replace(t_rec->prompt_outdev,"cclscratch:",""),"Extracts/HIM","CP" 
	execute cov_astream_file_transfer "cclscratch",replace(t_rec->prompt_outdev,"cclscratch:",""),"","CP" 
endif
	
call echo(build2("* END   Generating Output ***********************************"))
call writeLog(build2("* END   Generating Output ***********************************"))

set reply->status_data.status = "S"
	
call writeLog(build2("*************************************************************"))
call writeLog(build2("* START Custom   ************************************"))
call writeLog(build2("* END   Custom   ************************************"))
call writeLog(build2("************************************************************"))

#exit_script
call exitScript(null)
;call echorecord(t_rec)
;call echorecord(code_values)
;call echorecord(program_log)
;call echorecord(him_request)
;call echorecord(him_temp)

end
go
